
POVTest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00004074  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  00004074  000040e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00002508  00000000  00000000  000040f0  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000a3a  00000000  00000000  000065f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  00007032  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  00007172  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  000072e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  00008f2b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  00009e16  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  0000abc4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  0000ad24  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  0000afb1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000b77f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e4 e7       	ldi	r30, 0x74	; 116
      68:	f0 e4       	ldi	r31, 0x40	; 64
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 36       	cpi	r26, 0x68	; 104
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 5e 0a 	call	0x14bc	; 0x14bc <main>
      7a:	0c 94 38 20 	jmp	0x4070	; 0x4070 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 01 20 	jmp	0x4002	; 0x4002 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 1d 20 	jmp	0x403a	; 0x403a <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 0d 20 	jmp	0x401a	; 0x401a <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 29 20 	jmp	0x4052	; 0x4052 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 0d 20 	jmp	0x401a	; 0x401a <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 29 20 	jmp	0x4052	; 0x4052 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 01 20 	jmp	0x4002	; 0x4002 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 1d 20 	jmp	0x403a	; 0x403a <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 0d 20 	jmp	0x401a	; 0x401a <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 29 20 	jmp	0x4052	; 0x4052 <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 0d 20 	jmp	0x401a	; 0x401a <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 29 20 	jmp	0x4052	; 0x4052 <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 0d 20 	jmp	0x401a	; 0x401a <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 29 20 	jmp	0x4052	; 0x4052 <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 11 20 	jmp	0x4022	; 0x4022 <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 2d 20 	jmp	0x405a	; 0x405a <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <DIO__CheckStatusInit>:

/* HAL */

/* Defination Of Function  */
CheckStatus DIO__CheckStatusInit(Void)
{
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	0f 92       	push	r0
     b3c:	cd b7       	in	r28, 0x3d	; 61
     b3e:	de b7       	in	r29, 0x3e	; 62
        CheckStatus Local_CheckStatusReturnStatus = CHECK_SUCCESS;
     b40:	19 82       	std	Y+1, r1	; 0x01
        
        /* intial direction */ 
        
        DDRA__UINT8_REG = CONC(DIO__UINT8_PA7_INITIAL_DIRECTION, DIO__UINT8_PA6_INITIAL_DIRECTION, DIO__UINT8_PA5_INITIAL_DIRECTION, DIO__UINT8_PA4_INITIAL_DIRECTION, DIO__UINT8_PA3_INITIAL_DIRECTION, DIO__UINT8_PA2_INITIAL_DIRECTION, DIO__UINT8_PA1_INITIAL_DIRECTION, DIO__UINT8_PA0_INITIAL_DIRECTION);
     b42:	ea e3       	ldi	r30, 0x3A	; 58
     b44:	f0 e0       	ldi	r31, 0x00	; 0
     b46:	8f ef       	ldi	r24, 0xFF	; 255
     b48:	80 83       	st	Z, r24
        DDRB__UINT8_REG = CONC(DIO__UINT8_PB7_INITIAL_DIRECTION, DIO__UINT8_PB6_INITIAL_DIRECTION, DIO__UINT8_PB5_INITIAL_DIRECTION, DIO__UINT8_PB4_INITIAL_DIRECTION, DIO__UINT8_PB3_INITIAL_DIRECTION, DIO__UINT8_PB2_INITIAL_DIRECTION, DIO__UINT8_PB1_INITIAL_DIRECTION, DIO__UINT8_PB0_INITIAL_DIRECTION);
     b4a:	e7 e3       	ldi	r30, 0x37	; 55
     b4c:	f0 e0       	ldi	r31, 0x00	; 0
     b4e:	10 82       	st	Z, r1
        DDRC__UINT8_REG = CONC(DIO__UINT8_PC7_INITIAL_DIRECTION, DIO__UINT8_PC6_INITIAL_DIRECTION, DIO__UINT8_PC5_INITIAL_DIRECTION, DIO__UINT8_PC4_INITIAL_DIRECTION, DIO__UINT8_PC3_INITIAL_DIRECTION, DIO__UINT8_PC2_INITIAL_DIRECTION, DIO__UINT8_PC1_INITIAL_DIRECTION, DIO__UINT8_PC0_INITIAL_DIRECTION);
     b50:	e4 e3       	ldi	r30, 0x34	; 52
     b52:	f0 e0       	ldi	r31, 0x00	; 0
     b54:	83 e0       	ldi	r24, 0x03	; 3
     b56:	80 83       	st	Z, r24
        DDRD__UINT8_REG = CONC(DIO__UINT8_PD7_INITIAL_DIRECTION, DIO__UINT8_PD6_INITIAL_DIRECTION, DIO__UINT8_PD5_INITIAL_DIRECTION, DIO__UINT8_PD4_INITIAL_DIRECTION, DIO__UINT8_PD3_INITIAL_DIRECTION, DIO__UINT8_PD2_INITIAL_DIRECTION, DIO__UINT8_PD1_INITIAL_DIRECTION, DIO__UINT8_PD0_INITIAL_DIRECTION);
     b58:	e1 e3       	ldi	r30, 0x31	; 49
     b5a:	f0 e0       	ldi	r31, 0x00	; 0
     b5c:	10 82       	st	Z, r1
        
        /* initial Value */
        
        PORTA__UINT8_REG = CONC(DIO__UINT8_PA7_INITIAL_VALUE, DIO__UINT8_PA6_INITIAL_VALUE, DIO__UINT8_PA5_INITIAL_VALUE, DIO__UINT8_PA4_INITIAL_VALUE, DIO__UINT8_PA3_INITIAL_VALUE, DIO__UINT8_PA2_INITIAL_VALUE, DIO__UINT8_PA1_INITIAL_VALUE, DIO__UINT8_PA0_INITIAL_VALUE);
     b5e:	eb e3       	ldi	r30, 0x3B	; 59
     b60:	f0 e0       	ldi	r31, 0x00	; 0
     b62:	10 82       	st	Z, r1
        PORTB__UINT8_REG = CONC(DIO__UINT8_PB7_INITIAL_VALUE, DIO__UINT8_PB6_INITIAL_VALUE, DIO__UINT8_PB5_INITIAL_VALUE, DIO__UINT8_PB4_INITIAL_VALUE, DIO__UINT8_PB3_INITIAL_VALUE, DIO__UINT8_PB2_INITIAL_VALUE, DIO__UINT8_PB1_INITIAL_VALUE, DIO__UINT8_PB0_INITIAL_VALUE);
     b64:	e8 e3       	ldi	r30, 0x38	; 56
     b66:	f0 e0       	ldi	r31, 0x00	; 0
     b68:	10 82       	st	Z, r1
        PORTC__UINT8_REG = CONC(DIO__UINT8_PC7_INITIAL_VALUE, DIO__UINT8_PC6_INITIAL_VALUE, DIO__UINT8_PC5_INITIAL_VALUE, DIO__UINT8_PC4_INITIAL_VALUE, DIO__UINT8_PC3_INITIAL_VALUE, DIO__UINT8_PC2_INITIAL_VALUE, DIO__UINT8_PC1_INITIAL_VALUE, DIO__UINT8_PC0_INITIAL_VALUE);
     b6a:	e5 e3       	ldi	r30, 0x35	; 53
     b6c:	f0 e0       	ldi	r31, 0x00	; 0
     b6e:	10 82       	st	Z, r1
        PORTD__UINT8_REG = CONC(DIO__UINT8_PD7_INITIAL_VALUE, DIO__UINT8_PD6_INITIAL_VALUE, DIO__UINT8_PD5_INITIAL_VALUE, DIO__UINT8_PD4_INITIAL_VALUE, DIO__UINT8_PD3_INITIAL_VALUE, DIO__UINT8_PD2_INITIAL_VALUE, DIO__UINT8_PD1_INITIAL_VALUE, DIO__UINT8_PD0_INITIAL_VALUE);
     b70:	e2 e3       	ldi	r30, 0x32	; 50
     b72:	f0 e0       	ldi	r31, 0x00	; 0
     b74:	10 82       	st	Z, r1


        return Local_CheckStatusReturnStatus;
     b76:	89 81       	ldd	r24, Y+1	; 0x01
}
     b78:	0f 90       	pop	r0
     b7a:	cf 91       	pop	r28
     b7c:	df 91       	pop	r29
     b7e:	08 95       	ret

00000b80 <DIO__CheckStatusSetPinDirection>:

CheckStatus DIO__CheckStatusSetPinDirection(_uint8 Copy__uint8PortId, _uint8 Copy__uint8PinId, _uint8 Copy__uint8PinDirection)
{
     b80:	df 93       	push	r29
     b82:	cf 93       	push	r28
     b84:	cd b7       	in	r28, 0x3d	; 61
     b86:	de b7       	in	r29, 0x3e	; 62
     b88:	2f 97       	sbiw	r28, 0x0f	; 15
     b8a:	0f b6       	in	r0, 0x3f	; 63
     b8c:	f8 94       	cli
     b8e:	de bf       	out	0x3e, r29	; 62
     b90:	0f be       	out	0x3f, r0	; 63
     b92:	cd bf       	out	0x3d, r28	; 61
     b94:	8a 83       	std	Y+2, r24	; 0x02
     b96:	6b 83       	std	Y+3, r22	; 0x03
     b98:	4c 83       	std	Y+4, r20	; 0x04
        CheckStatus Local_CheckStatusReturnStatus = CHECK_SUCCESS;
     b9a:	19 82       	std	Y+1, r1	; 0x01
        /*
        Check 1-Valid PORT Id
              2-Valid Pin  Id
              3-Valid Pin  Direction
        */
        if ((Copy__uint8PortId <= DIO__UINT8_PORTD) && (Copy__uint8PinId <= DIO__UINT8_PIN7) && ((Copy__uint8PinDirection == DIO__UINT8_OUTPUT) || (Copy__uint8PinDirection == DIO__UINT8_INPUT)))
     b9c:	8a 81       	ldd	r24, Y+2	; 0x02
     b9e:	84 30       	cpi	r24, 0x04	; 4
     ba0:	08 f0       	brcs	.+2      	; 0xba4 <DIO__CheckStatusSetPinDirection+0x24>
     ba2:	02 c1       	rjmp	.+516    	; 0xda8 <DIO__CheckStatusSetPinDirection+0x228>
     ba4:	8b 81       	ldd	r24, Y+3	; 0x03
     ba6:	88 30       	cpi	r24, 0x08	; 8
     ba8:	08 f0       	brcs	.+2      	; 0xbac <DIO__CheckStatusSetPinDirection+0x2c>
     baa:	fe c0       	rjmp	.+508    	; 0xda8 <DIO__CheckStatusSetPinDirection+0x228>
     bac:	8c 81       	ldd	r24, Y+4	; 0x04
     bae:	81 30       	cpi	r24, 0x01	; 1
     bb0:	21 f0       	breq	.+8      	; 0xbba <DIO__CheckStatusSetPinDirection+0x3a>
     bb2:	8c 81       	ldd	r24, Y+4	; 0x04
     bb4:	88 23       	and	r24, r24
     bb6:	09 f0       	breq	.+2      	; 0xbba <DIO__CheckStatusSetPinDirection+0x3a>
     bb8:	f7 c0       	rjmp	.+494    	; 0xda8 <DIO__CheckStatusSetPinDirection+0x228>
        {
                switch (Copy__uint8PortId)
     bba:	8a 81       	ldd	r24, Y+2	; 0x02
     bbc:	28 2f       	mov	r18, r24
     bbe:	30 e0       	ldi	r19, 0x00	; 0
     bc0:	3e 87       	std	Y+14, r19	; 0x0e
     bc2:	2d 87       	std	Y+13, r18	; 0x0d
     bc4:	8d 85       	ldd	r24, Y+13	; 0x0d
     bc6:	9e 85       	ldd	r25, Y+14	; 0x0e
     bc8:	81 30       	cpi	r24, 0x01	; 1
     bca:	91 05       	cpc	r25, r1
     bcc:	09 f4       	brne	.+2      	; 0xbd0 <DIO__CheckStatusSetPinDirection+0x50>
     bce:	4e c0       	rjmp	.+156    	; 0xc6c <DIO__CheckStatusSetPinDirection+0xec>
     bd0:	2d 85       	ldd	r18, Y+13	; 0x0d
     bd2:	3e 85       	ldd	r19, Y+14	; 0x0e
     bd4:	22 30       	cpi	r18, 0x02	; 2
     bd6:	31 05       	cpc	r19, r1
     bd8:	2c f4       	brge	.+10     	; 0xbe4 <DIO__CheckStatusSetPinDirection+0x64>
     bda:	8d 85       	ldd	r24, Y+13	; 0x0d
     bdc:	9e 85       	ldd	r25, Y+14	; 0x0e
     bde:	00 97       	sbiw	r24, 0x00	; 0
     be0:	71 f0       	breq	.+28     	; 0xbfe <DIO__CheckStatusSetPinDirection+0x7e>
     be2:	e1 c0       	rjmp	.+450    	; 0xda6 <DIO__CheckStatusSetPinDirection+0x226>
     be4:	2d 85       	ldd	r18, Y+13	; 0x0d
     be6:	3e 85       	ldd	r19, Y+14	; 0x0e
     be8:	22 30       	cpi	r18, 0x02	; 2
     bea:	31 05       	cpc	r19, r1
     bec:	09 f4       	brne	.+2      	; 0xbf0 <DIO__CheckStatusSetPinDirection+0x70>
     bee:	72 c0       	rjmp	.+228    	; 0xcd4 <DIO__CheckStatusSetPinDirection+0x154>
     bf0:	8d 85       	ldd	r24, Y+13	; 0x0d
     bf2:	9e 85       	ldd	r25, Y+14	; 0x0e
     bf4:	83 30       	cpi	r24, 0x03	; 3
     bf6:	91 05       	cpc	r25, r1
     bf8:	09 f4       	brne	.+2      	; 0xbfc <DIO__CheckStatusSetPinDirection+0x7c>
     bfa:	a0 c0       	rjmp	.+320    	; 0xd3c <DIO__CheckStatusSetPinDirection+0x1bc>
     bfc:	d4 c0       	rjmp	.+424    	; 0xda6 <DIO__CheckStatusSetPinDirection+0x226>
                {
                case DIO__UINT8_PORTA:
                        switch (Copy__uint8PinDirection)
     bfe:	8c 81       	ldd	r24, Y+4	; 0x04
     c00:	28 2f       	mov	r18, r24
     c02:	30 e0       	ldi	r19, 0x00	; 0
     c04:	3c 87       	std	Y+12, r19	; 0x0c
     c06:	2b 87       	std	Y+11, r18	; 0x0b
     c08:	8b 85       	ldd	r24, Y+11	; 0x0b
     c0a:	9c 85       	ldd	r25, Y+12	; 0x0c
     c0c:	00 97       	sbiw	r24, 0x00	; 0
     c0e:	d1 f0       	breq	.+52     	; 0xc44 <DIO__CheckStatusSetPinDirection+0xc4>
     c10:	2b 85       	ldd	r18, Y+11	; 0x0b
     c12:	3c 85       	ldd	r19, Y+12	; 0x0c
     c14:	21 30       	cpi	r18, 0x01	; 1
     c16:	31 05       	cpc	r19, r1
     c18:	09 f0       	breq	.+2      	; 0xc1c <DIO__CheckStatusSetPinDirection+0x9c>
     c1a:	c5 c0       	rjmp	.+394    	; 0xda6 <DIO__CheckStatusSetPinDirection+0x226>
                        {
                        case DIO__UINT8_OUTPUT:
                                SET_BIT(DDRA__UINT8_REG, Copy__uint8PinId);
     c1c:	aa e3       	ldi	r26, 0x3A	; 58
     c1e:	b0 e0       	ldi	r27, 0x00	; 0
     c20:	ea e3       	ldi	r30, 0x3A	; 58
     c22:	f0 e0       	ldi	r31, 0x00	; 0
     c24:	80 81       	ld	r24, Z
     c26:	48 2f       	mov	r20, r24
     c28:	8b 81       	ldd	r24, Y+3	; 0x03
     c2a:	28 2f       	mov	r18, r24
     c2c:	30 e0       	ldi	r19, 0x00	; 0
     c2e:	81 e0       	ldi	r24, 0x01	; 1
     c30:	90 e0       	ldi	r25, 0x00	; 0
     c32:	02 2e       	mov	r0, r18
     c34:	02 c0       	rjmp	.+4      	; 0xc3a <DIO__CheckStatusSetPinDirection+0xba>
     c36:	88 0f       	add	r24, r24
     c38:	99 1f       	adc	r25, r25
     c3a:	0a 94       	dec	r0
     c3c:	e2 f7       	brpl	.-8      	; 0xc36 <DIO__CheckStatusSetPinDirection+0xb6>
     c3e:	84 2b       	or	r24, r20
     c40:	8c 93       	st	X, r24
     c42:	b1 c0       	rjmp	.+354    	; 0xda6 <DIO__CheckStatusSetPinDirection+0x226>
                                break;

                        case DIO__UINT8_INPUT:
                                CLEAR_BIT(DDRA__UINT8_REG, Copy__uint8PinId);
     c44:	aa e3       	ldi	r26, 0x3A	; 58
     c46:	b0 e0       	ldi	r27, 0x00	; 0
     c48:	ea e3       	ldi	r30, 0x3A	; 58
     c4a:	f0 e0       	ldi	r31, 0x00	; 0
     c4c:	80 81       	ld	r24, Z
     c4e:	48 2f       	mov	r20, r24
     c50:	8b 81       	ldd	r24, Y+3	; 0x03
     c52:	28 2f       	mov	r18, r24
     c54:	30 e0       	ldi	r19, 0x00	; 0
     c56:	81 e0       	ldi	r24, 0x01	; 1
     c58:	90 e0       	ldi	r25, 0x00	; 0
     c5a:	02 2e       	mov	r0, r18
     c5c:	02 c0       	rjmp	.+4      	; 0xc62 <DIO__CheckStatusSetPinDirection+0xe2>
     c5e:	88 0f       	add	r24, r24
     c60:	99 1f       	adc	r25, r25
     c62:	0a 94       	dec	r0
     c64:	e2 f7       	brpl	.-8      	; 0xc5e <DIO__CheckStatusSetPinDirection+0xde>
     c66:	84 23       	and	r24, r20
     c68:	8c 93       	st	X, r24
     c6a:	9d c0       	rjmp	.+314    	; 0xda6 <DIO__CheckStatusSetPinDirection+0x226>

                                break;
                        }
                        break;
                case DIO__UINT8_PORTB:
                        switch (Copy__uint8PinDirection)
     c6c:	8c 81       	ldd	r24, Y+4	; 0x04
     c6e:	28 2f       	mov	r18, r24
     c70:	30 e0       	ldi	r19, 0x00	; 0
     c72:	3a 87       	std	Y+10, r19	; 0x0a
     c74:	29 87       	std	Y+9, r18	; 0x09
     c76:	89 85       	ldd	r24, Y+9	; 0x09
     c78:	9a 85       	ldd	r25, Y+10	; 0x0a
     c7a:	00 97       	sbiw	r24, 0x00	; 0
     c7c:	c9 f0       	breq	.+50     	; 0xcb0 <DIO__CheckStatusSetPinDirection+0x130>
     c7e:	29 85       	ldd	r18, Y+9	; 0x09
     c80:	3a 85       	ldd	r19, Y+10	; 0x0a
     c82:	21 30       	cpi	r18, 0x01	; 1
     c84:	31 05       	cpc	r19, r1
     c86:	31 f5       	brne	.+76     	; 0xcd4 <DIO__CheckStatusSetPinDirection+0x154>
                        {
                        case DIO__UINT8_OUTPUT:
                                SET_BIT(DDRB__UINT8_REG, Copy__uint8PinId);
     c88:	a7 e3       	ldi	r26, 0x37	; 55
     c8a:	b0 e0       	ldi	r27, 0x00	; 0
     c8c:	e7 e3       	ldi	r30, 0x37	; 55
     c8e:	f0 e0       	ldi	r31, 0x00	; 0
     c90:	80 81       	ld	r24, Z
     c92:	48 2f       	mov	r20, r24
     c94:	8b 81       	ldd	r24, Y+3	; 0x03
     c96:	28 2f       	mov	r18, r24
     c98:	30 e0       	ldi	r19, 0x00	; 0
     c9a:	81 e0       	ldi	r24, 0x01	; 1
     c9c:	90 e0       	ldi	r25, 0x00	; 0
     c9e:	02 2e       	mov	r0, r18
     ca0:	02 c0       	rjmp	.+4      	; 0xca6 <DIO__CheckStatusSetPinDirection+0x126>
     ca2:	88 0f       	add	r24, r24
     ca4:	99 1f       	adc	r25, r25
     ca6:	0a 94       	dec	r0
     ca8:	e2 f7       	brpl	.-8      	; 0xca2 <DIO__CheckStatusSetPinDirection+0x122>
     caa:	84 2b       	or	r24, r20
     cac:	8c 93       	st	X, r24
     cae:	12 c0       	rjmp	.+36     	; 0xcd4 <DIO__CheckStatusSetPinDirection+0x154>
                                break;
                        case DIO__UINT8_INPUT:
                                CLEAR_BIT(DDRB__UINT8_REG, Copy__uint8PinId);
     cb0:	a7 e3       	ldi	r26, 0x37	; 55
     cb2:	b0 e0       	ldi	r27, 0x00	; 0
     cb4:	e7 e3       	ldi	r30, 0x37	; 55
     cb6:	f0 e0       	ldi	r31, 0x00	; 0
     cb8:	80 81       	ld	r24, Z
     cba:	48 2f       	mov	r20, r24
     cbc:	8b 81       	ldd	r24, Y+3	; 0x03
     cbe:	28 2f       	mov	r18, r24
     cc0:	30 e0       	ldi	r19, 0x00	; 0
     cc2:	81 e0       	ldi	r24, 0x01	; 1
     cc4:	90 e0       	ldi	r25, 0x00	; 0
     cc6:	02 c0       	rjmp	.+4      	; 0xccc <DIO__CheckStatusSetPinDirection+0x14c>
     cc8:	88 0f       	add	r24, r24
     cca:	99 1f       	adc	r25, r25
     ccc:	2a 95       	dec	r18
     cce:	e2 f7       	brpl	.-8      	; 0xcc8 <DIO__CheckStatusSetPinDirection+0x148>
     cd0:	84 23       	and	r24, r20
     cd2:	8c 93       	st	X, r24
                                /* DO NOTHING */

                                break;
                        }
                case DIO__UINT8_PORTC:
                        switch (Copy__uint8PinDirection)
     cd4:	8c 81       	ldd	r24, Y+4	; 0x04
     cd6:	28 2f       	mov	r18, r24
     cd8:	30 e0       	ldi	r19, 0x00	; 0
     cda:	38 87       	std	Y+8, r19	; 0x08
     cdc:	2f 83       	std	Y+7, r18	; 0x07
     cde:	8f 81       	ldd	r24, Y+7	; 0x07
     ce0:	98 85       	ldd	r25, Y+8	; 0x08
     ce2:	00 97       	sbiw	r24, 0x00	; 0
     ce4:	c9 f0       	breq	.+50     	; 0xd18 <DIO__CheckStatusSetPinDirection+0x198>
     ce6:	2f 81       	ldd	r18, Y+7	; 0x07
     ce8:	38 85       	ldd	r19, Y+8	; 0x08
     cea:	21 30       	cpi	r18, 0x01	; 1
     cec:	31 05       	cpc	r19, r1
     cee:	31 f5       	brne	.+76     	; 0xd3c <DIO__CheckStatusSetPinDirection+0x1bc>
                        {
                        case DIO__UINT8_OUTPUT:
                                SET_BIT(DDRC__UINT8_REG, Copy__uint8PinId);
     cf0:	a4 e3       	ldi	r26, 0x34	; 52
     cf2:	b0 e0       	ldi	r27, 0x00	; 0
     cf4:	e4 e3       	ldi	r30, 0x34	; 52
     cf6:	f0 e0       	ldi	r31, 0x00	; 0
     cf8:	80 81       	ld	r24, Z
     cfa:	48 2f       	mov	r20, r24
     cfc:	8b 81       	ldd	r24, Y+3	; 0x03
     cfe:	28 2f       	mov	r18, r24
     d00:	30 e0       	ldi	r19, 0x00	; 0
     d02:	81 e0       	ldi	r24, 0x01	; 1
     d04:	90 e0       	ldi	r25, 0x00	; 0
     d06:	02 2e       	mov	r0, r18
     d08:	02 c0       	rjmp	.+4      	; 0xd0e <DIO__CheckStatusSetPinDirection+0x18e>
     d0a:	88 0f       	add	r24, r24
     d0c:	99 1f       	adc	r25, r25
     d0e:	0a 94       	dec	r0
     d10:	e2 f7       	brpl	.-8      	; 0xd0a <DIO__CheckStatusSetPinDirection+0x18a>
     d12:	84 2b       	or	r24, r20
     d14:	8c 93       	st	X, r24
     d16:	12 c0       	rjmp	.+36     	; 0xd3c <DIO__CheckStatusSetPinDirection+0x1bc>
                                break;
                        case DIO__UINT8_INPUT:
                                CLEAR_BIT(DDRC__UINT8_REG, Copy__uint8PinId);
     d18:	a4 e3       	ldi	r26, 0x34	; 52
     d1a:	b0 e0       	ldi	r27, 0x00	; 0
     d1c:	e4 e3       	ldi	r30, 0x34	; 52
     d1e:	f0 e0       	ldi	r31, 0x00	; 0
     d20:	80 81       	ld	r24, Z
     d22:	48 2f       	mov	r20, r24
     d24:	8b 81       	ldd	r24, Y+3	; 0x03
     d26:	28 2f       	mov	r18, r24
     d28:	30 e0       	ldi	r19, 0x00	; 0
     d2a:	81 e0       	ldi	r24, 0x01	; 1
     d2c:	90 e0       	ldi	r25, 0x00	; 0
     d2e:	02 c0       	rjmp	.+4      	; 0xd34 <DIO__CheckStatusSetPinDirection+0x1b4>
     d30:	88 0f       	add	r24, r24
     d32:	99 1f       	adc	r25, r25
     d34:	2a 95       	dec	r18
     d36:	e2 f7       	brpl	.-8      	; 0xd30 <DIO__CheckStatusSetPinDirection+0x1b0>
     d38:	84 23       	and	r24, r20
     d3a:	8c 93       	st	X, r24
                                /* DO NOTHING */

                                break;
                        }
                case DIO__UINT8_PORTD:
                        switch (Copy__uint8PinDirection)
     d3c:	8c 81       	ldd	r24, Y+4	; 0x04
     d3e:	28 2f       	mov	r18, r24
     d40:	30 e0       	ldi	r19, 0x00	; 0
     d42:	3e 83       	std	Y+6, r19	; 0x06
     d44:	2d 83       	std	Y+5, r18	; 0x05
     d46:	8d 81       	ldd	r24, Y+5	; 0x05
     d48:	9e 81       	ldd	r25, Y+6	; 0x06
     d4a:	00 97       	sbiw	r24, 0x00	; 0
     d4c:	c9 f0       	breq	.+50     	; 0xd80 <DIO__CheckStatusSetPinDirection+0x200>
     d4e:	2d 81       	ldd	r18, Y+5	; 0x05
     d50:	3e 81       	ldd	r19, Y+6	; 0x06
     d52:	21 30       	cpi	r18, 0x01	; 1
     d54:	31 05       	cpc	r19, r1
     d56:	39 f5       	brne	.+78     	; 0xda6 <DIO__CheckStatusSetPinDirection+0x226>
                        {
                        case DIO__UINT8_OUTPUT:
                                SET_BIT(DDRD__UINT8_REG, Copy__uint8PinId);
     d58:	a1 e3       	ldi	r26, 0x31	; 49
     d5a:	b0 e0       	ldi	r27, 0x00	; 0
     d5c:	e1 e3       	ldi	r30, 0x31	; 49
     d5e:	f0 e0       	ldi	r31, 0x00	; 0
     d60:	80 81       	ld	r24, Z
     d62:	48 2f       	mov	r20, r24
     d64:	8b 81       	ldd	r24, Y+3	; 0x03
     d66:	28 2f       	mov	r18, r24
     d68:	30 e0       	ldi	r19, 0x00	; 0
     d6a:	81 e0       	ldi	r24, 0x01	; 1
     d6c:	90 e0       	ldi	r25, 0x00	; 0
     d6e:	02 2e       	mov	r0, r18
     d70:	02 c0       	rjmp	.+4      	; 0xd76 <DIO__CheckStatusSetPinDirection+0x1f6>
     d72:	88 0f       	add	r24, r24
     d74:	99 1f       	adc	r25, r25
     d76:	0a 94       	dec	r0
     d78:	e2 f7       	brpl	.-8      	; 0xd72 <DIO__CheckStatusSetPinDirection+0x1f2>
     d7a:	84 2b       	or	r24, r20
     d7c:	8c 93       	st	X, r24
     d7e:	13 c0       	rjmp	.+38     	; 0xda6 <DIO__CheckStatusSetPinDirection+0x226>
                                break;
                        case DIO__UINT8_INPUT:
                                CLEAR_BIT(DDRD__UINT8_REG, Copy__uint8PinId);
     d80:	a1 e3       	ldi	r26, 0x31	; 49
     d82:	b0 e0       	ldi	r27, 0x00	; 0
     d84:	e1 e3       	ldi	r30, 0x31	; 49
     d86:	f0 e0       	ldi	r31, 0x00	; 0
     d88:	80 81       	ld	r24, Z
     d8a:	48 2f       	mov	r20, r24
     d8c:	8b 81       	ldd	r24, Y+3	; 0x03
     d8e:	28 2f       	mov	r18, r24
     d90:	30 e0       	ldi	r19, 0x00	; 0
     d92:	81 e0       	ldi	r24, 0x01	; 1
     d94:	90 e0       	ldi	r25, 0x00	; 0
     d96:	02 2e       	mov	r0, r18
     d98:	02 c0       	rjmp	.+4      	; 0xd9e <DIO__CheckStatusSetPinDirection+0x21e>
     d9a:	88 0f       	add	r24, r24
     d9c:	99 1f       	adc	r25, r25
     d9e:	0a 94       	dec	r0
     da0:	e2 f7       	brpl	.-8      	; 0xd9a <DIO__CheckStatusSetPinDirection+0x21a>
     da2:	84 23       	and	r24, r20
     da4:	8c 93       	st	X, r24
     da6:	04 c0       	rjmp	.+8      	; 0xdb0 <DIO__CheckStatusSetPinDirection+0x230>
                        break;
                }
        }
        else
        {
                Local_CheckStatusReturnStatus = CHECK_FAIL;
     da8:	81 e0       	ldi	r24, 0x01	; 1
     daa:	89 83       	std	Y+1, r24	; 0x01
                return Local_CheckStatusReturnStatus;
     dac:	89 81       	ldd	r24, Y+1	; 0x01
     dae:	8f 87       	std	Y+15, r24	; 0x0f
        }
}
     db0:	8f 85       	ldd	r24, Y+15	; 0x0f
     db2:	2f 96       	adiw	r28, 0x0f	; 15
     db4:	0f b6       	in	r0, 0x3f	; 63
     db6:	f8 94       	cli
     db8:	de bf       	out	0x3e, r29	; 62
     dba:	0f be       	out	0x3f, r0	; 63
     dbc:	cd bf       	out	0x3d, r28	; 61
     dbe:	cf 91       	pop	r28
     dc0:	df 91       	pop	r29
     dc2:	08 95       	ret

00000dc4 <DIO__CheckStatusSetPinValue>:

CheckStatus DIO__CheckStatusSetPinValue(_uint8 Copy__uint8PortId, _uint8 Copy__uint8PinId, _uint8 Copy__uint8PinValue)
{
     dc4:	df 93       	push	r29
     dc6:	cf 93       	push	r28
     dc8:	cd b7       	in	r28, 0x3d	; 61
     dca:	de b7       	in	r29, 0x3e	; 62
     dcc:	2f 97       	sbiw	r28, 0x0f	; 15
     dce:	0f b6       	in	r0, 0x3f	; 63
     dd0:	f8 94       	cli
     dd2:	de bf       	out	0x3e, r29	; 62
     dd4:	0f be       	out	0x3f, r0	; 63
     dd6:	cd bf       	out	0x3d, r28	; 61
     dd8:	8a 83       	std	Y+2, r24	; 0x02
     dda:	6b 83       	std	Y+3, r22	; 0x03
     ddc:	4c 83       	std	Y+4, r20	; 0x04
        CheckStatus Local_CheckStatusReturnStatus = CHECK_SUCCESS;
     dde:	19 82       	std	Y+1, r1	; 0x01
        /*
        Check 1-Valid PORT Id
              2-Valid Pin  Id
              3-Valid Pin  Value 
        */
        if ((Copy__uint8PortId <= DIO__UINT8_PORTD) && (Copy__uint8PinId <= DIO__UINT8_PIN7) && ((Copy__uint8PinValue == DIO__UINT8_HIGH) || (Copy__uint8PinValue == DIO__UINT8_LOW)))
     de0:	8a 81       	ldd	r24, Y+2	; 0x02
     de2:	84 30       	cpi	r24, 0x04	; 4
     de4:	08 f0       	brcs	.+2      	; 0xde8 <DIO__CheckStatusSetPinValue+0x24>
     de6:	02 c1       	rjmp	.+516    	; 0xfec <DIO__CheckStatusSetPinValue+0x228>
     de8:	8b 81       	ldd	r24, Y+3	; 0x03
     dea:	88 30       	cpi	r24, 0x08	; 8
     dec:	08 f0       	brcs	.+2      	; 0xdf0 <DIO__CheckStatusSetPinValue+0x2c>
     dee:	fe c0       	rjmp	.+508    	; 0xfec <DIO__CheckStatusSetPinValue+0x228>
     df0:	8c 81       	ldd	r24, Y+4	; 0x04
     df2:	81 30       	cpi	r24, 0x01	; 1
     df4:	21 f0       	breq	.+8      	; 0xdfe <DIO__CheckStatusSetPinValue+0x3a>
     df6:	8c 81       	ldd	r24, Y+4	; 0x04
     df8:	88 23       	and	r24, r24
     dfa:	09 f0       	breq	.+2      	; 0xdfe <DIO__CheckStatusSetPinValue+0x3a>
     dfc:	f7 c0       	rjmp	.+494    	; 0xfec <DIO__CheckStatusSetPinValue+0x228>
        {
                switch (Copy__uint8PortId)
     dfe:	8a 81       	ldd	r24, Y+2	; 0x02
     e00:	28 2f       	mov	r18, r24
     e02:	30 e0       	ldi	r19, 0x00	; 0
     e04:	3e 87       	std	Y+14, r19	; 0x0e
     e06:	2d 87       	std	Y+13, r18	; 0x0d
     e08:	8d 85       	ldd	r24, Y+13	; 0x0d
     e0a:	9e 85       	ldd	r25, Y+14	; 0x0e
     e0c:	81 30       	cpi	r24, 0x01	; 1
     e0e:	91 05       	cpc	r25, r1
     e10:	09 f4       	brne	.+2      	; 0xe14 <DIO__CheckStatusSetPinValue+0x50>
     e12:	4e c0       	rjmp	.+156    	; 0xeb0 <DIO__CheckStatusSetPinValue+0xec>
     e14:	2d 85       	ldd	r18, Y+13	; 0x0d
     e16:	3e 85       	ldd	r19, Y+14	; 0x0e
     e18:	22 30       	cpi	r18, 0x02	; 2
     e1a:	31 05       	cpc	r19, r1
     e1c:	2c f4       	brge	.+10     	; 0xe28 <DIO__CheckStatusSetPinValue+0x64>
     e1e:	8d 85       	ldd	r24, Y+13	; 0x0d
     e20:	9e 85       	ldd	r25, Y+14	; 0x0e
     e22:	00 97       	sbiw	r24, 0x00	; 0
     e24:	71 f0       	breq	.+28     	; 0xe42 <DIO__CheckStatusSetPinValue+0x7e>
     e26:	e1 c0       	rjmp	.+450    	; 0xfea <DIO__CheckStatusSetPinValue+0x226>
     e28:	2d 85       	ldd	r18, Y+13	; 0x0d
     e2a:	3e 85       	ldd	r19, Y+14	; 0x0e
     e2c:	22 30       	cpi	r18, 0x02	; 2
     e2e:	31 05       	cpc	r19, r1
     e30:	09 f4       	brne	.+2      	; 0xe34 <DIO__CheckStatusSetPinValue+0x70>
     e32:	72 c0       	rjmp	.+228    	; 0xf18 <DIO__CheckStatusSetPinValue+0x154>
     e34:	8d 85       	ldd	r24, Y+13	; 0x0d
     e36:	9e 85       	ldd	r25, Y+14	; 0x0e
     e38:	83 30       	cpi	r24, 0x03	; 3
     e3a:	91 05       	cpc	r25, r1
     e3c:	09 f4       	brne	.+2      	; 0xe40 <DIO__CheckStatusSetPinValue+0x7c>
     e3e:	a0 c0       	rjmp	.+320    	; 0xf80 <DIO__CheckStatusSetPinValue+0x1bc>
     e40:	d4 c0       	rjmp	.+424    	; 0xfea <DIO__CheckStatusSetPinValue+0x226>
                {
                case DIO__UINT8_PORTA:
                        switch (Copy__uint8PinValue)
     e42:	8c 81       	ldd	r24, Y+4	; 0x04
     e44:	28 2f       	mov	r18, r24
     e46:	30 e0       	ldi	r19, 0x00	; 0
     e48:	3c 87       	std	Y+12, r19	; 0x0c
     e4a:	2b 87       	std	Y+11, r18	; 0x0b
     e4c:	8b 85       	ldd	r24, Y+11	; 0x0b
     e4e:	9c 85       	ldd	r25, Y+12	; 0x0c
     e50:	00 97       	sbiw	r24, 0x00	; 0
     e52:	d1 f0       	breq	.+52     	; 0xe88 <DIO__CheckStatusSetPinValue+0xc4>
     e54:	2b 85       	ldd	r18, Y+11	; 0x0b
     e56:	3c 85       	ldd	r19, Y+12	; 0x0c
     e58:	21 30       	cpi	r18, 0x01	; 1
     e5a:	31 05       	cpc	r19, r1
     e5c:	09 f0       	breq	.+2      	; 0xe60 <DIO__CheckStatusSetPinValue+0x9c>
     e5e:	c5 c0       	rjmp	.+394    	; 0xfea <DIO__CheckStatusSetPinValue+0x226>
                        {
                        case DIO__UINT8_HIGH:
                                SET_BIT(PORTA__UINT8_REG, Copy__uint8PinId);
     e60:	ab e3       	ldi	r26, 0x3B	; 59
     e62:	b0 e0       	ldi	r27, 0x00	; 0
     e64:	eb e3       	ldi	r30, 0x3B	; 59
     e66:	f0 e0       	ldi	r31, 0x00	; 0
     e68:	80 81       	ld	r24, Z
     e6a:	48 2f       	mov	r20, r24
     e6c:	8b 81       	ldd	r24, Y+3	; 0x03
     e6e:	28 2f       	mov	r18, r24
     e70:	30 e0       	ldi	r19, 0x00	; 0
     e72:	81 e0       	ldi	r24, 0x01	; 1
     e74:	90 e0       	ldi	r25, 0x00	; 0
     e76:	02 2e       	mov	r0, r18
     e78:	02 c0       	rjmp	.+4      	; 0xe7e <DIO__CheckStatusSetPinValue+0xba>
     e7a:	88 0f       	add	r24, r24
     e7c:	99 1f       	adc	r25, r25
     e7e:	0a 94       	dec	r0
     e80:	e2 f7       	brpl	.-8      	; 0xe7a <DIO__CheckStatusSetPinValue+0xb6>
     e82:	84 2b       	or	r24, r20
     e84:	8c 93       	st	X, r24
     e86:	b1 c0       	rjmp	.+354    	; 0xfea <DIO__CheckStatusSetPinValue+0x226>
                                break;
                        case DIO__UINT8_LOW:
                                CLEAR_BIT(PORTA__UINT8_REG, Copy__uint8PinId);
     e88:	ab e3       	ldi	r26, 0x3B	; 59
     e8a:	b0 e0       	ldi	r27, 0x00	; 0
     e8c:	eb e3       	ldi	r30, 0x3B	; 59
     e8e:	f0 e0       	ldi	r31, 0x00	; 0
     e90:	80 81       	ld	r24, Z
     e92:	48 2f       	mov	r20, r24
     e94:	8b 81       	ldd	r24, Y+3	; 0x03
     e96:	28 2f       	mov	r18, r24
     e98:	30 e0       	ldi	r19, 0x00	; 0
     e9a:	81 e0       	ldi	r24, 0x01	; 1
     e9c:	90 e0       	ldi	r25, 0x00	; 0
     e9e:	02 2e       	mov	r0, r18
     ea0:	02 c0       	rjmp	.+4      	; 0xea6 <DIO__CheckStatusSetPinValue+0xe2>
     ea2:	88 0f       	add	r24, r24
     ea4:	99 1f       	adc	r25, r25
     ea6:	0a 94       	dec	r0
     ea8:	e2 f7       	brpl	.-8      	; 0xea2 <DIO__CheckStatusSetPinValue+0xde>
     eaa:	84 23       	and	r24, r20
     eac:	8c 93       	st	X, r24
     eae:	9d c0       	rjmp	.+314    	; 0xfea <DIO__CheckStatusSetPinValue+0x226>

                                break;
                        }
                        break;
                case DIO__UINT8_PORTB:
                        switch (Copy__uint8PinValue)
     eb0:	8c 81       	ldd	r24, Y+4	; 0x04
     eb2:	28 2f       	mov	r18, r24
     eb4:	30 e0       	ldi	r19, 0x00	; 0
     eb6:	3a 87       	std	Y+10, r19	; 0x0a
     eb8:	29 87       	std	Y+9, r18	; 0x09
     eba:	89 85       	ldd	r24, Y+9	; 0x09
     ebc:	9a 85       	ldd	r25, Y+10	; 0x0a
     ebe:	00 97       	sbiw	r24, 0x00	; 0
     ec0:	c9 f0       	breq	.+50     	; 0xef4 <DIO__CheckStatusSetPinValue+0x130>
     ec2:	29 85       	ldd	r18, Y+9	; 0x09
     ec4:	3a 85       	ldd	r19, Y+10	; 0x0a
     ec6:	21 30       	cpi	r18, 0x01	; 1
     ec8:	31 05       	cpc	r19, r1
     eca:	31 f5       	brne	.+76     	; 0xf18 <DIO__CheckStatusSetPinValue+0x154>
                        {
                        case DIO__UINT8_HIGH:
                                SET_BIT(PORTB__UINT8_REG, Copy__uint8PinId);
     ecc:	a8 e3       	ldi	r26, 0x38	; 56
     ece:	b0 e0       	ldi	r27, 0x00	; 0
     ed0:	e8 e3       	ldi	r30, 0x38	; 56
     ed2:	f0 e0       	ldi	r31, 0x00	; 0
     ed4:	80 81       	ld	r24, Z
     ed6:	48 2f       	mov	r20, r24
     ed8:	8b 81       	ldd	r24, Y+3	; 0x03
     eda:	28 2f       	mov	r18, r24
     edc:	30 e0       	ldi	r19, 0x00	; 0
     ede:	81 e0       	ldi	r24, 0x01	; 1
     ee0:	90 e0       	ldi	r25, 0x00	; 0
     ee2:	02 2e       	mov	r0, r18
     ee4:	02 c0       	rjmp	.+4      	; 0xeea <DIO__CheckStatusSetPinValue+0x126>
     ee6:	88 0f       	add	r24, r24
     ee8:	99 1f       	adc	r25, r25
     eea:	0a 94       	dec	r0
     eec:	e2 f7       	brpl	.-8      	; 0xee6 <DIO__CheckStatusSetPinValue+0x122>
     eee:	84 2b       	or	r24, r20
     ef0:	8c 93       	st	X, r24
     ef2:	12 c0       	rjmp	.+36     	; 0xf18 <DIO__CheckStatusSetPinValue+0x154>
                                break;
                        case DIO__UINT8_LOW:
                                CLEAR_BIT(PORTB__UINT8_REG, Copy__uint8PinId);
     ef4:	a8 e3       	ldi	r26, 0x38	; 56
     ef6:	b0 e0       	ldi	r27, 0x00	; 0
     ef8:	e8 e3       	ldi	r30, 0x38	; 56
     efa:	f0 e0       	ldi	r31, 0x00	; 0
     efc:	80 81       	ld	r24, Z
     efe:	48 2f       	mov	r20, r24
     f00:	8b 81       	ldd	r24, Y+3	; 0x03
     f02:	28 2f       	mov	r18, r24
     f04:	30 e0       	ldi	r19, 0x00	; 0
     f06:	81 e0       	ldi	r24, 0x01	; 1
     f08:	90 e0       	ldi	r25, 0x00	; 0
     f0a:	02 c0       	rjmp	.+4      	; 0xf10 <DIO__CheckStatusSetPinValue+0x14c>
     f0c:	88 0f       	add	r24, r24
     f0e:	99 1f       	adc	r25, r25
     f10:	2a 95       	dec	r18
     f12:	e2 f7       	brpl	.-8      	; 0xf0c <DIO__CheckStatusSetPinValue+0x148>
     f14:	84 23       	and	r24, r20
     f16:	8c 93       	st	X, r24
                                /* DO NOTHING */

                                break;
                        }
                case DIO__UINT8_PORTC:
                        switch (Copy__uint8PinValue)
     f18:	8c 81       	ldd	r24, Y+4	; 0x04
     f1a:	28 2f       	mov	r18, r24
     f1c:	30 e0       	ldi	r19, 0x00	; 0
     f1e:	38 87       	std	Y+8, r19	; 0x08
     f20:	2f 83       	std	Y+7, r18	; 0x07
     f22:	8f 81       	ldd	r24, Y+7	; 0x07
     f24:	98 85       	ldd	r25, Y+8	; 0x08
     f26:	00 97       	sbiw	r24, 0x00	; 0
     f28:	c9 f0       	breq	.+50     	; 0xf5c <DIO__CheckStatusSetPinValue+0x198>
     f2a:	2f 81       	ldd	r18, Y+7	; 0x07
     f2c:	38 85       	ldd	r19, Y+8	; 0x08
     f2e:	21 30       	cpi	r18, 0x01	; 1
     f30:	31 05       	cpc	r19, r1
     f32:	31 f5       	brne	.+76     	; 0xf80 <DIO__CheckStatusSetPinValue+0x1bc>
                        {
                        case DIO__UINT8_HIGH:
                                SET_BIT(PORTC__UINT8_REG, Copy__uint8PinId);
     f34:	a5 e3       	ldi	r26, 0x35	; 53
     f36:	b0 e0       	ldi	r27, 0x00	; 0
     f38:	e5 e3       	ldi	r30, 0x35	; 53
     f3a:	f0 e0       	ldi	r31, 0x00	; 0
     f3c:	80 81       	ld	r24, Z
     f3e:	48 2f       	mov	r20, r24
     f40:	8b 81       	ldd	r24, Y+3	; 0x03
     f42:	28 2f       	mov	r18, r24
     f44:	30 e0       	ldi	r19, 0x00	; 0
     f46:	81 e0       	ldi	r24, 0x01	; 1
     f48:	90 e0       	ldi	r25, 0x00	; 0
     f4a:	02 2e       	mov	r0, r18
     f4c:	02 c0       	rjmp	.+4      	; 0xf52 <DIO__CheckStatusSetPinValue+0x18e>
     f4e:	88 0f       	add	r24, r24
     f50:	99 1f       	adc	r25, r25
     f52:	0a 94       	dec	r0
     f54:	e2 f7       	brpl	.-8      	; 0xf4e <DIO__CheckStatusSetPinValue+0x18a>
     f56:	84 2b       	or	r24, r20
     f58:	8c 93       	st	X, r24
     f5a:	12 c0       	rjmp	.+36     	; 0xf80 <DIO__CheckStatusSetPinValue+0x1bc>
                                break;
                        case DIO__UINT8_LOW:
                                CLEAR_BIT(PORTC__UINT8_REG, Copy__uint8PinId);
     f5c:	a5 e3       	ldi	r26, 0x35	; 53
     f5e:	b0 e0       	ldi	r27, 0x00	; 0
     f60:	e5 e3       	ldi	r30, 0x35	; 53
     f62:	f0 e0       	ldi	r31, 0x00	; 0
     f64:	80 81       	ld	r24, Z
     f66:	48 2f       	mov	r20, r24
     f68:	8b 81       	ldd	r24, Y+3	; 0x03
     f6a:	28 2f       	mov	r18, r24
     f6c:	30 e0       	ldi	r19, 0x00	; 0
     f6e:	81 e0       	ldi	r24, 0x01	; 1
     f70:	90 e0       	ldi	r25, 0x00	; 0
     f72:	02 c0       	rjmp	.+4      	; 0xf78 <DIO__CheckStatusSetPinValue+0x1b4>
     f74:	88 0f       	add	r24, r24
     f76:	99 1f       	adc	r25, r25
     f78:	2a 95       	dec	r18
     f7a:	e2 f7       	brpl	.-8      	; 0xf74 <DIO__CheckStatusSetPinValue+0x1b0>
     f7c:	84 23       	and	r24, r20
     f7e:	8c 93       	st	X, r24
                                /* DO NOTHING */

                                break;
                        }
                case DIO__UINT8_PORTD:
                        switch (Copy__uint8PinValue)
     f80:	8c 81       	ldd	r24, Y+4	; 0x04
     f82:	28 2f       	mov	r18, r24
     f84:	30 e0       	ldi	r19, 0x00	; 0
     f86:	3e 83       	std	Y+6, r19	; 0x06
     f88:	2d 83       	std	Y+5, r18	; 0x05
     f8a:	8d 81       	ldd	r24, Y+5	; 0x05
     f8c:	9e 81       	ldd	r25, Y+6	; 0x06
     f8e:	00 97       	sbiw	r24, 0x00	; 0
     f90:	c9 f0       	breq	.+50     	; 0xfc4 <DIO__CheckStatusSetPinValue+0x200>
     f92:	2d 81       	ldd	r18, Y+5	; 0x05
     f94:	3e 81       	ldd	r19, Y+6	; 0x06
     f96:	21 30       	cpi	r18, 0x01	; 1
     f98:	31 05       	cpc	r19, r1
     f9a:	39 f5       	brne	.+78     	; 0xfea <DIO__CheckStatusSetPinValue+0x226>
                        {
                        case DIO__UINT8_HIGH:
                                SET_BIT(PORTD__UINT8_REG, Copy__uint8PinId);
     f9c:	a2 e3       	ldi	r26, 0x32	; 50
     f9e:	b0 e0       	ldi	r27, 0x00	; 0
     fa0:	e2 e3       	ldi	r30, 0x32	; 50
     fa2:	f0 e0       	ldi	r31, 0x00	; 0
     fa4:	80 81       	ld	r24, Z
     fa6:	48 2f       	mov	r20, r24
     fa8:	8b 81       	ldd	r24, Y+3	; 0x03
     faa:	28 2f       	mov	r18, r24
     fac:	30 e0       	ldi	r19, 0x00	; 0
     fae:	81 e0       	ldi	r24, 0x01	; 1
     fb0:	90 e0       	ldi	r25, 0x00	; 0
     fb2:	02 2e       	mov	r0, r18
     fb4:	02 c0       	rjmp	.+4      	; 0xfba <DIO__CheckStatusSetPinValue+0x1f6>
     fb6:	88 0f       	add	r24, r24
     fb8:	99 1f       	adc	r25, r25
     fba:	0a 94       	dec	r0
     fbc:	e2 f7       	brpl	.-8      	; 0xfb6 <DIO__CheckStatusSetPinValue+0x1f2>
     fbe:	84 2b       	or	r24, r20
     fc0:	8c 93       	st	X, r24
     fc2:	13 c0       	rjmp	.+38     	; 0xfea <DIO__CheckStatusSetPinValue+0x226>
                                break;
                        case DIO__UINT8_LOW:
                                CLEAR_BIT(PORTD__UINT8_REG, Copy__uint8PinId);
     fc4:	a2 e3       	ldi	r26, 0x32	; 50
     fc6:	b0 e0       	ldi	r27, 0x00	; 0
     fc8:	e2 e3       	ldi	r30, 0x32	; 50
     fca:	f0 e0       	ldi	r31, 0x00	; 0
     fcc:	80 81       	ld	r24, Z
     fce:	48 2f       	mov	r20, r24
     fd0:	8b 81       	ldd	r24, Y+3	; 0x03
     fd2:	28 2f       	mov	r18, r24
     fd4:	30 e0       	ldi	r19, 0x00	; 0
     fd6:	81 e0       	ldi	r24, 0x01	; 1
     fd8:	90 e0       	ldi	r25, 0x00	; 0
     fda:	02 2e       	mov	r0, r18
     fdc:	02 c0       	rjmp	.+4      	; 0xfe2 <DIO__CheckStatusSetPinValue+0x21e>
     fde:	88 0f       	add	r24, r24
     fe0:	99 1f       	adc	r25, r25
     fe2:	0a 94       	dec	r0
     fe4:	e2 f7       	brpl	.-8      	; 0xfde <DIO__CheckStatusSetPinValue+0x21a>
     fe6:	84 23       	and	r24, r20
     fe8:	8c 93       	st	X, r24
     fea:	04 c0       	rjmp	.+8      	; 0xff4 <DIO__CheckStatusSetPinValue+0x230>
                        break;
                }
        }
        else
        {
                Local_CheckStatusReturnStatus = CHECK_FAIL;
     fec:	81 e0       	ldi	r24, 0x01	; 1
     fee:	89 83       	std	Y+1, r24	; 0x01
                return Local_CheckStatusReturnStatus;
     ff0:	89 81       	ldd	r24, Y+1	; 0x01
     ff2:	8f 87       	std	Y+15, r24	; 0x0f
        }
}
     ff4:	8f 85       	ldd	r24, Y+15	; 0x0f
     ff6:	2f 96       	adiw	r28, 0x0f	; 15
     ff8:	0f b6       	in	r0, 0x3f	; 63
     ffa:	f8 94       	cli
     ffc:	de bf       	out	0x3e, r29	; 62
     ffe:	0f be       	out	0x3f, r0	; 63
    1000:	cd bf       	out	0x3d, r28	; 61
    1002:	cf 91       	pop	r28
    1004:	df 91       	pop	r29
    1006:	08 95       	ret

00001008 <DIO__CheckStatusGetPinValue>:

CheckStatus DIO__CheckStatusGetPinValue(_uint8 Copy__uint8PortId, _uint8 Copy__uint8PinId, _uint8 *Copy_p_uint8ReturnPinValue)
{
    1008:	df 93       	push	r29
    100a:	cf 93       	push	r28
    100c:	cd b7       	in	r28, 0x3d	; 61
    100e:	de b7       	in	r29, 0x3e	; 62
    1010:	28 97       	sbiw	r28, 0x08	; 8
    1012:	0f b6       	in	r0, 0x3f	; 63
    1014:	f8 94       	cli
    1016:	de bf       	out	0x3e, r29	; 62
    1018:	0f be       	out	0x3f, r0	; 63
    101a:	cd bf       	out	0x3d, r28	; 61
    101c:	8a 83       	std	Y+2, r24	; 0x02
    101e:	6b 83       	std	Y+3, r22	; 0x03
    1020:	5d 83       	std	Y+5, r21	; 0x05
    1022:	4c 83       	std	Y+4, r20	; 0x04

        CheckStatus Local_CheckStatusReturnStatus = CHECK_SUCCESS;
    1024:	19 82       	std	Y+1, r1	; 0x01
        /*
        Check 1-Valid PORT Id
              2-Valid Pin  Id
              3-Valid Pointer != NULL
        */
        if ((Copy__uint8PortId <= DIO__UINT8_PORTD) && (Copy__uint8PinId <= DIO__UINT8_PIN7) && (Copy_p_uint8ReturnPinValue != NULL))
    1026:	8a 81       	ldd	r24, Y+2	; 0x02
    1028:	84 30       	cpi	r24, 0x04	; 4
    102a:	08 f0       	brcs	.+2      	; 0x102e <DIO__CheckStatusGetPinValue+0x26>
    102c:	ea c0       	rjmp	.+468    	; 0x1202 <DIO__CheckStatusGetPinValue+0x1fa>
    102e:	8b 81       	ldd	r24, Y+3	; 0x03
    1030:	88 30       	cpi	r24, 0x08	; 8
    1032:	08 f0       	brcs	.+2      	; 0x1036 <DIO__CheckStatusGetPinValue+0x2e>
    1034:	e6 c0       	rjmp	.+460    	; 0x1202 <DIO__CheckStatusGetPinValue+0x1fa>
    1036:	8c 81       	ldd	r24, Y+4	; 0x04
    1038:	9d 81       	ldd	r25, Y+5	; 0x05
    103a:	00 97       	sbiw	r24, 0x00	; 0
    103c:	09 f4       	brne	.+2      	; 0x1040 <DIO__CheckStatusGetPinValue+0x38>
    103e:	e1 c0       	rjmp	.+450    	; 0x1202 <DIO__CheckStatusGetPinValue+0x1fa>
        {
                switch (Copy__uint8PortId)
    1040:	8a 81       	ldd	r24, Y+2	; 0x02
    1042:	28 2f       	mov	r18, r24
    1044:	30 e0       	ldi	r19, 0x00	; 0
    1046:	3f 83       	std	Y+7, r19	; 0x07
    1048:	2e 83       	std	Y+6, r18	; 0x06
    104a:	4e 81       	ldd	r20, Y+6	; 0x06
    104c:	5f 81       	ldd	r21, Y+7	; 0x07
    104e:	41 30       	cpi	r20, 0x01	; 1
    1050:	51 05       	cpc	r21, r1
    1052:	09 f4       	brne	.+2      	; 0x1056 <DIO__CheckStatusGetPinValue+0x4e>
    1054:	48 c0       	rjmp	.+144    	; 0x10e6 <DIO__CheckStatusGetPinValue+0xde>
    1056:	8e 81       	ldd	r24, Y+6	; 0x06
    1058:	9f 81       	ldd	r25, Y+7	; 0x07
    105a:	82 30       	cpi	r24, 0x02	; 2
    105c:	91 05       	cpc	r25, r1
    105e:	34 f4       	brge	.+12     	; 0x106c <DIO__CheckStatusGetPinValue+0x64>
    1060:	2e 81       	ldd	r18, Y+6	; 0x06
    1062:	3f 81       	ldd	r19, Y+7	; 0x07
    1064:	21 15       	cp	r18, r1
    1066:	31 05       	cpc	r19, r1
    1068:	71 f0       	breq	.+28     	; 0x1086 <DIO__CheckStatusGetPinValue+0x7e>
    106a:	ca c0       	rjmp	.+404    	; 0x1200 <DIO__CheckStatusGetPinValue+0x1f8>
    106c:	4e 81       	ldd	r20, Y+6	; 0x06
    106e:	5f 81       	ldd	r21, Y+7	; 0x07
    1070:	42 30       	cpi	r20, 0x02	; 2
    1072:	51 05       	cpc	r21, r1
    1074:	09 f4       	brne	.+2      	; 0x1078 <DIO__CheckStatusGetPinValue+0x70>
    1076:	67 c0       	rjmp	.+206    	; 0x1146 <DIO__CheckStatusGetPinValue+0x13e>
    1078:	8e 81       	ldd	r24, Y+6	; 0x06
    107a:	9f 81       	ldd	r25, Y+7	; 0x07
    107c:	83 30       	cpi	r24, 0x03	; 3
    107e:	91 05       	cpc	r25, r1
    1080:	09 f4       	brne	.+2      	; 0x1084 <DIO__CheckStatusGetPinValue+0x7c>
    1082:	90 c0       	rjmp	.+288    	; 0x11a4 <DIO__CheckStatusGetPinValue+0x19c>
    1084:	bd c0       	rjmp	.+378    	; 0x1200 <DIO__CheckStatusGetPinValue+0x1f8>
                {
                case DIO__UINT8_PORTA:
                        if (GET_BIT(PINA__UINT8_REG, Copy__uint8PinId) == 0)
    1086:	e9 e3       	ldi	r30, 0x39	; 57
    1088:	f0 e0       	ldi	r31, 0x00	; 0
    108a:	80 81       	ld	r24, Z
    108c:	28 2f       	mov	r18, r24
    108e:	30 e0       	ldi	r19, 0x00	; 0
    1090:	8b 81       	ldd	r24, Y+3	; 0x03
    1092:	88 2f       	mov	r24, r24
    1094:	90 e0       	ldi	r25, 0x00	; 0
    1096:	a9 01       	movw	r20, r18
    1098:	02 c0       	rjmp	.+4      	; 0x109e <DIO__CheckStatusGetPinValue+0x96>
    109a:	55 95       	asr	r21
    109c:	47 95       	ror	r20
    109e:	8a 95       	dec	r24
    10a0:	e2 f7       	brpl	.-8      	; 0x109a <DIO__CheckStatusGetPinValue+0x92>
    10a2:	ca 01       	movw	r24, r20
    10a4:	81 70       	andi	r24, 0x01	; 1
    10a6:	90 70       	andi	r25, 0x00	; 0
    10a8:	00 97       	sbiw	r24, 0x00	; 0
    10aa:	21 f4       	brne	.+8      	; 0x10b4 <DIO__CheckStatusGetPinValue+0xac>
                        {
                                *Copy_p_uint8ReturnPinValue = DIO__UINT8_LOW;
    10ac:	ec 81       	ldd	r30, Y+4	; 0x04
    10ae:	fd 81       	ldd	r31, Y+5	; 0x05
    10b0:	10 82       	st	Z, r1
    10b2:	a6 c0       	rjmp	.+332    	; 0x1200 <DIO__CheckStatusGetPinValue+0x1f8>
                        }
                        else if (GET_BIT(PINA__UINT8_REG, Copy__uint8PinId) != 0)
    10b4:	e9 e3       	ldi	r30, 0x39	; 57
    10b6:	f0 e0       	ldi	r31, 0x00	; 0
    10b8:	80 81       	ld	r24, Z
    10ba:	28 2f       	mov	r18, r24
    10bc:	30 e0       	ldi	r19, 0x00	; 0
    10be:	8b 81       	ldd	r24, Y+3	; 0x03
    10c0:	88 2f       	mov	r24, r24
    10c2:	90 e0       	ldi	r25, 0x00	; 0
    10c4:	a9 01       	movw	r20, r18
    10c6:	02 c0       	rjmp	.+4      	; 0x10cc <DIO__CheckStatusGetPinValue+0xc4>
    10c8:	55 95       	asr	r21
    10ca:	47 95       	ror	r20
    10cc:	8a 95       	dec	r24
    10ce:	e2 f7       	brpl	.-8      	; 0x10c8 <DIO__CheckStatusGetPinValue+0xc0>
    10d0:	ca 01       	movw	r24, r20
    10d2:	81 70       	andi	r24, 0x01	; 1
    10d4:	90 70       	andi	r25, 0x00	; 0
    10d6:	88 23       	and	r24, r24
    10d8:	09 f4       	brne	.+2      	; 0x10dc <DIO__CheckStatusGetPinValue+0xd4>
    10da:	92 c0       	rjmp	.+292    	; 0x1200 <DIO__CheckStatusGetPinValue+0x1f8>
                        {
                                *Copy_p_uint8ReturnPinValue = DIO__UINT8_HIGH;
    10dc:	ec 81       	ldd	r30, Y+4	; 0x04
    10de:	fd 81       	ldd	r31, Y+5	; 0x05
    10e0:	81 e0       	ldi	r24, 0x01	; 1
    10e2:	80 83       	st	Z, r24
    10e4:	8d c0       	rjmp	.+282    	; 0x1200 <DIO__CheckStatusGetPinValue+0x1f8>
                                /* DO NOTHING */
                        }

                        break;
                case DIO__UINT8_PORTB:
                        if (GET_BIT(PINB__UINT8_REG, Copy__uint8PinId) == 0)
    10e6:	e6 e3       	ldi	r30, 0x36	; 54
    10e8:	f0 e0       	ldi	r31, 0x00	; 0
    10ea:	80 81       	ld	r24, Z
    10ec:	28 2f       	mov	r18, r24
    10ee:	30 e0       	ldi	r19, 0x00	; 0
    10f0:	8b 81       	ldd	r24, Y+3	; 0x03
    10f2:	88 2f       	mov	r24, r24
    10f4:	90 e0       	ldi	r25, 0x00	; 0
    10f6:	a9 01       	movw	r20, r18
    10f8:	02 c0       	rjmp	.+4      	; 0x10fe <DIO__CheckStatusGetPinValue+0xf6>
    10fa:	55 95       	asr	r21
    10fc:	47 95       	ror	r20
    10fe:	8a 95       	dec	r24
    1100:	e2 f7       	brpl	.-8      	; 0x10fa <DIO__CheckStatusGetPinValue+0xf2>
    1102:	ca 01       	movw	r24, r20
    1104:	81 70       	andi	r24, 0x01	; 1
    1106:	90 70       	andi	r25, 0x00	; 0
    1108:	00 97       	sbiw	r24, 0x00	; 0
    110a:	21 f4       	brne	.+8      	; 0x1114 <DIO__CheckStatusGetPinValue+0x10c>
                        {
                                *Copy_p_uint8ReturnPinValue = DIO__UINT8_LOW;
    110c:	ec 81       	ldd	r30, Y+4	; 0x04
    110e:	fd 81       	ldd	r31, Y+5	; 0x05
    1110:	10 82       	st	Z, r1
    1112:	76 c0       	rjmp	.+236    	; 0x1200 <DIO__CheckStatusGetPinValue+0x1f8>
                        }
                        else if (GET_BIT(PINB__UINT8_REG, Copy__uint8PinId) != 0)
    1114:	e6 e3       	ldi	r30, 0x36	; 54
    1116:	f0 e0       	ldi	r31, 0x00	; 0
    1118:	80 81       	ld	r24, Z
    111a:	28 2f       	mov	r18, r24
    111c:	30 e0       	ldi	r19, 0x00	; 0
    111e:	8b 81       	ldd	r24, Y+3	; 0x03
    1120:	88 2f       	mov	r24, r24
    1122:	90 e0       	ldi	r25, 0x00	; 0
    1124:	a9 01       	movw	r20, r18
    1126:	02 c0       	rjmp	.+4      	; 0x112c <DIO__CheckStatusGetPinValue+0x124>
    1128:	55 95       	asr	r21
    112a:	47 95       	ror	r20
    112c:	8a 95       	dec	r24
    112e:	e2 f7       	brpl	.-8      	; 0x1128 <DIO__CheckStatusGetPinValue+0x120>
    1130:	ca 01       	movw	r24, r20
    1132:	81 70       	andi	r24, 0x01	; 1
    1134:	90 70       	andi	r25, 0x00	; 0
    1136:	88 23       	and	r24, r24
    1138:	09 f4       	brne	.+2      	; 0x113c <DIO__CheckStatusGetPinValue+0x134>
    113a:	62 c0       	rjmp	.+196    	; 0x1200 <DIO__CheckStatusGetPinValue+0x1f8>
                        {
                                *Copy_p_uint8ReturnPinValue = DIO__UINT8_HIGH;
    113c:	ec 81       	ldd	r30, Y+4	; 0x04
    113e:	fd 81       	ldd	r31, Y+5	; 0x05
    1140:	81 e0       	ldi	r24, 0x01	; 1
    1142:	80 83       	st	Z, r24
    1144:	5d c0       	rjmp	.+186    	; 0x1200 <DIO__CheckStatusGetPinValue+0x1f8>

                        break;

                case DIO__UINT8_PORTC:

                        if (GET_BIT(PINC__UINT8_REG, Copy__uint8PinId) == 0)
    1146:	e3 e3       	ldi	r30, 0x33	; 51
    1148:	f0 e0       	ldi	r31, 0x00	; 0
    114a:	80 81       	ld	r24, Z
    114c:	28 2f       	mov	r18, r24
    114e:	30 e0       	ldi	r19, 0x00	; 0
    1150:	8b 81       	ldd	r24, Y+3	; 0x03
    1152:	88 2f       	mov	r24, r24
    1154:	90 e0       	ldi	r25, 0x00	; 0
    1156:	a9 01       	movw	r20, r18
    1158:	02 c0       	rjmp	.+4      	; 0x115e <DIO__CheckStatusGetPinValue+0x156>
    115a:	55 95       	asr	r21
    115c:	47 95       	ror	r20
    115e:	8a 95       	dec	r24
    1160:	e2 f7       	brpl	.-8      	; 0x115a <DIO__CheckStatusGetPinValue+0x152>
    1162:	ca 01       	movw	r24, r20
    1164:	81 70       	andi	r24, 0x01	; 1
    1166:	90 70       	andi	r25, 0x00	; 0
    1168:	00 97       	sbiw	r24, 0x00	; 0
    116a:	21 f4       	brne	.+8      	; 0x1174 <DIO__CheckStatusGetPinValue+0x16c>
                        {
                                *Copy_p_uint8ReturnPinValue = DIO__UINT8_LOW;
    116c:	ec 81       	ldd	r30, Y+4	; 0x04
    116e:	fd 81       	ldd	r31, Y+5	; 0x05
    1170:	10 82       	st	Z, r1
    1172:	46 c0       	rjmp	.+140    	; 0x1200 <DIO__CheckStatusGetPinValue+0x1f8>
                        }
                        else if (GET_BIT(PINC__UINT8_REG, Copy__uint8PinId) != 0)
    1174:	e3 e3       	ldi	r30, 0x33	; 51
    1176:	f0 e0       	ldi	r31, 0x00	; 0
    1178:	80 81       	ld	r24, Z
    117a:	28 2f       	mov	r18, r24
    117c:	30 e0       	ldi	r19, 0x00	; 0
    117e:	8b 81       	ldd	r24, Y+3	; 0x03
    1180:	88 2f       	mov	r24, r24
    1182:	90 e0       	ldi	r25, 0x00	; 0
    1184:	a9 01       	movw	r20, r18
    1186:	02 c0       	rjmp	.+4      	; 0x118c <DIO__CheckStatusGetPinValue+0x184>
    1188:	55 95       	asr	r21
    118a:	47 95       	ror	r20
    118c:	8a 95       	dec	r24
    118e:	e2 f7       	brpl	.-8      	; 0x1188 <DIO__CheckStatusGetPinValue+0x180>
    1190:	ca 01       	movw	r24, r20
    1192:	81 70       	andi	r24, 0x01	; 1
    1194:	90 70       	andi	r25, 0x00	; 0
    1196:	88 23       	and	r24, r24
    1198:	99 f1       	breq	.+102    	; 0x1200 <DIO__CheckStatusGetPinValue+0x1f8>
                        {
                                *Copy_p_uint8ReturnPinValue = DIO__UINT8_HIGH;
    119a:	ec 81       	ldd	r30, Y+4	; 0x04
    119c:	fd 81       	ldd	r31, Y+5	; 0x05
    119e:	81 e0       	ldi	r24, 0x01	; 1
    11a0:	80 83       	st	Z, r24
    11a2:	2e c0       	rjmp	.+92     	; 0x1200 <DIO__CheckStatusGetPinValue+0x1f8>
                                /* DO NOTHING */
                        }

                        break;
                case DIO__UINT8_PORTD:
                        if (GET_BIT(PIND__UINT8_REG, Copy__uint8PinId) == 0)
    11a4:	e0 e3       	ldi	r30, 0x30	; 48
    11a6:	f0 e0       	ldi	r31, 0x00	; 0
    11a8:	80 81       	ld	r24, Z
    11aa:	28 2f       	mov	r18, r24
    11ac:	30 e0       	ldi	r19, 0x00	; 0
    11ae:	8b 81       	ldd	r24, Y+3	; 0x03
    11b0:	88 2f       	mov	r24, r24
    11b2:	90 e0       	ldi	r25, 0x00	; 0
    11b4:	a9 01       	movw	r20, r18
    11b6:	02 c0       	rjmp	.+4      	; 0x11bc <DIO__CheckStatusGetPinValue+0x1b4>
    11b8:	55 95       	asr	r21
    11ba:	47 95       	ror	r20
    11bc:	8a 95       	dec	r24
    11be:	e2 f7       	brpl	.-8      	; 0x11b8 <DIO__CheckStatusGetPinValue+0x1b0>
    11c0:	ca 01       	movw	r24, r20
    11c2:	81 70       	andi	r24, 0x01	; 1
    11c4:	90 70       	andi	r25, 0x00	; 0
    11c6:	00 97       	sbiw	r24, 0x00	; 0
    11c8:	21 f4       	brne	.+8      	; 0x11d2 <DIO__CheckStatusGetPinValue+0x1ca>
                        {
                                *Copy_p_uint8ReturnPinValue = DIO__UINT8_LOW;
    11ca:	ec 81       	ldd	r30, Y+4	; 0x04
    11cc:	fd 81       	ldd	r31, Y+5	; 0x05
    11ce:	10 82       	st	Z, r1
    11d0:	17 c0       	rjmp	.+46     	; 0x1200 <DIO__CheckStatusGetPinValue+0x1f8>
                        }
                        else if (GET_BIT(PIND__UINT8_REG, Copy__uint8PinId) != 0)
    11d2:	e0 e3       	ldi	r30, 0x30	; 48
    11d4:	f0 e0       	ldi	r31, 0x00	; 0
    11d6:	80 81       	ld	r24, Z
    11d8:	28 2f       	mov	r18, r24
    11da:	30 e0       	ldi	r19, 0x00	; 0
    11dc:	8b 81       	ldd	r24, Y+3	; 0x03
    11de:	88 2f       	mov	r24, r24
    11e0:	90 e0       	ldi	r25, 0x00	; 0
    11e2:	a9 01       	movw	r20, r18
    11e4:	02 c0       	rjmp	.+4      	; 0x11ea <DIO__CheckStatusGetPinValue+0x1e2>
    11e6:	55 95       	asr	r21
    11e8:	47 95       	ror	r20
    11ea:	8a 95       	dec	r24
    11ec:	e2 f7       	brpl	.-8      	; 0x11e6 <DIO__CheckStatusGetPinValue+0x1de>
    11ee:	ca 01       	movw	r24, r20
    11f0:	81 70       	andi	r24, 0x01	; 1
    11f2:	90 70       	andi	r25, 0x00	; 0
    11f4:	88 23       	and	r24, r24
    11f6:	21 f0       	breq	.+8      	; 0x1200 <DIO__CheckStatusGetPinValue+0x1f8>
                        {
                                *Copy_p_uint8ReturnPinValue = DIO__UINT8_HIGH;
    11f8:	ec 81       	ldd	r30, Y+4	; 0x04
    11fa:	fd 81       	ldd	r31, Y+5	; 0x05
    11fc:	81 e0       	ldi	r24, 0x01	; 1
    11fe:	80 83       	st	Z, r24
    1200:	04 c0       	rjmp	.+8      	; 0x120a <DIO__CheckStatusGetPinValue+0x202>
                        break;
                }
        }
        else
        {
                Local_CheckStatusReturnStatus = CHECK_FAIL;
    1202:	81 e0       	ldi	r24, 0x01	; 1
    1204:	89 83       	std	Y+1, r24	; 0x01
                return Local_CheckStatusReturnStatus;
    1206:	89 81       	ldd	r24, Y+1	; 0x01
    1208:	88 87       	std	Y+8, r24	; 0x08
        }
}
    120a:	88 85       	ldd	r24, Y+8	; 0x08
    120c:	28 96       	adiw	r28, 0x08	; 8
    120e:	0f b6       	in	r0, 0x3f	; 63
    1210:	f8 94       	cli
    1212:	de bf       	out	0x3e, r29	; 62
    1214:	0f be       	out	0x3f, r0	; 63
    1216:	cd bf       	out	0x3d, r28	; 61
    1218:	cf 91       	pop	r28
    121a:	df 91       	pop	r29
    121c:	08 95       	ret

0000121e <DIO__CheckStatusSetPortDirection>:

CheckStatus DIO__CheckStatusSetPortDirection(_uint8 Copy__uint8PortId, _uint8 Copy__uint8PortDirection)
{
    121e:	df 93       	push	r29
    1220:	cf 93       	push	r28
    1222:	cd b7       	in	r28, 0x3d	; 61
    1224:	de b7       	in	r29, 0x3e	; 62
    1226:	2e 97       	sbiw	r28, 0x0e	; 14
    1228:	0f b6       	in	r0, 0x3f	; 63
    122a:	f8 94       	cli
    122c:	de bf       	out	0x3e, r29	; 62
    122e:	0f be       	out	0x3f, r0	; 63
    1230:	cd bf       	out	0x3d, r28	; 61
    1232:	8a 83       	std	Y+2, r24	; 0x02
    1234:	6b 83       	std	Y+3, r22	; 0x03
        CheckStatus Local_CheckStatusReturnStatus = CHECK_SUCCESS;
    1236:	19 82       	std	Y+1, r1	; 0x01
        /* 
        Check 1-Valid Port Id
              2-Valid PORT diraction 
        */

        if ((Copy__uint8PortId <= DIO__UINT8_PORTD) && ((Copy__uint8PortDirection == DIO__UINT8_OUTPUT) || (Copy__uint8PortDirection == DIO__UINT8_INPUT)))
    1238:	8a 81       	ldd	r24, Y+2	; 0x02
    123a:	84 30       	cpi	r24, 0x04	; 4
    123c:	08 f0       	brcs	.+2      	; 0x1240 <DIO__CheckStatusSetPortDirection+0x22>
    123e:	87 c0       	rjmp	.+270    	; 0x134e <DIO__CheckStatusSetPortDirection+0x130>
    1240:	8b 81       	ldd	r24, Y+3	; 0x03
    1242:	81 30       	cpi	r24, 0x01	; 1
    1244:	21 f0       	breq	.+8      	; 0x124e <DIO__CheckStatusSetPortDirection+0x30>
    1246:	8b 81       	ldd	r24, Y+3	; 0x03
    1248:	88 23       	and	r24, r24
    124a:	09 f0       	breq	.+2      	; 0x124e <DIO__CheckStatusSetPortDirection+0x30>
    124c:	80 c0       	rjmp	.+256    	; 0x134e <DIO__CheckStatusSetPortDirection+0x130>
        {
                switch (Copy__uint8PortId)
    124e:	8a 81       	ldd	r24, Y+2	; 0x02
    1250:	28 2f       	mov	r18, r24
    1252:	30 e0       	ldi	r19, 0x00	; 0
    1254:	3d 87       	std	Y+13, r19	; 0x0d
    1256:	2c 87       	std	Y+12, r18	; 0x0c
    1258:	8c 85       	ldd	r24, Y+12	; 0x0c
    125a:	9d 85       	ldd	r25, Y+13	; 0x0d
    125c:	81 30       	cpi	r24, 0x01	; 1
    125e:	91 05       	cpc	r25, r1
    1260:	71 f1       	breq	.+92     	; 0x12be <DIO__CheckStatusSetPortDirection+0xa0>
    1262:	2c 85       	ldd	r18, Y+12	; 0x0c
    1264:	3d 85       	ldd	r19, Y+13	; 0x0d
    1266:	22 30       	cpi	r18, 0x02	; 2
    1268:	31 05       	cpc	r19, r1
    126a:	2c f4       	brge	.+10     	; 0x1276 <DIO__CheckStatusSetPortDirection+0x58>
    126c:	8c 85       	ldd	r24, Y+12	; 0x0c
    126e:	9d 85       	ldd	r25, Y+13	; 0x0d
    1270:	00 97       	sbiw	r24, 0x00	; 0
    1272:	69 f0       	breq	.+26     	; 0x128e <DIO__CheckStatusSetPortDirection+0x70>
    1274:	6b c0       	rjmp	.+214    	; 0x134c <DIO__CheckStatusSetPortDirection+0x12e>
    1276:	2c 85       	ldd	r18, Y+12	; 0x0c
    1278:	3d 85       	ldd	r19, Y+13	; 0x0d
    127a:	22 30       	cpi	r18, 0x02	; 2
    127c:	31 05       	cpc	r19, r1
    127e:	b9 f1       	breq	.+110    	; 0x12ee <DIO__CheckStatusSetPortDirection+0xd0>
    1280:	8c 85       	ldd	r24, Y+12	; 0x0c
    1282:	9d 85       	ldd	r25, Y+13	; 0x0d
    1284:	83 30       	cpi	r24, 0x03	; 3
    1286:	91 05       	cpc	r25, r1
    1288:	09 f4       	brne	.+2      	; 0x128c <DIO__CheckStatusSetPortDirection+0x6e>
    128a:	49 c0       	rjmp	.+146    	; 0x131e <DIO__CheckStatusSetPortDirection+0x100>
    128c:	5f c0       	rjmp	.+190    	; 0x134c <DIO__CheckStatusSetPortDirection+0x12e>
                {
                case DIO__UINT8_PORTA:
                        switch (Copy__uint8PortDirection)
    128e:	8b 81       	ldd	r24, Y+3	; 0x03
    1290:	28 2f       	mov	r18, r24
    1292:	30 e0       	ldi	r19, 0x00	; 0
    1294:	3b 87       	std	Y+11, r19	; 0x0b
    1296:	2a 87       	std	Y+10, r18	; 0x0a
    1298:	8a 85       	ldd	r24, Y+10	; 0x0a
    129a:	9b 85       	ldd	r25, Y+11	; 0x0b
    129c:	00 97       	sbiw	r24, 0x00	; 0
    129e:	31 f0       	breq	.+12     	; 0x12ac <DIO__CheckStatusSetPortDirection+0x8e>
    12a0:	2a 85       	ldd	r18, Y+10	; 0x0a
    12a2:	3b 85       	ldd	r19, Y+11	; 0x0b
    12a4:	21 30       	cpi	r18, 0x01	; 1
    12a6:	31 05       	cpc	r19, r1
    12a8:	29 f0       	breq	.+10     	; 0x12b4 <DIO__CheckStatusSetPortDirection+0x96>
    12aa:	50 c0       	rjmp	.+160    	; 0x134c <DIO__CheckStatusSetPortDirection+0x12e>
                        {
                        case DIO__UINT8_INPUT:
                                PORTA__UINT8_REG = 0x00;
    12ac:	eb e3       	ldi	r30, 0x3B	; 59
    12ae:	f0 e0       	ldi	r31, 0x00	; 0
    12b0:	10 82       	st	Z, r1
    12b2:	4c c0       	rjmp	.+152    	; 0x134c <DIO__CheckStatusSetPortDirection+0x12e>
                                break;
                        case DIO__UINT8_OUTPUT:
                                PORTA__UINT8_REG = 0xFF;
    12b4:	eb e3       	ldi	r30, 0x3B	; 59
    12b6:	f0 e0       	ldi	r31, 0x00	; 0
    12b8:	8f ef       	ldi	r24, 0xFF	; 255
    12ba:	80 83       	st	Z, r24
    12bc:	47 c0       	rjmp	.+142    	; 0x134c <DIO__CheckStatusSetPortDirection+0x12e>
                                /* DO  NOTHING */
                                break;
                        }
                        break;
                case DIO__UINT8_PORTB:
                        switch (Copy__uint8PortDirection)
    12be:	8b 81       	ldd	r24, Y+3	; 0x03
    12c0:	28 2f       	mov	r18, r24
    12c2:	30 e0       	ldi	r19, 0x00	; 0
    12c4:	39 87       	std	Y+9, r19	; 0x09
    12c6:	28 87       	std	Y+8, r18	; 0x08
    12c8:	88 85       	ldd	r24, Y+8	; 0x08
    12ca:	99 85       	ldd	r25, Y+9	; 0x09
    12cc:	00 97       	sbiw	r24, 0x00	; 0
    12ce:	31 f0       	breq	.+12     	; 0x12dc <DIO__CheckStatusSetPortDirection+0xbe>
    12d0:	28 85       	ldd	r18, Y+8	; 0x08
    12d2:	39 85       	ldd	r19, Y+9	; 0x09
    12d4:	21 30       	cpi	r18, 0x01	; 1
    12d6:	31 05       	cpc	r19, r1
    12d8:	29 f0       	breq	.+10     	; 0x12e4 <DIO__CheckStatusSetPortDirection+0xc6>
    12da:	38 c0       	rjmp	.+112    	; 0x134c <DIO__CheckStatusSetPortDirection+0x12e>
                        {
                        case DIO__UINT8_INPUT:
                                PORTB__UINT8_REG = 0x00;
    12dc:	e8 e3       	ldi	r30, 0x38	; 56
    12de:	f0 e0       	ldi	r31, 0x00	; 0
    12e0:	10 82       	st	Z, r1
    12e2:	34 c0       	rjmp	.+104    	; 0x134c <DIO__CheckStatusSetPortDirection+0x12e>
                                break;
                        case DIO__UINT8_OUTPUT:
                                PORTB__UINT8_REG = 0xFF;
    12e4:	e8 e3       	ldi	r30, 0x38	; 56
    12e6:	f0 e0       	ldi	r31, 0x00	; 0
    12e8:	8f ef       	ldi	r24, 0xFF	; 255
    12ea:	80 83       	st	Z, r24
    12ec:	2f c0       	rjmp	.+94     	; 0x134c <DIO__CheckStatusSetPortDirection+0x12e>
                        }

                        break;

                case DIO__UINT8_PORTC:
                        switch (Copy__uint8PortDirection)
    12ee:	8b 81       	ldd	r24, Y+3	; 0x03
    12f0:	28 2f       	mov	r18, r24
    12f2:	30 e0       	ldi	r19, 0x00	; 0
    12f4:	3f 83       	std	Y+7, r19	; 0x07
    12f6:	2e 83       	std	Y+6, r18	; 0x06
    12f8:	8e 81       	ldd	r24, Y+6	; 0x06
    12fa:	9f 81       	ldd	r25, Y+7	; 0x07
    12fc:	00 97       	sbiw	r24, 0x00	; 0
    12fe:	31 f0       	breq	.+12     	; 0x130c <DIO__CheckStatusSetPortDirection+0xee>
    1300:	2e 81       	ldd	r18, Y+6	; 0x06
    1302:	3f 81       	ldd	r19, Y+7	; 0x07
    1304:	21 30       	cpi	r18, 0x01	; 1
    1306:	31 05       	cpc	r19, r1
    1308:	29 f0       	breq	.+10     	; 0x1314 <DIO__CheckStatusSetPortDirection+0xf6>
    130a:	20 c0       	rjmp	.+64     	; 0x134c <DIO__CheckStatusSetPortDirection+0x12e>
                        {
                        case DIO__UINT8_INPUT:
                                PORTC__UINT8_REG = 0x00;
    130c:	e5 e3       	ldi	r30, 0x35	; 53
    130e:	f0 e0       	ldi	r31, 0x00	; 0
    1310:	10 82       	st	Z, r1
    1312:	1c c0       	rjmp	.+56     	; 0x134c <DIO__CheckStatusSetPortDirection+0x12e>
                                break;
                        case DIO__UINT8_OUTPUT:
                                PORTC__UINT8_REG = 0xFF;
    1314:	e5 e3       	ldi	r30, 0x35	; 53
    1316:	f0 e0       	ldi	r31, 0x00	; 0
    1318:	8f ef       	ldi	r24, 0xFF	; 255
    131a:	80 83       	st	Z, r24
    131c:	17 c0       	rjmp	.+46     	; 0x134c <DIO__CheckStatusSetPortDirection+0x12e>
                                break;
                        }

                        break;
                case DIO__UINT8_PORTD:
                        switch (Copy__uint8PortDirection)
    131e:	8b 81       	ldd	r24, Y+3	; 0x03
    1320:	28 2f       	mov	r18, r24
    1322:	30 e0       	ldi	r19, 0x00	; 0
    1324:	3d 83       	std	Y+5, r19	; 0x05
    1326:	2c 83       	std	Y+4, r18	; 0x04
    1328:	8c 81       	ldd	r24, Y+4	; 0x04
    132a:	9d 81       	ldd	r25, Y+5	; 0x05
    132c:	00 97       	sbiw	r24, 0x00	; 0
    132e:	31 f0       	breq	.+12     	; 0x133c <DIO__CheckStatusSetPortDirection+0x11e>
    1330:	2c 81       	ldd	r18, Y+4	; 0x04
    1332:	3d 81       	ldd	r19, Y+5	; 0x05
    1334:	21 30       	cpi	r18, 0x01	; 1
    1336:	31 05       	cpc	r19, r1
    1338:	29 f0       	breq	.+10     	; 0x1344 <DIO__CheckStatusSetPortDirection+0x126>
    133a:	08 c0       	rjmp	.+16     	; 0x134c <DIO__CheckStatusSetPortDirection+0x12e>
                        {
                        case DIO__UINT8_INPUT:
                                PORTD__UINT8_REG = 0x00;
    133c:	e2 e3       	ldi	r30, 0x32	; 50
    133e:	f0 e0       	ldi	r31, 0x00	; 0
    1340:	10 82       	st	Z, r1
    1342:	04 c0       	rjmp	.+8      	; 0x134c <DIO__CheckStatusSetPortDirection+0x12e>
                                break;
                        case DIO__UINT8_OUTPUT:
                                PORTD__UINT8_REG = 0xFF;
    1344:	e2 e3       	ldi	r30, 0x32	; 50
    1346:	f0 e0       	ldi	r31, 0x00	; 0
    1348:	8f ef       	ldi	r24, 0xFF	; 255
    134a:	80 83       	st	Z, r24
    134c:	04 c0       	rjmp	.+8      	; 0x1356 <DIO__CheckStatusSetPortDirection+0x138>
                        break;
                }
        }
        else
        {
                Local_CheckStatusReturnStatus = CHECK_FAIL;
    134e:	81 e0       	ldi	r24, 0x01	; 1
    1350:	89 83       	std	Y+1, r24	; 0x01
                return Local_CheckStatusReturnStatus;
    1352:	89 81       	ldd	r24, Y+1	; 0x01
    1354:	8e 87       	std	Y+14, r24	; 0x0e
        }
}
    1356:	8e 85       	ldd	r24, Y+14	; 0x0e
    1358:	2e 96       	adiw	r28, 0x0e	; 14
    135a:	0f b6       	in	r0, 0x3f	; 63
    135c:	f8 94       	cli
    135e:	de bf       	out	0x3e, r29	; 62
    1360:	0f be       	out	0x3f, r0	; 63
    1362:	cd bf       	out	0x3d, r28	; 61
    1364:	cf 91       	pop	r28
    1366:	df 91       	pop	r29
    1368:	08 95       	ret

0000136a <DIO__CheckStatusSetPortValue>:

CheckStatus DIO__CheckStatusSetPortValue(_uint8 Copy__uint8PortId, _uint8 Copy__uint8PortValue)
{
    136a:	df 93       	push	r29
    136c:	cf 93       	push	r28
    136e:	00 d0       	rcall	.+0      	; 0x1370 <DIO__CheckStatusSetPortValue+0x6>
    1370:	00 d0       	rcall	.+0      	; 0x1372 <DIO__CheckStatusSetPortValue+0x8>
    1372:	00 d0       	rcall	.+0      	; 0x1374 <DIO__CheckStatusSetPortValue+0xa>
    1374:	cd b7       	in	r28, 0x3d	; 61
    1376:	de b7       	in	r29, 0x3e	; 62
    1378:	8a 83       	std	Y+2, r24	; 0x02
    137a:	6b 83       	std	Y+3, r22	; 0x03

        CheckStatus Local_CheckStatusReturnStatus = CHECK_SUCCESS;
    137c:	19 82       	std	Y+1, r1	; 0x01
        /*
        Check 1-Valid PORT Id
               
        */
        if (Copy__uint8PortId <= DIO__UINT8_PORTD)
    137e:	8a 81       	ldd	r24, Y+2	; 0x02
    1380:	84 30       	cpi	r24, 0x04	; 4
    1382:	98 f5       	brcc	.+102    	; 0x13ea <DIO__CheckStatusSetPortValue+0x80>
        {
                switch (Copy__uint8PortId)
    1384:	8a 81       	ldd	r24, Y+2	; 0x02
    1386:	28 2f       	mov	r18, r24
    1388:	30 e0       	ldi	r19, 0x00	; 0
    138a:	3d 83       	std	Y+5, r19	; 0x05
    138c:	2c 83       	std	Y+4, r18	; 0x04
    138e:	8c 81       	ldd	r24, Y+4	; 0x04
    1390:	9d 81       	ldd	r25, Y+5	; 0x05
    1392:	81 30       	cpi	r24, 0x01	; 1
    1394:	91 05       	cpc	r25, r1
    1396:	d1 f0       	breq	.+52     	; 0x13cc <DIO__CheckStatusSetPortValue+0x62>
    1398:	2c 81       	ldd	r18, Y+4	; 0x04
    139a:	3d 81       	ldd	r19, Y+5	; 0x05
    139c:	22 30       	cpi	r18, 0x02	; 2
    139e:	31 05       	cpc	r19, r1
    13a0:	2c f4       	brge	.+10     	; 0x13ac <DIO__CheckStatusSetPortValue+0x42>
    13a2:	8c 81       	ldd	r24, Y+4	; 0x04
    13a4:	9d 81       	ldd	r25, Y+5	; 0x05
    13a6:	00 97       	sbiw	r24, 0x00	; 0
    13a8:	61 f0       	breq	.+24     	; 0x13c2 <DIO__CheckStatusSetPortValue+0x58>
    13aa:	1e c0       	rjmp	.+60     	; 0x13e8 <DIO__CheckStatusSetPortValue+0x7e>
    13ac:	2c 81       	ldd	r18, Y+4	; 0x04
    13ae:	3d 81       	ldd	r19, Y+5	; 0x05
    13b0:	22 30       	cpi	r18, 0x02	; 2
    13b2:	31 05       	cpc	r19, r1
    13b4:	81 f0       	breq	.+32     	; 0x13d6 <DIO__CheckStatusSetPortValue+0x6c>
    13b6:	8c 81       	ldd	r24, Y+4	; 0x04
    13b8:	9d 81       	ldd	r25, Y+5	; 0x05
    13ba:	83 30       	cpi	r24, 0x03	; 3
    13bc:	91 05       	cpc	r25, r1
    13be:	81 f0       	breq	.+32     	; 0x13e0 <DIO__CheckStatusSetPortValue+0x76>
    13c0:	13 c0       	rjmp	.+38     	; 0x13e8 <DIO__CheckStatusSetPortValue+0x7e>
                {
                case DIO__UINT8_PORTA:
                        PORTA__UINT8_REG = Copy__uint8PortValue;
    13c2:	eb e3       	ldi	r30, 0x3B	; 59
    13c4:	f0 e0       	ldi	r31, 0x00	; 0
    13c6:	8b 81       	ldd	r24, Y+3	; 0x03
    13c8:	80 83       	st	Z, r24
    13ca:	0e c0       	rjmp	.+28     	; 0x13e8 <DIO__CheckStatusSetPortValue+0x7e>
                        break;
                case DIO__UINT8_PORTB:
                        PORTB__UINT8_REG = Copy__uint8PortValue;
    13cc:	e8 e3       	ldi	r30, 0x38	; 56
    13ce:	f0 e0       	ldi	r31, 0x00	; 0
    13d0:	8b 81       	ldd	r24, Y+3	; 0x03
    13d2:	80 83       	st	Z, r24
    13d4:	09 c0       	rjmp	.+18     	; 0x13e8 <DIO__CheckStatusSetPortValue+0x7e>
                        break;
                case DIO__UINT8_PORTC:
                        PORTC__UINT8_REG = Copy__uint8PortValue;
    13d6:	e5 e3       	ldi	r30, 0x35	; 53
    13d8:	f0 e0       	ldi	r31, 0x00	; 0
    13da:	8b 81       	ldd	r24, Y+3	; 0x03
    13dc:	80 83       	st	Z, r24
    13de:	04 c0       	rjmp	.+8      	; 0x13e8 <DIO__CheckStatusSetPortValue+0x7e>
                        break;
                case DIO__UINT8_PORTD:
                        PORTD__UINT8_REG = Copy__uint8PortValue;
    13e0:	e2 e3       	ldi	r30, 0x32	; 50
    13e2:	f0 e0       	ldi	r31, 0x00	; 0
    13e4:	8b 81       	ldd	r24, Y+3	; 0x03
    13e6:	80 83       	st	Z, r24
    13e8:	04 c0       	rjmp	.+8      	; 0x13f2 <DIO__CheckStatusSetPortValue+0x88>
                        break;
                }
        }
        else
        {
                Local_CheckStatusReturnStatus = CHECK_FAIL;
    13ea:	81 e0       	ldi	r24, 0x01	; 1
    13ec:	89 83       	std	Y+1, r24	; 0x01
                return Local_CheckStatusReturnStatus;
    13ee:	89 81       	ldd	r24, Y+1	; 0x01
    13f0:	8e 83       	std	Y+6, r24	; 0x06
        }
}
    13f2:	8e 81       	ldd	r24, Y+6	; 0x06
    13f4:	26 96       	adiw	r28, 0x06	; 6
    13f6:	0f b6       	in	r0, 0x3f	; 63
    13f8:	f8 94       	cli
    13fa:	de bf       	out	0x3e, r29	; 62
    13fc:	0f be       	out	0x3f, r0	; 63
    13fe:	cd bf       	out	0x3d, r28	; 61
    1400:	cf 91       	pop	r28
    1402:	df 91       	pop	r29
    1404:	08 95       	ret

00001406 <DIO__CheckStatusGetPortValue>:

CheckStatus DIO__CheckStatusGetPortValue(_uint8 Copy__uint8PortId, _uint8 *Copy_p_uint8ReturnPortValue)
{
    1406:	df 93       	push	r29
    1408:	cf 93       	push	r28
    140a:	cd b7       	in	r28, 0x3d	; 61
    140c:	de b7       	in	r29, 0x3e	; 62
    140e:	27 97       	sbiw	r28, 0x07	; 7
    1410:	0f b6       	in	r0, 0x3f	; 63
    1412:	f8 94       	cli
    1414:	de bf       	out	0x3e, r29	; 62
    1416:	0f be       	out	0x3f, r0	; 63
    1418:	cd bf       	out	0x3d, r28	; 61
    141a:	8a 83       	std	Y+2, r24	; 0x02
    141c:	7c 83       	std	Y+4, r23	; 0x04
    141e:	6b 83       	std	Y+3, r22	; 0x03
        CheckStatus Local_CheckStatusReturnStatus = CHECK_SUCCESS;
    1420:	19 82       	std	Y+1, r1	; 0x01
        /*
        Check 1-Valid Pointer != NULL
               
        */
        if (Copy_p_uint8ReturnPortValue != NULL)
    1422:	8b 81       	ldd	r24, Y+3	; 0x03
    1424:	9c 81       	ldd	r25, Y+4	; 0x04
    1426:	00 97       	sbiw	r24, 0x00	; 0
    1428:	d9 f1       	breq	.+118    	; 0x14a0 <DIO__CheckStatusGetPortValue+0x9a>
        {
                switch (Copy__uint8PortId)
    142a:	8a 81       	ldd	r24, Y+2	; 0x02
    142c:	28 2f       	mov	r18, r24
    142e:	30 e0       	ldi	r19, 0x00	; 0
    1430:	3e 83       	std	Y+6, r19	; 0x06
    1432:	2d 83       	std	Y+5, r18	; 0x05
    1434:	8d 81       	ldd	r24, Y+5	; 0x05
    1436:	9e 81       	ldd	r25, Y+6	; 0x06
    1438:	81 30       	cpi	r24, 0x01	; 1
    143a:	91 05       	cpc	r25, r1
    143c:	e1 f0       	breq	.+56     	; 0x1476 <DIO__CheckStatusGetPortValue+0x70>
    143e:	2d 81       	ldd	r18, Y+5	; 0x05
    1440:	3e 81       	ldd	r19, Y+6	; 0x06
    1442:	22 30       	cpi	r18, 0x02	; 2
    1444:	31 05       	cpc	r19, r1
    1446:	2c f4       	brge	.+10     	; 0x1452 <DIO__CheckStatusGetPortValue+0x4c>
    1448:	8d 81       	ldd	r24, Y+5	; 0x05
    144a:	9e 81       	ldd	r25, Y+6	; 0x06
    144c:	00 97       	sbiw	r24, 0x00	; 0
    144e:	61 f0       	breq	.+24     	; 0x1468 <DIO__CheckStatusGetPortValue+0x62>
    1450:	26 c0       	rjmp	.+76     	; 0x149e <DIO__CheckStatusGetPortValue+0x98>
    1452:	2d 81       	ldd	r18, Y+5	; 0x05
    1454:	3e 81       	ldd	r19, Y+6	; 0x06
    1456:	22 30       	cpi	r18, 0x02	; 2
    1458:	31 05       	cpc	r19, r1
    145a:	a1 f0       	breq	.+40     	; 0x1484 <DIO__CheckStatusGetPortValue+0x7e>
    145c:	8d 81       	ldd	r24, Y+5	; 0x05
    145e:	9e 81       	ldd	r25, Y+6	; 0x06
    1460:	83 30       	cpi	r24, 0x03	; 3
    1462:	91 05       	cpc	r25, r1
    1464:	b1 f0       	breq	.+44     	; 0x1492 <DIO__CheckStatusGetPortValue+0x8c>
    1466:	1b c0       	rjmp	.+54     	; 0x149e <DIO__CheckStatusGetPortValue+0x98>
                {
                case DIO__UINT8_PORTA:
                        *Copy_p_uint8ReturnPortValue = PINA__UINT8_REG;
    1468:	e9 e3       	ldi	r30, 0x39	; 57
    146a:	f0 e0       	ldi	r31, 0x00	; 0
    146c:	80 81       	ld	r24, Z
    146e:	eb 81       	ldd	r30, Y+3	; 0x03
    1470:	fc 81       	ldd	r31, Y+4	; 0x04
    1472:	80 83       	st	Z, r24
    1474:	14 c0       	rjmp	.+40     	; 0x149e <DIO__CheckStatusGetPortValue+0x98>
                        break;
                case DIO__UINT8_PORTB:
                        *Copy_p_uint8ReturnPortValue = PINB__UINT8_REG;
    1476:	e6 e3       	ldi	r30, 0x36	; 54
    1478:	f0 e0       	ldi	r31, 0x00	; 0
    147a:	80 81       	ld	r24, Z
    147c:	eb 81       	ldd	r30, Y+3	; 0x03
    147e:	fc 81       	ldd	r31, Y+4	; 0x04
    1480:	80 83       	st	Z, r24
    1482:	0d c0       	rjmp	.+26     	; 0x149e <DIO__CheckStatusGetPortValue+0x98>

                        break;
                case DIO__UINT8_PORTC:
                        *Copy_p_uint8ReturnPortValue = PINC__UINT8_REG;
    1484:	e3 e3       	ldi	r30, 0x33	; 51
    1486:	f0 e0       	ldi	r31, 0x00	; 0
    1488:	80 81       	ld	r24, Z
    148a:	eb 81       	ldd	r30, Y+3	; 0x03
    148c:	fc 81       	ldd	r31, Y+4	; 0x04
    148e:	80 83       	st	Z, r24
    1490:	06 c0       	rjmp	.+12     	; 0x149e <DIO__CheckStatusGetPortValue+0x98>
                        break;
                case DIO__UINT8_PORTD:
                        *Copy_p_uint8ReturnPortValue = PIND__UINT8_REG;
    1492:	e0 e3       	ldi	r30, 0x30	; 48
    1494:	f0 e0       	ldi	r31, 0x00	; 0
    1496:	80 81       	ld	r24, Z
    1498:	eb 81       	ldd	r30, Y+3	; 0x03
    149a:	fc 81       	ldd	r31, Y+4	; 0x04
    149c:	80 83       	st	Z, r24
    149e:	04 c0       	rjmp	.+8      	; 0x14a8 <DIO__CheckStatusGetPortValue+0xa2>
                        break;
                }
        }
        else
        {
                Local_CheckStatusReturnStatus = CHECK_FAIL;
    14a0:	81 e0       	ldi	r24, 0x01	; 1
    14a2:	89 83       	std	Y+1, r24	; 0x01
                return Local_CheckStatusReturnStatus;
    14a4:	89 81       	ldd	r24, Y+1	; 0x01
    14a6:	8f 83       	std	Y+7, r24	; 0x07
        }
}
    14a8:	8f 81       	ldd	r24, Y+7	; 0x07
    14aa:	27 96       	adiw	r28, 0x07	; 7
    14ac:	0f b6       	in	r0, 0x3f	; 63
    14ae:	f8 94       	cli
    14b0:	de bf       	out	0x3e, r29	; 62
    14b2:	0f be       	out	0x3f, r0	; 63
    14b4:	cd bf       	out	0x3d, r28	; 61
    14b6:	cf 91       	pop	r28
    14b8:	df 91       	pop	r29
    14ba:	08 95       	ret

000014bc <main>:
Ssegment Arr[10]={ZERO,ONE,TWO,THREE,FOUR,FIVE,SIX,SEVEN,EIGHT,NINE};
*/
void FUN_LEFT(void);
void FUN_RIGHT(void);

int main (){
    14bc:	df 93       	push	r29
    14be:	cf 93       	push	r28
    14c0:	0f 92       	push	r0
    14c2:	cd b7       	in	r28, 0x3d	; 61
    14c4:	de b7       	in	r29, 0x3e	; 62

_uint8  Local__uint8ReadValue ;
DIO__CheckStatusInit();
    14c6:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO__CheckStatusInit>

while(TRUE)
{
	DIO__CheckStatusGetPinValue(DIO__UINT8_PORTC,DIO__UINT8_PIN0,&Local__uint8ReadValue);
    14ca:	82 e0       	ldi	r24, 0x02	; 2
    14cc:	60 e0       	ldi	r22, 0x00	; 0
    14ce:	9e 01       	movw	r18, r28
    14d0:	2f 5f       	subi	r18, 0xFF	; 255
    14d2:	3f 4f       	sbci	r19, 0xFF	; 255
    14d4:	a9 01       	movw	r20, r18
    14d6:	0e 94 04 08 	call	0x1008	; 0x1008 <DIO__CheckStatusGetPinValue>
	DIO__CheckStatusGetPinValue(DIO__UINT8_PORTC,DIO__UINT8_PIN1,&Local__uint8ReadValue);
    14da:	82 e0       	ldi	r24, 0x02	; 2
    14dc:	61 e0       	ldi	r22, 0x01	; 1
    14de:	9e 01       	movw	r18, r28
    14e0:	2f 5f       	subi	r18, 0xFF	; 255
    14e2:	3f 4f       	sbci	r19, 0xFF	; 255
    14e4:	a9 01       	movw	r20, r18
    14e6:	0e 94 04 08 	call	0x1008	; 0x1008 <DIO__CheckStatusGetPinValue>
if(Local__uint8ReadValue == DIO__UINT8_LOW )
    14ea:	89 81       	ldd	r24, Y+1	; 0x01
    14ec:	88 23       	and	r24, r24
    14ee:	11 f4       	brne	.+4      	; 0x14f4 <main+0x38>
{

FUN_LEFT();
    14f0:	0e 94 80 0a 	call	0x1500	; 0x1500 <FUN_LEFT>

}
if( Local__uint8ReadValue != DIO__UINT8_LOW)
    14f4:	89 81       	ldd	r24, Y+1	; 0x01
    14f6:	88 23       	and	r24, r24
    14f8:	41 f3       	breq	.-48     	; 0x14ca <main+0xe>
{


FUN_RIGHT();
    14fa:	0e 94 9a 15 	call	0x2b34	; 0x2b34 <FUN_RIGHT>
    14fe:	e5 cf       	rjmp	.-54     	; 0x14ca <main+0xe>

00001500 <FUN_LEFT>:




void FUN_LEFT(void)
{
    1500:	0f 93       	push	r16
    1502:	1f 93       	push	r17
    1504:	df 93       	push	r29
    1506:	cf 93       	push	r28
    1508:	cd b7       	in	r28, 0x3d	; 61
    150a:	de b7       	in	r29, 0x3e	; 62
    150c:	ce 5e       	subi	r28, 0xEE	; 238
    150e:	d0 40       	sbci	r29, 0x00	; 0
    1510:	0f b6       	in	r0, 0x3f	; 63
    1512:	f8 94       	cli
    1514:	de bf       	out	0x3e, r29	; 62
    1516:	0f be       	out	0x3f, r0	; 63
    1518:	cd bf       	out	0x3d, r28	; 61
DIO__CheckStatusSetPinValue(DIO__UINT8_PORTA,DIO__UINT8_PIN7,DIO__UINT8_HIGH);
    151a:	80 e0       	ldi	r24, 0x00	; 0
    151c:	67 e0       	ldi	r22, 0x07	; 7
    151e:	41 e0       	ldi	r20, 0x01	; 1
    1520:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <DIO__CheckStatusSetPinValue>
    1524:	fe 01       	movw	r30, r28
    1526:	e5 51       	subi	r30, 0x15	; 21
    1528:	ff 4f       	sbci	r31, 0xFF	; 255
    152a:	80 e0       	ldi	r24, 0x00	; 0
    152c:	90 e0       	ldi	r25, 0x00	; 0
    152e:	a8 e4       	ldi	r26, 0x48	; 72
    1530:	b2 e4       	ldi	r27, 0x42	; 66
    1532:	80 83       	st	Z, r24
    1534:	91 83       	std	Z+1, r25	; 0x01
    1536:	a2 83       	std	Z+2, r26	; 0x02
    1538:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    153a:	8e 01       	movw	r16, r28
    153c:	09 51       	subi	r16, 0x19	; 25
    153e:	1f 4f       	sbci	r17, 0xFF	; 255
    1540:	fe 01       	movw	r30, r28
    1542:	e5 51       	subi	r30, 0x15	; 21
    1544:	ff 4f       	sbci	r31, 0xFF	; 255
    1546:	60 81       	ld	r22, Z
    1548:	71 81       	ldd	r23, Z+1	; 0x01
    154a:	82 81       	ldd	r24, Z+2	; 0x02
    154c:	93 81       	ldd	r25, Z+3	; 0x03
    154e:	20 e0       	ldi	r18, 0x00	; 0
    1550:	30 e0       	ldi	r19, 0x00	; 0
    1552:	4a ef       	ldi	r20, 0xFA	; 250
    1554:	54 e4       	ldi	r21, 0x44	; 68
    1556:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    155a:	dc 01       	movw	r26, r24
    155c:	cb 01       	movw	r24, r22
    155e:	f8 01       	movw	r30, r16
    1560:	80 83       	st	Z, r24
    1562:	91 83       	std	Z+1, r25	; 0x01
    1564:	a2 83       	std	Z+2, r26	; 0x02
    1566:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1568:	fe 01       	movw	r30, r28
    156a:	e9 51       	subi	r30, 0x19	; 25
    156c:	ff 4f       	sbci	r31, 0xFF	; 255
    156e:	60 81       	ld	r22, Z
    1570:	71 81       	ldd	r23, Z+1	; 0x01
    1572:	82 81       	ldd	r24, Z+2	; 0x02
    1574:	93 81       	ldd	r25, Z+3	; 0x03
    1576:	20 e0       	ldi	r18, 0x00	; 0
    1578:	30 e0       	ldi	r19, 0x00	; 0
    157a:	40 e8       	ldi	r20, 0x80	; 128
    157c:	5f e3       	ldi	r21, 0x3F	; 63
    157e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1582:	88 23       	and	r24, r24
    1584:	44 f4       	brge	.+16     	; 0x1596 <FUN_LEFT+0x96>
		__ticks = 1;
    1586:	fe 01       	movw	r30, r28
    1588:	eb 51       	subi	r30, 0x1B	; 27
    158a:	ff 4f       	sbci	r31, 0xFF	; 255
    158c:	81 e0       	ldi	r24, 0x01	; 1
    158e:	90 e0       	ldi	r25, 0x00	; 0
    1590:	91 83       	std	Z+1, r25	; 0x01
    1592:	80 83       	st	Z, r24
    1594:	64 c0       	rjmp	.+200    	; 0x165e <FUN_LEFT+0x15e>
	else if (__tmp > 65535)
    1596:	fe 01       	movw	r30, r28
    1598:	e9 51       	subi	r30, 0x19	; 25
    159a:	ff 4f       	sbci	r31, 0xFF	; 255
    159c:	60 81       	ld	r22, Z
    159e:	71 81       	ldd	r23, Z+1	; 0x01
    15a0:	82 81       	ldd	r24, Z+2	; 0x02
    15a2:	93 81       	ldd	r25, Z+3	; 0x03
    15a4:	20 e0       	ldi	r18, 0x00	; 0
    15a6:	3f ef       	ldi	r19, 0xFF	; 255
    15a8:	4f e7       	ldi	r20, 0x7F	; 127
    15aa:	57 e4       	ldi	r21, 0x47	; 71
    15ac:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    15b0:	18 16       	cp	r1, r24
    15b2:	0c f0       	brlt	.+2      	; 0x15b6 <FUN_LEFT+0xb6>
    15b4:	43 c0       	rjmp	.+134    	; 0x163c <FUN_LEFT+0x13c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    15b6:	fe 01       	movw	r30, r28
    15b8:	e5 51       	subi	r30, 0x15	; 21
    15ba:	ff 4f       	sbci	r31, 0xFF	; 255
    15bc:	60 81       	ld	r22, Z
    15be:	71 81       	ldd	r23, Z+1	; 0x01
    15c0:	82 81       	ldd	r24, Z+2	; 0x02
    15c2:	93 81       	ldd	r25, Z+3	; 0x03
    15c4:	20 e0       	ldi	r18, 0x00	; 0
    15c6:	30 e0       	ldi	r19, 0x00	; 0
    15c8:	40 e2       	ldi	r20, 0x20	; 32
    15ca:	51 e4       	ldi	r21, 0x41	; 65
    15cc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    15d0:	dc 01       	movw	r26, r24
    15d2:	cb 01       	movw	r24, r22
    15d4:	8e 01       	movw	r16, r28
    15d6:	0b 51       	subi	r16, 0x1B	; 27
    15d8:	1f 4f       	sbci	r17, 0xFF	; 255
    15da:	bc 01       	movw	r22, r24
    15dc:	cd 01       	movw	r24, r26
    15de:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    15e2:	dc 01       	movw	r26, r24
    15e4:	cb 01       	movw	r24, r22
    15e6:	f8 01       	movw	r30, r16
    15e8:	91 83       	std	Z+1, r25	; 0x01
    15ea:	80 83       	st	Z, r24
    15ec:	1f c0       	rjmp	.+62     	; 0x162c <FUN_LEFT+0x12c>
    15ee:	fe 01       	movw	r30, r28
    15f0:	ed 51       	subi	r30, 0x1D	; 29
    15f2:	ff 4f       	sbci	r31, 0xFF	; 255
    15f4:	88 ec       	ldi	r24, 0xC8	; 200
    15f6:	90 e0       	ldi	r25, 0x00	; 0
    15f8:	91 83       	std	Z+1, r25	; 0x01
    15fa:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    15fc:	fe 01       	movw	r30, r28
    15fe:	ed 51       	subi	r30, 0x1D	; 29
    1600:	ff 4f       	sbci	r31, 0xFF	; 255
    1602:	80 81       	ld	r24, Z
    1604:	91 81       	ldd	r25, Z+1	; 0x01
    1606:	01 97       	sbiw	r24, 0x01	; 1
    1608:	f1 f7       	brne	.-4      	; 0x1606 <FUN_LEFT+0x106>
    160a:	fe 01       	movw	r30, r28
    160c:	ed 51       	subi	r30, 0x1D	; 29
    160e:	ff 4f       	sbci	r31, 0xFF	; 255
    1610:	91 83       	std	Z+1, r25	; 0x01
    1612:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1614:	de 01       	movw	r26, r28
    1616:	ab 51       	subi	r26, 0x1B	; 27
    1618:	bf 4f       	sbci	r27, 0xFF	; 255
    161a:	fe 01       	movw	r30, r28
    161c:	eb 51       	subi	r30, 0x1B	; 27
    161e:	ff 4f       	sbci	r31, 0xFF	; 255
    1620:	80 81       	ld	r24, Z
    1622:	91 81       	ldd	r25, Z+1	; 0x01
    1624:	01 97       	sbiw	r24, 0x01	; 1
    1626:	11 96       	adiw	r26, 0x01	; 1
    1628:	9c 93       	st	X, r25
    162a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    162c:	fe 01       	movw	r30, r28
    162e:	eb 51       	subi	r30, 0x1B	; 27
    1630:	ff 4f       	sbci	r31, 0xFF	; 255
    1632:	80 81       	ld	r24, Z
    1634:	91 81       	ldd	r25, Z+1	; 0x01
    1636:	00 97       	sbiw	r24, 0x00	; 0
    1638:	d1 f6       	brne	.-76     	; 0x15ee <FUN_LEFT+0xee>
    163a:	27 c0       	rjmp	.+78     	; 0x168a <FUN_LEFT+0x18a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    163c:	8e 01       	movw	r16, r28
    163e:	0b 51       	subi	r16, 0x1B	; 27
    1640:	1f 4f       	sbci	r17, 0xFF	; 255
    1642:	fe 01       	movw	r30, r28
    1644:	e9 51       	subi	r30, 0x19	; 25
    1646:	ff 4f       	sbci	r31, 0xFF	; 255
    1648:	60 81       	ld	r22, Z
    164a:	71 81       	ldd	r23, Z+1	; 0x01
    164c:	82 81       	ldd	r24, Z+2	; 0x02
    164e:	93 81       	ldd	r25, Z+3	; 0x03
    1650:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1654:	dc 01       	movw	r26, r24
    1656:	cb 01       	movw	r24, r22
    1658:	f8 01       	movw	r30, r16
    165a:	91 83       	std	Z+1, r25	; 0x01
    165c:	80 83       	st	Z, r24
    165e:	de 01       	movw	r26, r28
    1660:	af 51       	subi	r26, 0x1F	; 31
    1662:	bf 4f       	sbci	r27, 0xFF	; 255
    1664:	fe 01       	movw	r30, r28
    1666:	eb 51       	subi	r30, 0x1B	; 27
    1668:	ff 4f       	sbci	r31, 0xFF	; 255
    166a:	80 81       	ld	r24, Z
    166c:	91 81       	ldd	r25, Z+1	; 0x01
    166e:	8d 93       	st	X+, r24
    1670:	9c 93       	st	X, r25
    1672:	fe 01       	movw	r30, r28
    1674:	ef 51       	subi	r30, 0x1F	; 31
    1676:	ff 4f       	sbci	r31, 0xFF	; 255
    1678:	80 81       	ld	r24, Z
    167a:	91 81       	ldd	r25, Z+1	; 0x01
    167c:	01 97       	sbiw	r24, 0x01	; 1
    167e:	f1 f7       	brne	.-4      	; 0x167c <FUN_LEFT+0x17c>
    1680:	fe 01       	movw	r30, r28
    1682:	ef 51       	subi	r30, 0x1F	; 31
    1684:	ff 4f       	sbci	r31, 0xFF	; 255
    1686:	91 83       	std	Z+1, r25	; 0x01
    1688:	80 83       	st	Z, r24
_delay_ms(50);
DIO__CheckStatusSetPinValue(DIO__UINT8_PORTA,DIO__UINT8_PIN7,DIO__UINT8_LOW);
    168a:	80 e0       	ldi	r24, 0x00	; 0
    168c:	67 e0       	ldi	r22, 0x07	; 7
    168e:	40 e0       	ldi	r20, 0x00	; 0
    1690:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <DIO__CheckStatusSetPinValue>
    1694:	fe 01       	movw	r30, r28
    1696:	e3 52       	subi	r30, 0x23	; 35
    1698:	ff 4f       	sbci	r31, 0xFF	; 255
    169a:	80 e0       	ldi	r24, 0x00	; 0
    169c:	90 e0       	ldi	r25, 0x00	; 0
    169e:	a8 e4       	ldi	r26, 0x48	; 72
    16a0:	b2 e4       	ldi	r27, 0x42	; 66
    16a2:	80 83       	st	Z, r24
    16a4:	91 83       	std	Z+1, r25	; 0x01
    16a6:	a2 83       	std	Z+2, r26	; 0x02
    16a8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    16aa:	8e 01       	movw	r16, r28
    16ac:	07 52       	subi	r16, 0x27	; 39
    16ae:	1f 4f       	sbci	r17, 0xFF	; 255
    16b0:	fe 01       	movw	r30, r28
    16b2:	e3 52       	subi	r30, 0x23	; 35
    16b4:	ff 4f       	sbci	r31, 0xFF	; 255
    16b6:	60 81       	ld	r22, Z
    16b8:	71 81       	ldd	r23, Z+1	; 0x01
    16ba:	82 81       	ldd	r24, Z+2	; 0x02
    16bc:	93 81       	ldd	r25, Z+3	; 0x03
    16be:	20 e0       	ldi	r18, 0x00	; 0
    16c0:	30 e0       	ldi	r19, 0x00	; 0
    16c2:	4a ef       	ldi	r20, 0xFA	; 250
    16c4:	54 e4       	ldi	r21, 0x44	; 68
    16c6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    16ca:	dc 01       	movw	r26, r24
    16cc:	cb 01       	movw	r24, r22
    16ce:	f8 01       	movw	r30, r16
    16d0:	80 83       	st	Z, r24
    16d2:	91 83       	std	Z+1, r25	; 0x01
    16d4:	a2 83       	std	Z+2, r26	; 0x02
    16d6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    16d8:	fe 01       	movw	r30, r28
    16da:	e7 52       	subi	r30, 0x27	; 39
    16dc:	ff 4f       	sbci	r31, 0xFF	; 255
    16de:	60 81       	ld	r22, Z
    16e0:	71 81       	ldd	r23, Z+1	; 0x01
    16e2:	82 81       	ldd	r24, Z+2	; 0x02
    16e4:	93 81       	ldd	r25, Z+3	; 0x03
    16e6:	20 e0       	ldi	r18, 0x00	; 0
    16e8:	30 e0       	ldi	r19, 0x00	; 0
    16ea:	40 e8       	ldi	r20, 0x80	; 128
    16ec:	5f e3       	ldi	r21, 0x3F	; 63
    16ee:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    16f2:	88 23       	and	r24, r24
    16f4:	44 f4       	brge	.+16     	; 0x1706 <FUN_LEFT+0x206>
		__ticks = 1;
    16f6:	fe 01       	movw	r30, r28
    16f8:	e9 52       	subi	r30, 0x29	; 41
    16fa:	ff 4f       	sbci	r31, 0xFF	; 255
    16fc:	81 e0       	ldi	r24, 0x01	; 1
    16fe:	90 e0       	ldi	r25, 0x00	; 0
    1700:	91 83       	std	Z+1, r25	; 0x01
    1702:	80 83       	st	Z, r24
    1704:	64 c0       	rjmp	.+200    	; 0x17ce <FUN_LEFT+0x2ce>
	else if (__tmp > 65535)
    1706:	fe 01       	movw	r30, r28
    1708:	e7 52       	subi	r30, 0x27	; 39
    170a:	ff 4f       	sbci	r31, 0xFF	; 255
    170c:	60 81       	ld	r22, Z
    170e:	71 81       	ldd	r23, Z+1	; 0x01
    1710:	82 81       	ldd	r24, Z+2	; 0x02
    1712:	93 81       	ldd	r25, Z+3	; 0x03
    1714:	20 e0       	ldi	r18, 0x00	; 0
    1716:	3f ef       	ldi	r19, 0xFF	; 255
    1718:	4f e7       	ldi	r20, 0x7F	; 127
    171a:	57 e4       	ldi	r21, 0x47	; 71
    171c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1720:	18 16       	cp	r1, r24
    1722:	0c f0       	brlt	.+2      	; 0x1726 <FUN_LEFT+0x226>
    1724:	43 c0       	rjmp	.+134    	; 0x17ac <FUN_LEFT+0x2ac>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1726:	fe 01       	movw	r30, r28
    1728:	e3 52       	subi	r30, 0x23	; 35
    172a:	ff 4f       	sbci	r31, 0xFF	; 255
    172c:	60 81       	ld	r22, Z
    172e:	71 81       	ldd	r23, Z+1	; 0x01
    1730:	82 81       	ldd	r24, Z+2	; 0x02
    1732:	93 81       	ldd	r25, Z+3	; 0x03
    1734:	20 e0       	ldi	r18, 0x00	; 0
    1736:	30 e0       	ldi	r19, 0x00	; 0
    1738:	40 e2       	ldi	r20, 0x20	; 32
    173a:	51 e4       	ldi	r21, 0x41	; 65
    173c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1740:	dc 01       	movw	r26, r24
    1742:	cb 01       	movw	r24, r22
    1744:	8e 01       	movw	r16, r28
    1746:	09 52       	subi	r16, 0x29	; 41
    1748:	1f 4f       	sbci	r17, 0xFF	; 255
    174a:	bc 01       	movw	r22, r24
    174c:	cd 01       	movw	r24, r26
    174e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1752:	dc 01       	movw	r26, r24
    1754:	cb 01       	movw	r24, r22
    1756:	f8 01       	movw	r30, r16
    1758:	91 83       	std	Z+1, r25	; 0x01
    175a:	80 83       	st	Z, r24
    175c:	1f c0       	rjmp	.+62     	; 0x179c <FUN_LEFT+0x29c>
    175e:	fe 01       	movw	r30, r28
    1760:	eb 52       	subi	r30, 0x2B	; 43
    1762:	ff 4f       	sbci	r31, 0xFF	; 255
    1764:	88 ec       	ldi	r24, 0xC8	; 200
    1766:	90 e0       	ldi	r25, 0x00	; 0
    1768:	91 83       	std	Z+1, r25	; 0x01
    176a:	80 83       	st	Z, r24
    176c:	fe 01       	movw	r30, r28
    176e:	eb 52       	subi	r30, 0x2B	; 43
    1770:	ff 4f       	sbci	r31, 0xFF	; 255
    1772:	80 81       	ld	r24, Z
    1774:	91 81       	ldd	r25, Z+1	; 0x01
    1776:	01 97       	sbiw	r24, 0x01	; 1
    1778:	f1 f7       	brne	.-4      	; 0x1776 <FUN_LEFT+0x276>
    177a:	fe 01       	movw	r30, r28
    177c:	eb 52       	subi	r30, 0x2B	; 43
    177e:	ff 4f       	sbci	r31, 0xFF	; 255
    1780:	91 83       	std	Z+1, r25	; 0x01
    1782:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1784:	de 01       	movw	r26, r28
    1786:	a9 52       	subi	r26, 0x29	; 41
    1788:	bf 4f       	sbci	r27, 0xFF	; 255
    178a:	fe 01       	movw	r30, r28
    178c:	e9 52       	subi	r30, 0x29	; 41
    178e:	ff 4f       	sbci	r31, 0xFF	; 255
    1790:	80 81       	ld	r24, Z
    1792:	91 81       	ldd	r25, Z+1	; 0x01
    1794:	01 97       	sbiw	r24, 0x01	; 1
    1796:	11 96       	adiw	r26, 0x01	; 1
    1798:	9c 93       	st	X, r25
    179a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    179c:	fe 01       	movw	r30, r28
    179e:	e9 52       	subi	r30, 0x29	; 41
    17a0:	ff 4f       	sbci	r31, 0xFF	; 255
    17a2:	80 81       	ld	r24, Z
    17a4:	91 81       	ldd	r25, Z+1	; 0x01
    17a6:	00 97       	sbiw	r24, 0x00	; 0
    17a8:	d1 f6       	brne	.-76     	; 0x175e <FUN_LEFT+0x25e>
    17aa:	27 c0       	rjmp	.+78     	; 0x17fa <FUN_LEFT+0x2fa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    17ac:	8e 01       	movw	r16, r28
    17ae:	09 52       	subi	r16, 0x29	; 41
    17b0:	1f 4f       	sbci	r17, 0xFF	; 255
    17b2:	fe 01       	movw	r30, r28
    17b4:	e7 52       	subi	r30, 0x27	; 39
    17b6:	ff 4f       	sbci	r31, 0xFF	; 255
    17b8:	60 81       	ld	r22, Z
    17ba:	71 81       	ldd	r23, Z+1	; 0x01
    17bc:	82 81       	ldd	r24, Z+2	; 0x02
    17be:	93 81       	ldd	r25, Z+3	; 0x03
    17c0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    17c4:	dc 01       	movw	r26, r24
    17c6:	cb 01       	movw	r24, r22
    17c8:	f8 01       	movw	r30, r16
    17ca:	91 83       	std	Z+1, r25	; 0x01
    17cc:	80 83       	st	Z, r24
    17ce:	de 01       	movw	r26, r28
    17d0:	ad 52       	subi	r26, 0x2D	; 45
    17d2:	bf 4f       	sbci	r27, 0xFF	; 255
    17d4:	fe 01       	movw	r30, r28
    17d6:	e9 52       	subi	r30, 0x29	; 41
    17d8:	ff 4f       	sbci	r31, 0xFF	; 255
    17da:	80 81       	ld	r24, Z
    17dc:	91 81       	ldd	r25, Z+1	; 0x01
    17de:	8d 93       	st	X+, r24
    17e0:	9c 93       	st	X, r25
    17e2:	fe 01       	movw	r30, r28
    17e4:	ed 52       	subi	r30, 0x2D	; 45
    17e6:	ff 4f       	sbci	r31, 0xFF	; 255
    17e8:	80 81       	ld	r24, Z
    17ea:	91 81       	ldd	r25, Z+1	; 0x01
    17ec:	01 97       	sbiw	r24, 0x01	; 1
    17ee:	f1 f7       	brne	.-4      	; 0x17ec <FUN_LEFT+0x2ec>
    17f0:	fe 01       	movw	r30, r28
    17f2:	ed 52       	subi	r30, 0x2D	; 45
    17f4:	ff 4f       	sbci	r31, 0xFF	; 255
    17f6:	91 83       	std	Z+1, r25	; 0x01
    17f8:	80 83       	st	Z, r24
_delay_ms(50);
DIO__CheckStatusSetPinValue(DIO__UINT8_PORTA,DIO__UINT8_PIN6,DIO__UINT8_HIGH);
    17fa:	80 e0       	ldi	r24, 0x00	; 0
    17fc:	66 e0       	ldi	r22, 0x06	; 6
    17fe:	41 e0       	ldi	r20, 0x01	; 1
    1800:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <DIO__CheckStatusSetPinValue>
    1804:	fe 01       	movw	r30, r28
    1806:	e1 53       	subi	r30, 0x31	; 49
    1808:	ff 4f       	sbci	r31, 0xFF	; 255
    180a:	80 e0       	ldi	r24, 0x00	; 0
    180c:	90 e0       	ldi	r25, 0x00	; 0
    180e:	a8 e4       	ldi	r26, 0x48	; 72
    1810:	b2 e4       	ldi	r27, 0x42	; 66
    1812:	80 83       	st	Z, r24
    1814:	91 83       	std	Z+1, r25	; 0x01
    1816:	a2 83       	std	Z+2, r26	; 0x02
    1818:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    181a:	8e 01       	movw	r16, r28
    181c:	05 53       	subi	r16, 0x35	; 53
    181e:	1f 4f       	sbci	r17, 0xFF	; 255
    1820:	fe 01       	movw	r30, r28
    1822:	e1 53       	subi	r30, 0x31	; 49
    1824:	ff 4f       	sbci	r31, 0xFF	; 255
    1826:	60 81       	ld	r22, Z
    1828:	71 81       	ldd	r23, Z+1	; 0x01
    182a:	82 81       	ldd	r24, Z+2	; 0x02
    182c:	93 81       	ldd	r25, Z+3	; 0x03
    182e:	20 e0       	ldi	r18, 0x00	; 0
    1830:	30 e0       	ldi	r19, 0x00	; 0
    1832:	4a ef       	ldi	r20, 0xFA	; 250
    1834:	54 e4       	ldi	r21, 0x44	; 68
    1836:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    183a:	dc 01       	movw	r26, r24
    183c:	cb 01       	movw	r24, r22
    183e:	f8 01       	movw	r30, r16
    1840:	80 83       	st	Z, r24
    1842:	91 83       	std	Z+1, r25	; 0x01
    1844:	a2 83       	std	Z+2, r26	; 0x02
    1846:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1848:	fe 01       	movw	r30, r28
    184a:	e5 53       	subi	r30, 0x35	; 53
    184c:	ff 4f       	sbci	r31, 0xFF	; 255
    184e:	60 81       	ld	r22, Z
    1850:	71 81       	ldd	r23, Z+1	; 0x01
    1852:	82 81       	ldd	r24, Z+2	; 0x02
    1854:	93 81       	ldd	r25, Z+3	; 0x03
    1856:	20 e0       	ldi	r18, 0x00	; 0
    1858:	30 e0       	ldi	r19, 0x00	; 0
    185a:	40 e8       	ldi	r20, 0x80	; 128
    185c:	5f e3       	ldi	r21, 0x3F	; 63
    185e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1862:	88 23       	and	r24, r24
    1864:	44 f4       	brge	.+16     	; 0x1876 <FUN_LEFT+0x376>
		__ticks = 1;
    1866:	fe 01       	movw	r30, r28
    1868:	e7 53       	subi	r30, 0x37	; 55
    186a:	ff 4f       	sbci	r31, 0xFF	; 255
    186c:	81 e0       	ldi	r24, 0x01	; 1
    186e:	90 e0       	ldi	r25, 0x00	; 0
    1870:	91 83       	std	Z+1, r25	; 0x01
    1872:	80 83       	st	Z, r24
    1874:	64 c0       	rjmp	.+200    	; 0x193e <FUN_LEFT+0x43e>
	else if (__tmp > 65535)
    1876:	fe 01       	movw	r30, r28
    1878:	e5 53       	subi	r30, 0x35	; 53
    187a:	ff 4f       	sbci	r31, 0xFF	; 255
    187c:	60 81       	ld	r22, Z
    187e:	71 81       	ldd	r23, Z+1	; 0x01
    1880:	82 81       	ldd	r24, Z+2	; 0x02
    1882:	93 81       	ldd	r25, Z+3	; 0x03
    1884:	20 e0       	ldi	r18, 0x00	; 0
    1886:	3f ef       	ldi	r19, 0xFF	; 255
    1888:	4f e7       	ldi	r20, 0x7F	; 127
    188a:	57 e4       	ldi	r21, 0x47	; 71
    188c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1890:	18 16       	cp	r1, r24
    1892:	0c f0       	brlt	.+2      	; 0x1896 <FUN_LEFT+0x396>
    1894:	43 c0       	rjmp	.+134    	; 0x191c <FUN_LEFT+0x41c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1896:	fe 01       	movw	r30, r28
    1898:	e1 53       	subi	r30, 0x31	; 49
    189a:	ff 4f       	sbci	r31, 0xFF	; 255
    189c:	60 81       	ld	r22, Z
    189e:	71 81       	ldd	r23, Z+1	; 0x01
    18a0:	82 81       	ldd	r24, Z+2	; 0x02
    18a2:	93 81       	ldd	r25, Z+3	; 0x03
    18a4:	20 e0       	ldi	r18, 0x00	; 0
    18a6:	30 e0       	ldi	r19, 0x00	; 0
    18a8:	40 e2       	ldi	r20, 0x20	; 32
    18aa:	51 e4       	ldi	r21, 0x41	; 65
    18ac:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    18b0:	dc 01       	movw	r26, r24
    18b2:	cb 01       	movw	r24, r22
    18b4:	8e 01       	movw	r16, r28
    18b6:	07 53       	subi	r16, 0x37	; 55
    18b8:	1f 4f       	sbci	r17, 0xFF	; 255
    18ba:	bc 01       	movw	r22, r24
    18bc:	cd 01       	movw	r24, r26
    18be:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    18c2:	dc 01       	movw	r26, r24
    18c4:	cb 01       	movw	r24, r22
    18c6:	f8 01       	movw	r30, r16
    18c8:	91 83       	std	Z+1, r25	; 0x01
    18ca:	80 83       	st	Z, r24
    18cc:	1f c0       	rjmp	.+62     	; 0x190c <FUN_LEFT+0x40c>
    18ce:	fe 01       	movw	r30, r28
    18d0:	e9 53       	subi	r30, 0x39	; 57
    18d2:	ff 4f       	sbci	r31, 0xFF	; 255
    18d4:	88 ec       	ldi	r24, 0xC8	; 200
    18d6:	90 e0       	ldi	r25, 0x00	; 0
    18d8:	91 83       	std	Z+1, r25	; 0x01
    18da:	80 83       	st	Z, r24
    18dc:	fe 01       	movw	r30, r28
    18de:	e9 53       	subi	r30, 0x39	; 57
    18e0:	ff 4f       	sbci	r31, 0xFF	; 255
    18e2:	80 81       	ld	r24, Z
    18e4:	91 81       	ldd	r25, Z+1	; 0x01
    18e6:	01 97       	sbiw	r24, 0x01	; 1
    18e8:	f1 f7       	brne	.-4      	; 0x18e6 <FUN_LEFT+0x3e6>
    18ea:	fe 01       	movw	r30, r28
    18ec:	e9 53       	subi	r30, 0x39	; 57
    18ee:	ff 4f       	sbci	r31, 0xFF	; 255
    18f0:	91 83       	std	Z+1, r25	; 0x01
    18f2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    18f4:	de 01       	movw	r26, r28
    18f6:	a7 53       	subi	r26, 0x37	; 55
    18f8:	bf 4f       	sbci	r27, 0xFF	; 255
    18fa:	fe 01       	movw	r30, r28
    18fc:	e7 53       	subi	r30, 0x37	; 55
    18fe:	ff 4f       	sbci	r31, 0xFF	; 255
    1900:	80 81       	ld	r24, Z
    1902:	91 81       	ldd	r25, Z+1	; 0x01
    1904:	01 97       	sbiw	r24, 0x01	; 1
    1906:	11 96       	adiw	r26, 0x01	; 1
    1908:	9c 93       	st	X, r25
    190a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    190c:	fe 01       	movw	r30, r28
    190e:	e7 53       	subi	r30, 0x37	; 55
    1910:	ff 4f       	sbci	r31, 0xFF	; 255
    1912:	80 81       	ld	r24, Z
    1914:	91 81       	ldd	r25, Z+1	; 0x01
    1916:	00 97       	sbiw	r24, 0x00	; 0
    1918:	d1 f6       	brne	.-76     	; 0x18ce <FUN_LEFT+0x3ce>
    191a:	27 c0       	rjmp	.+78     	; 0x196a <FUN_LEFT+0x46a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    191c:	8e 01       	movw	r16, r28
    191e:	07 53       	subi	r16, 0x37	; 55
    1920:	1f 4f       	sbci	r17, 0xFF	; 255
    1922:	fe 01       	movw	r30, r28
    1924:	e5 53       	subi	r30, 0x35	; 53
    1926:	ff 4f       	sbci	r31, 0xFF	; 255
    1928:	60 81       	ld	r22, Z
    192a:	71 81       	ldd	r23, Z+1	; 0x01
    192c:	82 81       	ldd	r24, Z+2	; 0x02
    192e:	93 81       	ldd	r25, Z+3	; 0x03
    1930:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1934:	dc 01       	movw	r26, r24
    1936:	cb 01       	movw	r24, r22
    1938:	f8 01       	movw	r30, r16
    193a:	91 83       	std	Z+1, r25	; 0x01
    193c:	80 83       	st	Z, r24
    193e:	de 01       	movw	r26, r28
    1940:	ab 53       	subi	r26, 0x3B	; 59
    1942:	bf 4f       	sbci	r27, 0xFF	; 255
    1944:	fe 01       	movw	r30, r28
    1946:	e7 53       	subi	r30, 0x37	; 55
    1948:	ff 4f       	sbci	r31, 0xFF	; 255
    194a:	80 81       	ld	r24, Z
    194c:	91 81       	ldd	r25, Z+1	; 0x01
    194e:	8d 93       	st	X+, r24
    1950:	9c 93       	st	X, r25
    1952:	fe 01       	movw	r30, r28
    1954:	eb 53       	subi	r30, 0x3B	; 59
    1956:	ff 4f       	sbci	r31, 0xFF	; 255
    1958:	80 81       	ld	r24, Z
    195a:	91 81       	ldd	r25, Z+1	; 0x01
    195c:	01 97       	sbiw	r24, 0x01	; 1
    195e:	f1 f7       	brne	.-4      	; 0x195c <FUN_LEFT+0x45c>
    1960:	fe 01       	movw	r30, r28
    1962:	eb 53       	subi	r30, 0x3B	; 59
    1964:	ff 4f       	sbci	r31, 0xFF	; 255
    1966:	91 83       	std	Z+1, r25	; 0x01
    1968:	80 83       	st	Z, r24
_delay_ms(50);
DIO__CheckStatusSetPinValue(DIO__UINT8_PORTA,DIO__UINT8_PIN6,DIO__UINT8_LOW);
    196a:	80 e0       	ldi	r24, 0x00	; 0
    196c:	66 e0       	ldi	r22, 0x06	; 6
    196e:	40 e0       	ldi	r20, 0x00	; 0
    1970:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <DIO__CheckStatusSetPinValue>
    1974:	fe 01       	movw	r30, r28
    1976:	ef 53       	subi	r30, 0x3F	; 63
    1978:	ff 4f       	sbci	r31, 0xFF	; 255
    197a:	80 e0       	ldi	r24, 0x00	; 0
    197c:	90 e0       	ldi	r25, 0x00	; 0
    197e:	a8 e4       	ldi	r26, 0x48	; 72
    1980:	b2 e4       	ldi	r27, 0x42	; 66
    1982:	80 83       	st	Z, r24
    1984:	91 83       	std	Z+1, r25	; 0x01
    1986:	a2 83       	std	Z+2, r26	; 0x02
    1988:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    198a:	8e 01       	movw	r16, r28
    198c:	03 54       	subi	r16, 0x43	; 67
    198e:	1f 4f       	sbci	r17, 0xFF	; 255
    1990:	fe 01       	movw	r30, r28
    1992:	ef 53       	subi	r30, 0x3F	; 63
    1994:	ff 4f       	sbci	r31, 0xFF	; 255
    1996:	60 81       	ld	r22, Z
    1998:	71 81       	ldd	r23, Z+1	; 0x01
    199a:	82 81       	ldd	r24, Z+2	; 0x02
    199c:	93 81       	ldd	r25, Z+3	; 0x03
    199e:	20 e0       	ldi	r18, 0x00	; 0
    19a0:	30 e0       	ldi	r19, 0x00	; 0
    19a2:	4a ef       	ldi	r20, 0xFA	; 250
    19a4:	54 e4       	ldi	r21, 0x44	; 68
    19a6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    19aa:	dc 01       	movw	r26, r24
    19ac:	cb 01       	movw	r24, r22
    19ae:	f8 01       	movw	r30, r16
    19b0:	80 83       	st	Z, r24
    19b2:	91 83       	std	Z+1, r25	; 0x01
    19b4:	a2 83       	std	Z+2, r26	; 0x02
    19b6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    19b8:	fe 01       	movw	r30, r28
    19ba:	e3 54       	subi	r30, 0x43	; 67
    19bc:	ff 4f       	sbci	r31, 0xFF	; 255
    19be:	60 81       	ld	r22, Z
    19c0:	71 81       	ldd	r23, Z+1	; 0x01
    19c2:	82 81       	ldd	r24, Z+2	; 0x02
    19c4:	93 81       	ldd	r25, Z+3	; 0x03
    19c6:	20 e0       	ldi	r18, 0x00	; 0
    19c8:	30 e0       	ldi	r19, 0x00	; 0
    19ca:	40 e8       	ldi	r20, 0x80	; 128
    19cc:	5f e3       	ldi	r21, 0x3F	; 63
    19ce:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    19d2:	88 23       	and	r24, r24
    19d4:	44 f4       	brge	.+16     	; 0x19e6 <FUN_LEFT+0x4e6>
		__ticks = 1;
    19d6:	fe 01       	movw	r30, r28
    19d8:	e5 54       	subi	r30, 0x45	; 69
    19da:	ff 4f       	sbci	r31, 0xFF	; 255
    19dc:	81 e0       	ldi	r24, 0x01	; 1
    19de:	90 e0       	ldi	r25, 0x00	; 0
    19e0:	91 83       	std	Z+1, r25	; 0x01
    19e2:	80 83       	st	Z, r24
    19e4:	64 c0       	rjmp	.+200    	; 0x1aae <FUN_LEFT+0x5ae>
	else if (__tmp > 65535)
    19e6:	fe 01       	movw	r30, r28
    19e8:	e3 54       	subi	r30, 0x43	; 67
    19ea:	ff 4f       	sbci	r31, 0xFF	; 255
    19ec:	60 81       	ld	r22, Z
    19ee:	71 81       	ldd	r23, Z+1	; 0x01
    19f0:	82 81       	ldd	r24, Z+2	; 0x02
    19f2:	93 81       	ldd	r25, Z+3	; 0x03
    19f4:	20 e0       	ldi	r18, 0x00	; 0
    19f6:	3f ef       	ldi	r19, 0xFF	; 255
    19f8:	4f e7       	ldi	r20, 0x7F	; 127
    19fa:	57 e4       	ldi	r21, 0x47	; 71
    19fc:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1a00:	18 16       	cp	r1, r24
    1a02:	0c f0       	brlt	.+2      	; 0x1a06 <FUN_LEFT+0x506>
    1a04:	43 c0       	rjmp	.+134    	; 0x1a8c <FUN_LEFT+0x58c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a06:	fe 01       	movw	r30, r28
    1a08:	ef 53       	subi	r30, 0x3F	; 63
    1a0a:	ff 4f       	sbci	r31, 0xFF	; 255
    1a0c:	60 81       	ld	r22, Z
    1a0e:	71 81       	ldd	r23, Z+1	; 0x01
    1a10:	82 81       	ldd	r24, Z+2	; 0x02
    1a12:	93 81       	ldd	r25, Z+3	; 0x03
    1a14:	20 e0       	ldi	r18, 0x00	; 0
    1a16:	30 e0       	ldi	r19, 0x00	; 0
    1a18:	40 e2       	ldi	r20, 0x20	; 32
    1a1a:	51 e4       	ldi	r21, 0x41	; 65
    1a1c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1a20:	dc 01       	movw	r26, r24
    1a22:	cb 01       	movw	r24, r22
    1a24:	8e 01       	movw	r16, r28
    1a26:	05 54       	subi	r16, 0x45	; 69
    1a28:	1f 4f       	sbci	r17, 0xFF	; 255
    1a2a:	bc 01       	movw	r22, r24
    1a2c:	cd 01       	movw	r24, r26
    1a2e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1a32:	dc 01       	movw	r26, r24
    1a34:	cb 01       	movw	r24, r22
    1a36:	f8 01       	movw	r30, r16
    1a38:	91 83       	std	Z+1, r25	; 0x01
    1a3a:	80 83       	st	Z, r24
    1a3c:	1f c0       	rjmp	.+62     	; 0x1a7c <FUN_LEFT+0x57c>
    1a3e:	fe 01       	movw	r30, r28
    1a40:	e7 54       	subi	r30, 0x47	; 71
    1a42:	ff 4f       	sbci	r31, 0xFF	; 255
    1a44:	88 ec       	ldi	r24, 0xC8	; 200
    1a46:	90 e0       	ldi	r25, 0x00	; 0
    1a48:	91 83       	std	Z+1, r25	; 0x01
    1a4a:	80 83       	st	Z, r24
    1a4c:	fe 01       	movw	r30, r28
    1a4e:	e7 54       	subi	r30, 0x47	; 71
    1a50:	ff 4f       	sbci	r31, 0xFF	; 255
    1a52:	80 81       	ld	r24, Z
    1a54:	91 81       	ldd	r25, Z+1	; 0x01
    1a56:	01 97       	sbiw	r24, 0x01	; 1
    1a58:	f1 f7       	brne	.-4      	; 0x1a56 <FUN_LEFT+0x556>
    1a5a:	fe 01       	movw	r30, r28
    1a5c:	e7 54       	subi	r30, 0x47	; 71
    1a5e:	ff 4f       	sbci	r31, 0xFF	; 255
    1a60:	91 83       	std	Z+1, r25	; 0x01
    1a62:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a64:	de 01       	movw	r26, r28
    1a66:	a5 54       	subi	r26, 0x45	; 69
    1a68:	bf 4f       	sbci	r27, 0xFF	; 255
    1a6a:	fe 01       	movw	r30, r28
    1a6c:	e5 54       	subi	r30, 0x45	; 69
    1a6e:	ff 4f       	sbci	r31, 0xFF	; 255
    1a70:	80 81       	ld	r24, Z
    1a72:	91 81       	ldd	r25, Z+1	; 0x01
    1a74:	01 97       	sbiw	r24, 0x01	; 1
    1a76:	11 96       	adiw	r26, 0x01	; 1
    1a78:	9c 93       	st	X, r25
    1a7a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1a7c:	fe 01       	movw	r30, r28
    1a7e:	e5 54       	subi	r30, 0x45	; 69
    1a80:	ff 4f       	sbci	r31, 0xFF	; 255
    1a82:	80 81       	ld	r24, Z
    1a84:	91 81       	ldd	r25, Z+1	; 0x01
    1a86:	00 97       	sbiw	r24, 0x00	; 0
    1a88:	d1 f6       	brne	.-76     	; 0x1a3e <FUN_LEFT+0x53e>
    1a8a:	27 c0       	rjmp	.+78     	; 0x1ada <FUN_LEFT+0x5da>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a8c:	8e 01       	movw	r16, r28
    1a8e:	05 54       	subi	r16, 0x45	; 69
    1a90:	1f 4f       	sbci	r17, 0xFF	; 255
    1a92:	fe 01       	movw	r30, r28
    1a94:	e3 54       	subi	r30, 0x43	; 67
    1a96:	ff 4f       	sbci	r31, 0xFF	; 255
    1a98:	60 81       	ld	r22, Z
    1a9a:	71 81       	ldd	r23, Z+1	; 0x01
    1a9c:	82 81       	ldd	r24, Z+2	; 0x02
    1a9e:	93 81       	ldd	r25, Z+3	; 0x03
    1aa0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1aa4:	dc 01       	movw	r26, r24
    1aa6:	cb 01       	movw	r24, r22
    1aa8:	f8 01       	movw	r30, r16
    1aaa:	91 83       	std	Z+1, r25	; 0x01
    1aac:	80 83       	st	Z, r24
    1aae:	de 01       	movw	r26, r28
    1ab0:	a9 54       	subi	r26, 0x49	; 73
    1ab2:	bf 4f       	sbci	r27, 0xFF	; 255
    1ab4:	fe 01       	movw	r30, r28
    1ab6:	e5 54       	subi	r30, 0x45	; 69
    1ab8:	ff 4f       	sbci	r31, 0xFF	; 255
    1aba:	80 81       	ld	r24, Z
    1abc:	91 81       	ldd	r25, Z+1	; 0x01
    1abe:	8d 93       	st	X+, r24
    1ac0:	9c 93       	st	X, r25
    1ac2:	fe 01       	movw	r30, r28
    1ac4:	e9 54       	subi	r30, 0x49	; 73
    1ac6:	ff 4f       	sbci	r31, 0xFF	; 255
    1ac8:	80 81       	ld	r24, Z
    1aca:	91 81       	ldd	r25, Z+1	; 0x01
    1acc:	01 97       	sbiw	r24, 0x01	; 1
    1ace:	f1 f7       	brne	.-4      	; 0x1acc <FUN_LEFT+0x5cc>
    1ad0:	fe 01       	movw	r30, r28
    1ad2:	e9 54       	subi	r30, 0x49	; 73
    1ad4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ad6:	91 83       	std	Z+1, r25	; 0x01
    1ad8:	80 83       	st	Z, r24
    1ada:	fe 01       	movw	r30, r28
    1adc:	ed 54       	subi	r30, 0x4D	; 77
    1ade:	ff 4f       	sbci	r31, 0xFF	; 255
    1ae0:	80 e0       	ldi	r24, 0x00	; 0
    1ae2:	90 e0       	ldi	r25, 0x00	; 0
    1ae4:	a8 e4       	ldi	r26, 0x48	; 72
    1ae6:	b2 e4       	ldi	r27, 0x42	; 66
    1ae8:	80 83       	st	Z, r24
    1aea:	91 83       	std	Z+1, r25	; 0x01
    1aec:	a2 83       	std	Z+2, r26	; 0x02
    1aee:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1af0:	8e 01       	movw	r16, r28
    1af2:	01 55       	subi	r16, 0x51	; 81
    1af4:	1f 4f       	sbci	r17, 0xFF	; 255
    1af6:	fe 01       	movw	r30, r28
    1af8:	ed 54       	subi	r30, 0x4D	; 77
    1afa:	ff 4f       	sbci	r31, 0xFF	; 255
    1afc:	60 81       	ld	r22, Z
    1afe:	71 81       	ldd	r23, Z+1	; 0x01
    1b00:	82 81       	ldd	r24, Z+2	; 0x02
    1b02:	93 81       	ldd	r25, Z+3	; 0x03
    1b04:	20 e0       	ldi	r18, 0x00	; 0
    1b06:	30 e0       	ldi	r19, 0x00	; 0
    1b08:	4a ef       	ldi	r20, 0xFA	; 250
    1b0a:	54 e4       	ldi	r21, 0x44	; 68
    1b0c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b10:	dc 01       	movw	r26, r24
    1b12:	cb 01       	movw	r24, r22
    1b14:	f8 01       	movw	r30, r16
    1b16:	80 83       	st	Z, r24
    1b18:	91 83       	std	Z+1, r25	; 0x01
    1b1a:	a2 83       	std	Z+2, r26	; 0x02
    1b1c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1b1e:	fe 01       	movw	r30, r28
    1b20:	e1 55       	subi	r30, 0x51	; 81
    1b22:	ff 4f       	sbci	r31, 0xFF	; 255
    1b24:	60 81       	ld	r22, Z
    1b26:	71 81       	ldd	r23, Z+1	; 0x01
    1b28:	82 81       	ldd	r24, Z+2	; 0x02
    1b2a:	93 81       	ldd	r25, Z+3	; 0x03
    1b2c:	20 e0       	ldi	r18, 0x00	; 0
    1b2e:	30 e0       	ldi	r19, 0x00	; 0
    1b30:	40 e8       	ldi	r20, 0x80	; 128
    1b32:	5f e3       	ldi	r21, 0x3F	; 63
    1b34:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1b38:	88 23       	and	r24, r24
    1b3a:	44 f4       	brge	.+16     	; 0x1b4c <FUN_LEFT+0x64c>
		__ticks = 1;
    1b3c:	fe 01       	movw	r30, r28
    1b3e:	e3 55       	subi	r30, 0x53	; 83
    1b40:	ff 4f       	sbci	r31, 0xFF	; 255
    1b42:	81 e0       	ldi	r24, 0x01	; 1
    1b44:	90 e0       	ldi	r25, 0x00	; 0
    1b46:	91 83       	std	Z+1, r25	; 0x01
    1b48:	80 83       	st	Z, r24
    1b4a:	64 c0       	rjmp	.+200    	; 0x1c14 <FUN_LEFT+0x714>
	else if (__tmp > 65535)
    1b4c:	fe 01       	movw	r30, r28
    1b4e:	e1 55       	subi	r30, 0x51	; 81
    1b50:	ff 4f       	sbci	r31, 0xFF	; 255
    1b52:	60 81       	ld	r22, Z
    1b54:	71 81       	ldd	r23, Z+1	; 0x01
    1b56:	82 81       	ldd	r24, Z+2	; 0x02
    1b58:	93 81       	ldd	r25, Z+3	; 0x03
    1b5a:	20 e0       	ldi	r18, 0x00	; 0
    1b5c:	3f ef       	ldi	r19, 0xFF	; 255
    1b5e:	4f e7       	ldi	r20, 0x7F	; 127
    1b60:	57 e4       	ldi	r21, 0x47	; 71
    1b62:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1b66:	18 16       	cp	r1, r24
    1b68:	0c f0       	brlt	.+2      	; 0x1b6c <FUN_LEFT+0x66c>
    1b6a:	43 c0       	rjmp	.+134    	; 0x1bf2 <FUN_LEFT+0x6f2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b6c:	fe 01       	movw	r30, r28
    1b6e:	ed 54       	subi	r30, 0x4D	; 77
    1b70:	ff 4f       	sbci	r31, 0xFF	; 255
    1b72:	60 81       	ld	r22, Z
    1b74:	71 81       	ldd	r23, Z+1	; 0x01
    1b76:	82 81       	ldd	r24, Z+2	; 0x02
    1b78:	93 81       	ldd	r25, Z+3	; 0x03
    1b7a:	20 e0       	ldi	r18, 0x00	; 0
    1b7c:	30 e0       	ldi	r19, 0x00	; 0
    1b7e:	40 e2       	ldi	r20, 0x20	; 32
    1b80:	51 e4       	ldi	r21, 0x41	; 65
    1b82:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b86:	dc 01       	movw	r26, r24
    1b88:	cb 01       	movw	r24, r22
    1b8a:	8e 01       	movw	r16, r28
    1b8c:	03 55       	subi	r16, 0x53	; 83
    1b8e:	1f 4f       	sbci	r17, 0xFF	; 255
    1b90:	bc 01       	movw	r22, r24
    1b92:	cd 01       	movw	r24, r26
    1b94:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1b98:	dc 01       	movw	r26, r24
    1b9a:	cb 01       	movw	r24, r22
    1b9c:	f8 01       	movw	r30, r16
    1b9e:	91 83       	std	Z+1, r25	; 0x01
    1ba0:	80 83       	st	Z, r24
    1ba2:	1f c0       	rjmp	.+62     	; 0x1be2 <FUN_LEFT+0x6e2>
    1ba4:	fe 01       	movw	r30, r28
    1ba6:	e5 55       	subi	r30, 0x55	; 85
    1ba8:	ff 4f       	sbci	r31, 0xFF	; 255
    1baa:	88 ec       	ldi	r24, 0xC8	; 200
    1bac:	90 e0       	ldi	r25, 0x00	; 0
    1bae:	91 83       	std	Z+1, r25	; 0x01
    1bb0:	80 83       	st	Z, r24
    1bb2:	fe 01       	movw	r30, r28
    1bb4:	e5 55       	subi	r30, 0x55	; 85
    1bb6:	ff 4f       	sbci	r31, 0xFF	; 255
    1bb8:	80 81       	ld	r24, Z
    1bba:	91 81       	ldd	r25, Z+1	; 0x01
    1bbc:	01 97       	sbiw	r24, 0x01	; 1
    1bbe:	f1 f7       	brne	.-4      	; 0x1bbc <FUN_LEFT+0x6bc>
    1bc0:	fe 01       	movw	r30, r28
    1bc2:	e5 55       	subi	r30, 0x55	; 85
    1bc4:	ff 4f       	sbci	r31, 0xFF	; 255
    1bc6:	91 83       	std	Z+1, r25	; 0x01
    1bc8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1bca:	de 01       	movw	r26, r28
    1bcc:	a3 55       	subi	r26, 0x53	; 83
    1bce:	bf 4f       	sbci	r27, 0xFF	; 255
    1bd0:	fe 01       	movw	r30, r28
    1bd2:	e3 55       	subi	r30, 0x53	; 83
    1bd4:	ff 4f       	sbci	r31, 0xFF	; 255
    1bd6:	80 81       	ld	r24, Z
    1bd8:	91 81       	ldd	r25, Z+1	; 0x01
    1bda:	01 97       	sbiw	r24, 0x01	; 1
    1bdc:	11 96       	adiw	r26, 0x01	; 1
    1bde:	9c 93       	st	X, r25
    1be0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1be2:	fe 01       	movw	r30, r28
    1be4:	e3 55       	subi	r30, 0x53	; 83
    1be6:	ff 4f       	sbci	r31, 0xFF	; 255
    1be8:	80 81       	ld	r24, Z
    1bea:	91 81       	ldd	r25, Z+1	; 0x01
    1bec:	00 97       	sbiw	r24, 0x00	; 0
    1bee:	d1 f6       	brne	.-76     	; 0x1ba4 <FUN_LEFT+0x6a4>
    1bf0:	27 c0       	rjmp	.+78     	; 0x1c40 <FUN_LEFT+0x740>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1bf2:	8e 01       	movw	r16, r28
    1bf4:	03 55       	subi	r16, 0x53	; 83
    1bf6:	1f 4f       	sbci	r17, 0xFF	; 255
    1bf8:	fe 01       	movw	r30, r28
    1bfa:	e1 55       	subi	r30, 0x51	; 81
    1bfc:	ff 4f       	sbci	r31, 0xFF	; 255
    1bfe:	60 81       	ld	r22, Z
    1c00:	71 81       	ldd	r23, Z+1	; 0x01
    1c02:	82 81       	ldd	r24, Z+2	; 0x02
    1c04:	93 81       	ldd	r25, Z+3	; 0x03
    1c06:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c0a:	dc 01       	movw	r26, r24
    1c0c:	cb 01       	movw	r24, r22
    1c0e:	f8 01       	movw	r30, r16
    1c10:	91 83       	std	Z+1, r25	; 0x01
    1c12:	80 83       	st	Z, r24
    1c14:	de 01       	movw	r26, r28
    1c16:	a7 55       	subi	r26, 0x57	; 87
    1c18:	bf 4f       	sbci	r27, 0xFF	; 255
    1c1a:	fe 01       	movw	r30, r28
    1c1c:	e3 55       	subi	r30, 0x53	; 83
    1c1e:	ff 4f       	sbci	r31, 0xFF	; 255
    1c20:	80 81       	ld	r24, Z
    1c22:	91 81       	ldd	r25, Z+1	; 0x01
    1c24:	8d 93       	st	X+, r24
    1c26:	9c 93       	st	X, r25
    1c28:	fe 01       	movw	r30, r28
    1c2a:	e7 55       	subi	r30, 0x57	; 87
    1c2c:	ff 4f       	sbci	r31, 0xFF	; 255
    1c2e:	80 81       	ld	r24, Z
    1c30:	91 81       	ldd	r25, Z+1	; 0x01
    1c32:	01 97       	sbiw	r24, 0x01	; 1
    1c34:	f1 f7       	brne	.-4      	; 0x1c32 <FUN_LEFT+0x732>
    1c36:	fe 01       	movw	r30, r28
    1c38:	e7 55       	subi	r30, 0x57	; 87
    1c3a:	ff 4f       	sbci	r31, 0xFF	; 255
    1c3c:	91 83       	std	Z+1, r25	; 0x01
    1c3e:	80 83       	st	Z, r24
_delay_ms(50);
_delay_ms(50);
DIO__CheckStatusSetPinValue(DIO__UINT8_PORTA,DIO__UINT8_PIN5,DIO__UINT8_HIGH);
    1c40:	80 e0       	ldi	r24, 0x00	; 0
    1c42:	65 e0       	ldi	r22, 0x05	; 5
    1c44:	41 e0       	ldi	r20, 0x01	; 1
    1c46:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <DIO__CheckStatusSetPinValue>
    1c4a:	fe 01       	movw	r30, r28
    1c4c:	eb 55       	subi	r30, 0x5B	; 91
    1c4e:	ff 4f       	sbci	r31, 0xFF	; 255
    1c50:	80 e0       	ldi	r24, 0x00	; 0
    1c52:	90 e0       	ldi	r25, 0x00	; 0
    1c54:	a8 e4       	ldi	r26, 0x48	; 72
    1c56:	b2 e4       	ldi	r27, 0x42	; 66
    1c58:	80 83       	st	Z, r24
    1c5a:	91 83       	std	Z+1, r25	; 0x01
    1c5c:	a2 83       	std	Z+2, r26	; 0x02
    1c5e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c60:	8e 01       	movw	r16, r28
    1c62:	0f 55       	subi	r16, 0x5F	; 95
    1c64:	1f 4f       	sbci	r17, 0xFF	; 255
    1c66:	fe 01       	movw	r30, r28
    1c68:	eb 55       	subi	r30, 0x5B	; 91
    1c6a:	ff 4f       	sbci	r31, 0xFF	; 255
    1c6c:	60 81       	ld	r22, Z
    1c6e:	71 81       	ldd	r23, Z+1	; 0x01
    1c70:	82 81       	ldd	r24, Z+2	; 0x02
    1c72:	93 81       	ldd	r25, Z+3	; 0x03
    1c74:	20 e0       	ldi	r18, 0x00	; 0
    1c76:	30 e0       	ldi	r19, 0x00	; 0
    1c78:	4a ef       	ldi	r20, 0xFA	; 250
    1c7a:	54 e4       	ldi	r21, 0x44	; 68
    1c7c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c80:	dc 01       	movw	r26, r24
    1c82:	cb 01       	movw	r24, r22
    1c84:	f8 01       	movw	r30, r16
    1c86:	80 83       	st	Z, r24
    1c88:	91 83       	std	Z+1, r25	; 0x01
    1c8a:	a2 83       	std	Z+2, r26	; 0x02
    1c8c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1c8e:	fe 01       	movw	r30, r28
    1c90:	ef 55       	subi	r30, 0x5F	; 95
    1c92:	ff 4f       	sbci	r31, 0xFF	; 255
    1c94:	60 81       	ld	r22, Z
    1c96:	71 81       	ldd	r23, Z+1	; 0x01
    1c98:	82 81       	ldd	r24, Z+2	; 0x02
    1c9a:	93 81       	ldd	r25, Z+3	; 0x03
    1c9c:	20 e0       	ldi	r18, 0x00	; 0
    1c9e:	30 e0       	ldi	r19, 0x00	; 0
    1ca0:	40 e8       	ldi	r20, 0x80	; 128
    1ca2:	5f e3       	ldi	r21, 0x3F	; 63
    1ca4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1ca8:	88 23       	and	r24, r24
    1caa:	44 f4       	brge	.+16     	; 0x1cbc <FUN_LEFT+0x7bc>
		__ticks = 1;
    1cac:	fe 01       	movw	r30, r28
    1cae:	e1 56       	subi	r30, 0x61	; 97
    1cb0:	ff 4f       	sbci	r31, 0xFF	; 255
    1cb2:	81 e0       	ldi	r24, 0x01	; 1
    1cb4:	90 e0       	ldi	r25, 0x00	; 0
    1cb6:	91 83       	std	Z+1, r25	; 0x01
    1cb8:	80 83       	st	Z, r24
    1cba:	64 c0       	rjmp	.+200    	; 0x1d84 <FUN_LEFT+0x884>
	else if (__tmp > 65535)
    1cbc:	fe 01       	movw	r30, r28
    1cbe:	ef 55       	subi	r30, 0x5F	; 95
    1cc0:	ff 4f       	sbci	r31, 0xFF	; 255
    1cc2:	60 81       	ld	r22, Z
    1cc4:	71 81       	ldd	r23, Z+1	; 0x01
    1cc6:	82 81       	ldd	r24, Z+2	; 0x02
    1cc8:	93 81       	ldd	r25, Z+3	; 0x03
    1cca:	20 e0       	ldi	r18, 0x00	; 0
    1ccc:	3f ef       	ldi	r19, 0xFF	; 255
    1cce:	4f e7       	ldi	r20, 0x7F	; 127
    1cd0:	57 e4       	ldi	r21, 0x47	; 71
    1cd2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1cd6:	18 16       	cp	r1, r24
    1cd8:	0c f0       	brlt	.+2      	; 0x1cdc <FUN_LEFT+0x7dc>
    1cda:	43 c0       	rjmp	.+134    	; 0x1d62 <FUN_LEFT+0x862>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1cdc:	fe 01       	movw	r30, r28
    1cde:	eb 55       	subi	r30, 0x5B	; 91
    1ce0:	ff 4f       	sbci	r31, 0xFF	; 255
    1ce2:	60 81       	ld	r22, Z
    1ce4:	71 81       	ldd	r23, Z+1	; 0x01
    1ce6:	82 81       	ldd	r24, Z+2	; 0x02
    1ce8:	93 81       	ldd	r25, Z+3	; 0x03
    1cea:	20 e0       	ldi	r18, 0x00	; 0
    1cec:	30 e0       	ldi	r19, 0x00	; 0
    1cee:	40 e2       	ldi	r20, 0x20	; 32
    1cf0:	51 e4       	ldi	r21, 0x41	; 65
    1cf2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1cf6:	dc 01       	movw	r26, r24
    1cf8:	cb 01       	movw	r24, r22
    1cfa:	8e 01       	movw	r16, r28
    1cfc:	01 56       	subi	r16, 0x61	; 97
    1cfe:	1f 4f       	sbci	r17, 0xFF	; 255
    1d00:	bc 01       	movw	r22, r24
    1d02:	cd 01       	movw	r24, r26
    1d04:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d08:	dc 01       	movw	r26, r24
    1d0a:	cb 01       	movw	r24, r22
    1d0c:	f8 01       	movw	r30, r16
    1d0e:	91 83       	std	Z+1, r25	; 0x01
    1d10:	80 83       	st	Z, r24
    1d12:	1f c0       	rjmp	.+62     	; 0x1d52 <FUN_LEFT+0x852>
    1d14:	fe 01       	movw	r30, r28
    1d16:	e3 56       	subi	r30, 0x63	; 99
    1d18:	ff 4f       	sbci	r31, 0xFF	; 255
    1d1a:	88 ec       	ldi	r24, 0xC8	; 200
    1d1c:	90 e0       	ldi	r25, 0x00	; 0
    1d1e:	91 83       	std	Z+1, r25	; 0x01
    1d20:	80 83       	st	Z, r24
    1d22:	fe 01       	movw	r30, r28
    1d24:	e3 56       	subi	r30, 0x63	; 99
    1d26:	ff 4f       	sbci	r31, 0xFF	; 255
    1d28:	80 81       	ld	r24, Z
    1d2a:	91 81       	ldd	r25, Z+1	; 0x01
    1d2c:	01 97       	sbiw	r24, 0x01	; 1
    1d2e:	f1 f7       	brne	.-4      	; 0x1d2c <FUN_LEFT+0x82c>
    1d30:	fe 01       	movw	r30, r28
    1d32:	e3 56       	subi	r30, 0x63	; 99
    1d34:	ff 4f       	sbci	r31, 0xFF	; 255
    1d36:	91 83       	std	Z+1, r25	; 0x01
    1d38:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d3a:	de 01       	movw	r26, r28
    1d3c:	a1 56       	subi	r26, 0x61	; 97
    1d3e:	bf 4f       	sbci	r27, 0xFF	; 255
    1d40:	fe 01       	movw	r30, r28
    1d42:	e1 56       	subi	r30, 0x61	; 97
    1d44:	ff 4f       	sbci	r31, 0xFF	; 255
    1d46:	80 81       	ld	r24, Z
    1d48:	91 81       	ldd	r25, Z+1	; 0x01
    1d4a:	01 97       	sbiw	r24, 0x01	; 1
    1d4c:	11 96       	adiw	r26, 0x01	; 1
    1d4e:	9c 93       	st	X, r25
    1d50:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d52:	fe 01       	movw	r30, r28
    1d54:	e1 56       	subi	r30, 0x61	; 97
    1d56:	ff 4f       	sbci	r31, 0xFF	; 255
    1d58:	80 81       	ld	r24, Z
    1d5a:	91 81       	ldd	r25, Z+1	; 0x01
    1d5c:	00 97       	sbiw	r24, 0x00	; 0
    1d5e:	d1 f6       	brne	.-76     	; 0x1d14 <FUN_LEFT+0x814>
    1d60:	27 c0       	rjmp	.+78     	; 0x1db0 <FUN_LEFT+0x8b0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1d62:	8e 01       	movw	r16, r28
    1d64:	01 56       	subi	r16, 0x61	; 97
    1d66:	1f 4f       	sbci	r17, 0xFF	; 255
    1d68:	fe 01       	movw	r30, r28
    1d6a:	ef 55       	subi	r30, 0x5F	; 95
    1d6c:	ff 4f       	sbci	r31, 0xFF	; 255
    1d6e:	60 81       	ld	r22, Z
    1d70:	71 81       	ldd	r23, Z+1	; 0x01
    1d72:	82 81       	ldd	r24, Z+2	; 0x02
    1d74:	93 81       	ldd	r25, Z+3	; 0x03
    1d76:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d7a:	dc 01       	movw	r26, r24
    1d7c:	cb 01       	movw	r24, r22
    1d7e:	f8 01       	movw	r30, r16
    1d80:	91 83       	std	Z+1, r25	; 0x01
    1d82:	80 83       	st	Z, r24
    1d84:	de 01       	movw	r26, r28
    1d86:	a5 56       	subi	r26, 0x65	; 101
    1d88:	bf 4f       	sbci	r27, 0xFF	; 255
    1d8a:	fe 01       	movw	r30, r28
    1d8c:	e1 56       	subi	r30, 0x61	; 97
    1d8e:	ff 4f       	sbci	r31, 0xFF	; 255
    1d90:	80 81       	ld	r24, Z
    1d92:	91 81       	ldd	r25, Z+1	; 0x01
    1d94:	8d 93       	st	X+, r24
    1d96:	9c 93       	st	X, r25
    1d98:	fe 01       	movw	r30, r28
    1d9a:	e5 56       	subi	r30, 0x65	; 101
    1d9c:	ff 4f       	sbci	r31, 0xFF	; 255
    1d9e:	80 81       	ld	r24, Z
    1da0:	91 81       	ldd	r25, Z+1	; 0x01
    1da2:	01 97       	sbiw	r24, 0x01	; 1
    1da4:	f1 f7       	brne	.-4      	; 0x1da2 <FUN_LEFT+0x8a2>
    1da6:	fe 01       	movw	r30, r28
    1da8:	e5 56       	subi	r30, 0x65	; 101
    1daa:	ff 4f       	sbci	r31, 0xFF	; 255
    1dac:	91 83       	std	Z+1, r25	; 0x01
    1dae:	80 83       	st	Z, r24
_delay_ms(50);
DIO__CheckStatusSetPinValue(DIO__UINT8_PORTA,DIO__UINT8_PIN5,DIO__UINT8_LOW);
    1db0:	80 e0       	ldi	r24, 0x00	; 0
    1db2:	65 e0       	ldi	r22, 0x05	; 5
    1db4:	40 e0       	ldi	r20, 0x00	; 0
    1db6:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <DIO__CheckStatusSetPinValue>
    1dba:	fe 01       	movw	r30, r28
    1dbc:	e9 56       	subi	r30, 0x69	; 105
    1dbe:	ff 4f       	sbci	r31, 0xFF	; 255
    1dc0:	80 e0       	ldi	r24, 0x00	; 0
    1dc2:	90 e0       	ldi	r25, 0x00	; 0
    1dc4:	a8 e4       	ldi	r26, 0x48	; 72
    1dc6:	b2 e4       	ldi	r27, 0x42	; 66
    1dc8:	80 83       	st	Z, r24
    1dca:	91 83       	std	Z+1, r25	; 0x01
    1dcc:	a2 83       	std	Z+2, r26	; 0x02
    1dce:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1dd0:	8e 01       	movw	r16, r28
    1dd2:	0d 56       	subi	r16, 0x6D	; 109
    1dd4:	1f 4f       	sbci	r17, 0xFF	; 255
    1dd6:	fe 01       	movw	r30, r28
    1dd8:	e9 56       	subi	r30, 0x69	; 105
    1dda:	ff 4f       	sbci	r31, 0xFF	; 255
    1ddc:	60 81       	ld	r22, Z
    1dde:	71 81       	ldd	r23, Z+1	; 0x01
    1de0:	82 81       	ldd	r24, Z+2	; 0x02
    1de2:	93 81       	ldd	r25, Z+3	; 0x03
    1de4:	20 e0       	ldi	r18, 0x00	; 0
    1de6:	30 e0       	ldi	r19, 0x00	; 0
    1de8:	4a ef       	ldi	r20, 0xFA	; 250
    1dea:	54 e4       	ldi	r21, 0x44	; 68
    1dec:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1df0:	dc 01       	movw	r26, r24
    1df2:	cb 01       	movw	r24, r22
    1df4:	f8 01       	movw	r30, r16
    1df6:	80 83       	st	Z, r24
    1df8:	91 83       	std	Z+1, r25	; 0x01
    1dfa:	a2 83       	std	Z+2, r26	; 0x02
    1dfc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1dfe:	fe 01       	movw	r30, r28
    1e00:	ed 56       	subi	r30, 0x6D	; 109
    1e02:	ff 4f       	sbci	r31, 0xFF	; 255
    1e04:	60 81       	ld	r22, Z
    1e06:	71 81       	ldd	r23, Z+1	; 0x01
    1e08:	82 81       	ldd	r24, Z+2	; 0x02
    1e0a:	93 81       	ldd	r25, Z+3	; 0x03
    1e0c:	20 e0       	ldi	r18, 0x00	; 0
    1e0e:	30 e0       	ldi	r19, 0x00	; 0
    1e10:	40 e8       	ldi	r20, 0x80	; 128
    1e12:	5f e3       	ldi	r21, 0x3F	; 63
    1e14:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1e18:	88 23       	and	r24, r24
    1e1a:	44 f4       	brge	.+16     	; 0x1e2c <FUN_LEFT+0x92c>
		__ticks = 1;
    1e1c:	fe 01       	movw	r30, r28
    1e1e:	ef 56       	subi	r30, 0x6F	; 111
    1e20:	ff 4f       	sbci	r31, 0xFF	; 255
    1e22:	81 e0       	ldi	r24, 0x01	; 1
    1e24:	90 e0       	ldi	r25, 0x00	; 0
    1e26:	91 83       	std	Z+1, r25	; 0x01
    1e28:	80 83       	st	Z, r24
    1e2a:	64 c0       	rjmp	.+200    	; 0x1ef4 <FUN_LEFT+0x9f4>
	else if (__tmp > 65535)
    1e2c:	fe 01       	movw	r30, r28
    1e2e:	ed 56       	subi	r30, 0x6D	; 109
    1e30:	ff 4f       	sbci	r31, 0xFF	; 255
    1e32:	60 81       	ld	r22, Z
    1e34:	71 81       	ldd	r23, Z+1	; 0x01
    1e36:	82 81       	ldd	r24, Z+2	; 0x02
    1e38:	93 81       	ldd	r25, Z+3	; 0x03
    1e3a:	20 e0       	ldi	r18, 0x00	; 0
    1e3c:	3f ef       	ldi	r19, 0xFF	; 255
    1e3e:	4f e7       	ldi	r20, 0x7F	; 127
    1e40:	57 e4       	ldi	r21, 0x47	; 71
    1e42:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1e46:	18 16       	cp	r1, r24
    1e48:	0c f0       	brlt	.+2      	; 0x1e4c <FUN_LEFT+0x94c>
    1e4a:	43 c0       	rjmp	.+134    	; 0x1ed2 <FUN_LEFT+0x9d2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e4c:	fe 01       	movw	r30, r28
    1e4e:	e9 56       	subi	r30, 0x69	; 105
    1e50:	ff 4f       	sbci	r31, 0xFF	; 255
    1e52:	60 81       	ld	r22, Z
    1e54:	71 81       	ldd	r23, Z+1	; 0x01
    1e56:	82 81       	ldd	r24, Z+2	; 0x02
    1e58:	93 81       	ldd	r25, Z+3	; 0x03
    1e5a:	20 e0       	ldi	r18, 0x00	; 0
    1e5c:	30 e0       	ldi	r19, 0x00	; 0
    1e5e:	40 e2       	ldi	r20, 0x20	; 32
    1e60:	51 e4       	ldi	r21, 0x41	; 65
    1e62:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e66:	dc 01       	movw	r26, r24
    1e68:	cb 01       	movw	r24, r22
    1e6a:	8e 01       	movw	r16, r28
    1e6c:	0f 56       	subi	r16, 0x6F	; 111
    1e6e:	1f 4f       	sbci	r17, 0xFF	; 255
    1e70:	bc 01       	movw	r22, r24
    1e72:	cd 01       	movw	r24, r26
    1e74:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e78:	dc 01       	movw	r26, r24
    1e7a:	cb 01       	movw	r24, r22
    1e7c:	f8 01       	movw	r30, r16
    1e7e:	91 83       	std	Z+1, r25	; 0x01
    1e80:	80 83       	st	Z, r24
    1e82:	1f c0       	rjmp	.+62     	; 0x1ec2 <FUN_LEFT+0x9c2>
    1e84:	fe 01       	movw	r30, r28
    1e86:	e1 57       	subi	r30, 0x71	; 113
    1e88:	ff 4f       	sbci	r31, 0xFF	; 255
    1e8a:	88 ec       	ldi	r24, 0xC8	; 200
    1e8c:	90 e0       	ldi	r25, 0x00	; 0
    1e8e:	91 83       	std	Z+1, r25	; 0x01
    1e90:	80 83       	st	Z, r24
    1e92:	fe 01       	movw	r30, r28
    1e94:	e1 57       	subi	r30, 0x71	; 113
    1e96:	ff 4f       	sbci	r31, 0xFF	; 255
    1e98:	80 81       	ld	r24, Z
    1e9a:	91 81       	ldd	r25, Z+1	; 0x01
    1e9c:	01 97       	sbiw	r24, 0x01	; 1
    1e9e:	f1 f7       	brne	.-4      	; 0x1e9c <FUN_LEFT+0x99c>
    1ea0:	fe 01       	movw	r30, r28
    1ea2:	e1 57       	subi	r30, 0x71	; 113
    1ea4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ea6:	91 83       	std	Z+1, r25	; 0x01
    1ea8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1eaa:	de 01       	movw	r26, r28
    1eac:	af 56       	subi	r26, 0x6F	; 111
    1eae:	bf 4f       	sbci	r27, 0xFF	; 255
    1eb0:	fe 01       	movw	r30, r28
    1eb2:	ef 56       	subi	r30, 0x6F	; 111
    1eb4:	ff 4f       	sbci	r31, 0xFF	; 255
    1eb6:	80 81       	ld	r24, Z
    1eb8:	91 81       	ldd	r25, Z+1	; 0x01
    1eba:	01 97       	sbiw	r24, 0x01	; 1
    1ebc:	11 96       	adiw	r26, 0x01	; 1
    1ebe:	9c 93       	st	X, r25
    1ec0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ec2:	fe 01       	movw	r30, r28
    1ec4:	ef 56       	subi	r30, 0x6F	; 111
    1ec6:	ff 4f       	sbci	r31, 0xFF	; 255
    1ec8:	80 81       	ld	r24, Z
    1eca:	91 81       	ldd	r25, Z+1	; 0x01
    1ecc:	00 97       	sbiw	r24, 0x00	; 0
    1ece:	d1 f6       	brne	.-76     	; 0x1e84 <FUN_LEFT+0x984>
    1ed0:	27 c0       	rjmp	.+78     	; 0x1f20 <FUN_LEFT+0xa20>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ed2:	8e 01       	movw	r16, r28
    1ed4:	0f 56       	subi	r16, 0x6F	; 111
    1ed6:	1f 4f       	sbci	r17, 0xFF	; 255
    1ed8:	fe 01       	movw	r30, r28
    1eda:	ed 56       	subi	r30, 0x6D	; 109
    1edc:	ff 4f       	sbci	r31, 0xFF	; 255
    1ede:	60 81       	ld	r22, Z
    1ee0:	71 81       	ldd	r23, Z+1	; 0x01
    1ee2:	82 81       	ldd	r24, Z+2	; 0x02
    1ee4:	93 81       	ldd	r25, Z+3	; 0x03
    1ee6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1eea:	dc 01       	movw	r26, r24
    1eec:	cb 01       	movw	r24, r22
    1eee:	f8 01       	movw	r30, r16
    1ef0:	91 83       	std	Z+1, r25	; 0x01
    1ef2:	80 83       	st	Z, r24
    1ef4:	de 01       	movw	r26, r28
    1ef6:	a3 57       	subi	r26, 0x73	; 115
    1ef8:	bf 4f       	sbci	r27, 0xFF	; 255
    1efa:	fe 01       	movw	r30, r28
    1efc:	ef 56       	subi	r30, 0x6F	; 111
    1efe:	ff 4f       	sbci	r31, 0xFF	; 255
    1f00:	80 81       	ld	r24, Z
    1f02:	91 81       	ldd	r25, Z+1	; 0x01
    1f04:	8d 93       	st	X+, r24
    1f06:	9c 93       	st	X, r25
    1f08:	fe 01       	movw	r30, r28
    1f0a:	e3 57       	subi	r30, 0x73	; 115
    1f0c:	ff 4f       	sbci	r31, 0xFF	; 255
    1f0e:	80 81       	ld	r24, Z
    1f10:	91 81       	ldd	r25, Z+1	; 0x01
    1f12:	01 97       	sbiw	r24, 0x01	; 1
    1f14:	f1 f7       	brne	.-4      	; 0x1f12 <FUN_LEFT+0xa12>
    1f16:	fe 01       	movw	r30, r28
    1f18:	e3 57       	subi	r30, 0x73	; 115
    1f1a:	ff 4f       	sbci	r31, 0xFF	; 255
    1f1c:	91 83       	std	Z+1, r25	; 0x01
    1f1e:	80 83       	st	Z, r24
_delay_ms(50);
DIO__CheckStatusSetPinValue(DIO__UINT8_PORTA,DIO__UINT8_PIN4,DIO__UINT8_HIGH);
    1f20:	80 e0       	ldi	r24, 0x00	; 0
    1f22:	64 e0       	ldi	r22, 0x04	; 4
    1f24:	41 e0       	ldi	r20, 0x01	; 1
    1f26:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <DIO__CheckStatusSetPinValue>
    1f2a:	fe 01       	movw	r30, r28
    1f2c:	e7 57       	subi	r30, 0x77	; 119
    1f2e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f30:	80 e0       	ldi	r24, 0x00	; 0
    1f32:	90 e0       	ldi	r25, 0x00	; 0
    1f34:	a8 e4       	ldi	r26, 0x48	; 72
    1f36:	b2 e4       	ldi	r27, 0x42	; 66
    1f38:	80 83       	st	Z, r24
    1f3a:	91 83       	std	Z+1, r25	; 0x01
    1f3c:	a2 83       	std	Z+2, r26	; 0x02
    1f3e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1f40:	8e 01       	movw	r16, r28
    1f42:	0b 57       	subi	r16, 0x7B	; 123
    1f44:	1f 4f       	sbci	r17, 0xFF	; 255
    1f46:	fe 01       	movw	r30, r28
    1f48:	e7 57       	subi	r30, 0x77	; 119
    1f4a:	ff 4f       	sbci	r31, 0xFF	; 255
    1f4c:	60 81       	ld	r22, Z
    1f4e:	71 81       	ldd	r23, Z+1	; 0x01
    1f50:	82 81       	ldd	r24, Z+2	; 0x02
    1f52:	93 81       	ldd	r25, Z+3	; 0x03
    1f54:	20 e0       	ldi	r18, 0x00	; 0
    1f56:	30 e0       	ldi	r19, 0x00	; 0
    1f58:	4a ef       	ldi	r20, 0xFA	; 250
    1f5a:	54 e4       	ldi	r21, 0x44	; 68
    1f5c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f60:	dc 01       	movw	r26, r24
    1f62:	cb 01       	movw	r24, r22
    1f64:	f8 01       	movw	r30, r16
    1f66:	80 83       	st	Z, r24
    1f68:	91 83       	std	Z+1, r25	; 0x01
    1f6a:	a2 83       	std	Z+2, r26	; 0x02
    1f6c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1f6e:	fe 01       	movw	r30, r28
    1f70:	eb 57       	subi	r30, 0x7B	; 123
    1f72:	ff 4f       	sbci	r31, 0xFF	; 255
    1f74:	60 81       	ld	r22, Z
    1f76:	71 81       	ldd	r23, Z+1	; 0x01
    1f78:	82 81       	ldd	r24, Z+2	; 0x02
    1f7a:	93 81       	ldd	r25, Z+3	; 0x03
    1f7c:	20 e0       	ldi	r18, 0x00	; 0
    1f7e:	30 e0       	ldi	r19, 0x00	; 0
    1f80:	40 e8       	ldi	r20, 0x80	; 128
    1f82:	5f e3       	ldi	r21, 0x3F	; 63
    1f84:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1f88:	88 23       	and	r24, r24
    1f8a:	44 f4       	brge	.+16     	; 0x1f9c <FUN_LEFT+0xa9c>
		__ticks = 1;
    1f8c:	fe 01       	movw	r30, r28
    1f8e:	ed 57       	subi	r30, 0x7D	; 125
    1f90:	ff 4f       	sbci	r31, 0xFF	; 255
    1f92:	81 e0       	ldi	r24, 0x01	; 1
    1f94:	90 e0       	ldi	r25, 0x00	; 0
    1f96:	91 83       	std	Z+1, r25	; 0x01
    1f98:	80 83       	st	Z, r24
    1f9a:	64 c0       	rjmp	.+200    	; 0x2064 <FUN_LEFT+0xb64>
	else if (__tmp > 65535)
    1f9c:	fe 01       	movw	r30, r28
    1f9e:	eb 57       	subi	r30, 0x7B	; 123
    1fa0:	ff 4f       	sbci	r31, 0xFF	; 255
    1fa2:	60 81       	ld	r22, Z
    1fa4:	71 81       	ldd	r23, Z+1	; 0x01
    1fa6:	82 81       	ldd	r24, Z+2	; 0x02
    1fa8:	93 81       	ldd	r25, Z+3	; 0x03
    1faa:	20 e0       	ldi	r18, 0x00	; 0
    1fac:	3f ef       	ldi	r19, 0xFF	; 255
    1fae:	4f e7       	ldi	r20, 0x7F	; 127
    1fb0:	57 e4       	ldi	r21, 0x47	; 71
    1fb2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1fb6:	18 16       	cp	r1, r24
    1fb8:	0c f0       	brlt	.+2      	; 0x1fbc <FUN_LEFT+0xabc>
    1fba:	43 c0       	rjmp	.+134    	; 0x2042 <FUN_LEFT+0xb42>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1fbc:	fe 01       	movw	r30, r28
    1fbe:	e7 57       	subi	r30, 0x77	; 119
    1fc0:	ff 4f       	sbci	r31, 0xFF	; 255
    1fc2:	60 81       	ld	r22, Z
    1fc4:	71 81       	ldd	r23, Z+1	; 0x01
    1fc6:	82 81       	ldd	r24, Z+2	; 0x02
    1fc8:	93 81       	ldd	r25, Z+3	; 0x03
    1fca:	20 e0       	ldi	r18, 0x00	; 0
    1fcc:	30 e0       	ldi	r19, 0x00	; 0
    1fce:	40 e2       	ldi	r20, 0x20	; 32
    1fd0:	51 e4       	ldi	r21, 0x41	; 65
    1fd2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1fd6:	dc 01       	movw	r26, r24
    1fd8:	cb 01       	movw	r24, r22
    1fda:	8e 01       	movw	r16, r28
    1fdc:	0d 57       	subi	r16, 0x7D	; 125
    1fde:	1f 4f       	sbci	r17, 0xFF	; 255
    1fe0:	bc 01       	movw	r22, r24
    1fe2:	cd 01       	movw	r24, r26
    1fe4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1fe8:	dc 01       	movw	r26, r24
    1fea:	cb 01       	movw	r24, r22
    1fec:	f8 01       	movw	r30, r16
    1fee:	91 83       	std	Z+1, r25	; 0x01
    1ff0:	80 83       	st	Z, r24
    1ff2:	1f c0       	rjmp	.+62     	; 0x2032 <FUN_LEFT+0xb32>
    1ff4:	fe 01       	movw	r30, r28
    1ff6:	ef 57       	subi	r30, 0x7F	; 127
    1ff8:	ff 4f       	sbci	r31, 0xFF	; 255
    1ffa:	88 ec       	ldi	r24, 0xC8	; 200
    1ffc:	90 e0       	ldi	r25, 0x00	; 0
    1ffe:	91 83       	std	Z+1, r25	; 0x01
    2000:	80 83       	st	Z, r24
    2002:	fe 01       	movw	r30, r28
    2004:	ef 57       	subi	r30, 0x7F	; 127
    2006:	ff 4f       	sbci	r31, 0xFF	; 255
    2008:	80 81       	ld	r24, Z
    200a:	91 81       	ldd	r25, Z+1	; 0x01
    200c:	01 97       	sbiw	r24, 0x01	; 1
    200e:	f1 f7       	brne	.-4      	; 0x200c <FUN_LEFT+0xb0c>
    2010:	fe 01       	movw	r30, r28
    2012:	ef 57       	subi	r30, 0x7F	; 127
    2014:	ff 4f       	sbci	r31, 0xFF	; 255
    2016:	91 83       	std	Z+1, r25	; 0x01
    2018:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    201a:	de 01       	movw	r26, r28
    201c:	ad 57       	subi	r26, 0x7D	; 125
    201e:	bf 4f       	sbci	r27, 0xFF	; 255
    2020:	fe 01       	movw	r30, r28
    2022:	ed 57       	subi	r30, 0x7D	; 125
    2024:	ff 4f       	sbci	r31, 0xFF	; 255
    2026:	80 81       	ld	r24, Z
    2028:	91 81       	ldd	r25, Z+1	; 0x01
    202a:	01 97       	sbiw	r24, 0x01	; 1
    202c:	11 96       	adiw	r26, 0x01	; 1
    202e:	9c 93       	st	X, r25
    2030:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2032:	fe 01       	movw	r30, r28
    2034:	ed 57       	subi	r30, 0x7D	; 125
    2036:	ff 4f       	sbci	r31, 0xFF	; 255
    2038:	80 81       	ld	r24, Z
    203a:	91 81       	ldd	r25, Z+1	; 0x01
    203c:	00 97       	sbiw	r24, 0x00	; 0
    203e:	d1 f6       	brne	.-76     	; 0x1ff4 <FUN_LEFT+0xaf4>
    2040:	27 c0       	rjmp	.+78     	; 0x2090 <FUN_LEFT+0xb90>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2042:	8e 01       	movw	r16, r28
    2044:	0d 57       	subi	r16, 0x7D	; 125
    2046:	1f 4f       	sbci	r17, 0xFF	; 255
    2048:	fe 01       	movw	r30, r28
    204a:	eb 57       	subi	r30, 0x7B	; 123
    204c:	ff 4f       	sbci	r31, 0xFF	; 255
    204e:	60 81       	ld	r22, Z
    2050:	71 81       	ldd	r23, Z+1	; 0x01
    2052:	82 81       	ldd	r24, Z+2	; 0x02
    2054:	93 81       	ldd	r25, Z+3	; 0x03
    2056:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    205a:	dc 01       	movw	r26, r24
    205c:	cb 01       	movw	r24, r22
    205e:	f8 01       	movw	r30, r16
    2060:	91 83       	std	Z+1, r25	; 0x01
    2062:	80 83       	st	Z, r24
    2064:	de 01       	movw	r26, r28
    2066:	a1 58       	subi	r26, 0x81	; 129
    2068:	bf 4f       	sbci	r27, 0xFF	; 255
    206a:	fe 01       	movw	r30, r28
    206c:	ed 57       	subi	r30, 0x7D	; 125
    206e:	ff 4f       	sbci	r31, 0xFF	; 255
    2070:	80 81       	ld	r24, Z
    2072:	91 81       	ldd	r25, Z+1	; 0x01
    2074:	8d 93       	st	X+, r24
    2076:	9c 93       	st	X, r25
    2078:	fe 01       	movw	r30, r28
    207a:	e1 58       	subi	r30, 0x81	; 129
    207c:	ff 4f       	sbci	r31, 0xFF	; 255
    207e:	80 81       	ld	r24, Z
    2080:	91 81       	ldd	r25, Z+1	; 0x01
    2082:	01 97       	sbiw	r24, 0x01	; 1
    2084:	f1 f7       	brne	.-4      	; 0x2082 <FUN_LEFT+0xb82>
    2086:	fe 01       	movw	r30, r28
    2088:	e1 58       	subi	r30, 0x81	; 129
    208a:	ff 4f       	sbci	r31, 0xFF	; 255
    208c:	91 83       	std	Z+1, r25	; 0x01
    208e:	80 83       	st	Z, r24
_delay_ms(50);
DIO__CheckStatusSetPinValue(DIO__UINT8_PORTA,DIO__UINT8_PIN4,DIO__UINT8_LOW);
    2090:	80 e0       	ldi	r24, 0x00	; 0
    2092:	64 e0       	ldi	r22, 0x04	; 4
    2094:	40 e0       	ldi	r20, 0x00	; 0
    2096:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <DIO__CheckStatusSetPinValue>
    209a:	fe 01       	movw	r30, r28
    209c:	e5 58       	subi	r30, 0x85	; 133
    209e:	ff 4f       	sbci	r31, 0xFF	; 255
    20a0:	80 e0       	ldi	r24, 0x00	; 0
    20a2:	90 e0       	ldi	r25, 0x00	; 0
    20a4:	a8 e4       	ldi	r26, 0x48	; 72
    20a6:	b2 e4       	ldi	r27, 0x42	; 66
    20a8:	80 83       	st	Z, r24
    20aa:	91 83       	std	Z+1, r25	; 0x01
    20ac:	a2 83       	std	Z+2, r26	; 0x02
    20ae:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    20b0:	8e 01       	movw	r16, r28
    20b2:	09 58       	subi	r16, 0x89	; 137
    20b4:	1f 4f       	sbci	r17, 0xFF	; 255
    20b6:	fe 01       	movw	r30, r28
    20b8:	e5 58       	subi	r30, 0x85	; 133
    20ba:	ff 4f       	sbci	r31, 0xFF	; 255
    20bc:	60 81       	ld	r22, Z
    20be:	71 81       	ldd	r23, Z+1	; 0x01
    20c0:	82 81       	ldd	r24, Z+2	; 0x02
    20c2:	93 81       	ldd	r25, Z+3	; 0x03
    20c4:	20 e0       	ldi	r18, 0x00	; 0
    20c6:	30 e0       	ldi	r19, 0x00	; 0
    20c8:	4a ef       	ldi	r20, 0xFA	; 250
    20ca:	54 e4       	ldi	r21, 0x44	; 68
    20cc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    20d0:	dc 01       	movw	r26, r24
    20d2:	cb 01       	movw	r24, r22
    20d4:	f8 01       	movw	r30, r16
    20d6:	80 83       	st	Z, r24
    20d8:	91 83       	std	Z+1, r25	; 0x01
    20da:	a2 83       	std	Z+2, r26	; 0x02
    20dc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    20de:	fe 01       	movw	r30, r28
    20e0:	e9 58       	subi	r30, 0x89	; 137
    20e2:	ff 4f       	sbci	r31, 0xFF	; 255
    20e4:	60 81       	ld	r22, Z
    20e6:	71 81       	ldd	r23, Z+1	; 0x01
    20e8:	82 81       	ldd	r24, Z+2	; 0x02
    20ea:	93 81       	ldd	r25, Z+3	; 0x03
    20ec:	20 e0       	ldi	r18, 0x00	; 0
    20ee:	30 e0       	ldi	r19, 0x00	; 0
    20f0:	40 e8       	ldi	r20, 0x80	; 128
    20f2:	5f e3       	ldi	r21, 0x3F	; 63
    20f4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    20f8:	88 23       	and	r24, r24
    20fa:	44 f4       	brge	.+16     	; 0x210c <FUN_LEFT+0xc0c>
		__ticks = 1;
    20fc:	fe 01       	movw	r30, r28
    20fe:	eb 58       	subi	r30, 0x8B	; 139
    2100:	ff 4f       	sbci	r31, 0xFF	; 255
    2102:	81 e0       	ldi	r24, 0x01	; 1
    2104:	90 e0       	ldi	r25, 0x00	; 0
    2106:	91 83       	std	Z+1, r25	; 0x01
    2108:	80 83       	st	Z, r24
    210a:	64 c0       	rjmp	.+200    	; 0x21d4 <FUN_LEFT+0xcd4>
	else if (__tmp > 65535)
    210c:	fe 01       	movw	r30, r28
    210e:	e9 58       	subi	r30, 0x89	; 137
    2110:	ff 4f       	sbci	r31, 0xFF	; 255
    2112:	60 81       	ld	r22, Z
    2114:	71 81       	ldd	r23, Z+1	; 0x01
    2116:	82 81       	ldd	r24, Z+2	; 0x02
    2118:	93 81       	ldd	r25, Z+3	; 0x03
    211a:	20 e0       	ldi	r18, 0x00	; 0
    211c:	3f ef       	ldi	r19, 0xFF	; 255
    211e:	4f e7       	ldi	r20, 0x7F	; 127
    2120:	57 e4       	ldi	r21, 0x47	; 71
    2122:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2126:	18 16       	cp	r1, r24
    2128:	0c f0       	brlt	.+2      	; 0x212c <FUN_LEFT+0xc2c>
    212a:	43 c0       	rjmp	.+134    	; 0x21b2 <FUN_LEFT+0xcb2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    212c:	fe 01       	movw	r30, r28
    212e:	e5 58       	subi	r30, 0x85	; 133
    2130:	ff 4f       	sbci	r31, 0xFF	; 255
    2132:	60 81       	ld	r22, Z
    2134:	71 81       	ldd	r23, Z+1	; 0x01
    2136:	82 81       	ldd	r24, Z+2	; 0x02
    2138:	93 81       	ldd	r25, Z+3	; 0x03
    213a:	20 e0       	ldi	r18, 0x00	; 0
    213c:	30 e0       	ldi	r19, 0x00	; 0
    213e:	40 e2       	ldi	r20, 0x20	; 32
    2140:	51 e4       	ldi	r21, 0x41	; 65
    2142:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2146:	dc 01       	movw	r26, r24
    2148:	cb 01       	movw	r24, r22
    214a:	8e 01       	movw	r16, r28
    214c:	0b 58       	subi	r16, 0x8B	; 139
    214e:	1f 4f       	sbci	r17, 0xFF	; 255
    2150:	bc 01       	movw	r22, r24
    2152:	cd 01       	movw	r24, r26
    2154:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2158:	dc 01       	movw	r26, r24
    215a:	cb 01       	movw	r24, r22
    215c:	f8 01       	movw	r30, r16
    215e:	91 83       	std	Z+1, r25	; 0x01
    2160:	80 83       	st	Z, r24
    2162:	1f c0       	rjmp	.+62     	; 0x21a2 <FUN_LEFT+0xca2>
    2164:	fe 01       	movw	r30, r28
    2166:	ed 58       	subi	r30, 0x8D	; 141
    2168:	ff 4f       	sbci	r31, 0xFF	; 255
    216a:	88 ec       	ldi	r24, 0xC8	; 200
    216c:	90 e0       	ldi	r25, 0x00	; 0
    216e:	91 83       	std	Z+1, r25	; 0x01
    2170:	80 83       	st	Z, r24
    2172:	fe 01       	movw	r30, r28
    2174:	ed 58       	subi	r30, 0x8D	; 141
    2176:	ff 4f       	sbci	r31, 0xFF	; 255
    2178:	80 81       	ld	r24, Z
    217a:	91 81       	ldd	r25, Z+1	; 0x01
    217c:	01 97       	sbiw	r24, 0x01	; 1
    217e:	f1 f7       	brne	.-4      	; 0x217c <FUN_LEFT+0xc7c>
    2180:	fe 01       	movw	r30, r28
    2182:	ed 58       	subi	r30, 0x8D	; 141
    2184:	ff 4f       	sbci	r31, 0xFF	; 255
    2186:	91 83       	std	Z+1, r25	; 0x01
    2188:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    218a:	de 01       	movw	r26, r28
    218c:	ab 58       	subi	r26, 0x8B	; 139
    218e:	bf 4f       	sbci	r27, 0xFF	; 255
    2190:	fe 01       	movw	r30, r28
    2192:	eb 58       	subi	r30, 0x8B	; 139
    2194:	ff 4f       	sbci	r31, 0xFF	; 255
    2196:	80 81       	ld	r24, Z
    2198:	91 81       	ldd	r25, Z+1	; 0x01
    219a:	01 97       	sbiw	r24, 0x01	; 1
    219c:	11 96       	adiw	r26, 0x01	; 1
    219e:	9c 93       	st	X, r25
    21a0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    21a2:	fe 01       	movw	r30, r28
    21a4:	eb 58       	subi	r30, 0x8B	; 139
    21a6:	ff 4f       	sbci	r31, 0xFF	; 255
    21a8:	80 81       	ld	r24, Z
    21aa:	91 81       	ldd	r25, Z+1	; 0x01
    21ac:	00 97       	sbiw	r24, 0x00	; 0
    21ae:	d1 f6       	brne	.-76     	; 0x2164 <FUN_LEFT+0xc64>
    21b0:	27 c0       	rjmp	.+78     	; 0x2200 <FUN_LEFT+0xd00>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    21b2:	8e 01       	movw	r16, r28
    21b4:	0b 58       	subi	r16, 0x8B	; 139
    21b6:	1f 4f       	sbci	r17, 0xFF	; 255
    21b8:	fe 01       	movw	r30, r28
    21ba:	e9 58       	subi	r30, 0x89	; 137
    21bc:	ff 4f       	sbci	r31, 0xFF	; 255
    21be:	60 81       	ld	r22, Z
    21c0:	71 81       	ldd	r23, Z+1	; 0x01
    21c2:	82 81       	ldd	r24, Z+2	; 0x02
    21c4:	93 81       	ldd	r25, Z+3	; 0x03
    21c6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    21ca:	dc 01       	movw	r26, r24
    21cc:	cb 01       	movw	r24, r22
    21ce:	f8 01       	movw	r30, r16
    21d0:	91 83       	std	Z+1, r25	; 0x01
    21d2:	80 83       	st	Z, r24
    21d4:	de 01       	movw	r26, r28
    21d6:	af 58       	subi	r26, 0x8F	; 143
    21d8:	bf 4f       	sbci	r27, 0xFF	; 255
    21da:	fe 01       	movw	r30, r28
    21dc:	eb 58       	subi	r30, 0x8B	; 139
    21de:	ff 4f       	sbci	r31, 0xFF	; 255
    21e0:	80 81       	ld	r24, Z
    21e2:	91 81       	ldd	r25, Z+1	; 0x01
    21e4:	8d 93       	st	X+, r24
    21e6:	9c 93       	st	X, r25
    21e8:	fe 01       	movw	r30, r28
    21ea:	ef 58       	subi	r30, 0x8F	; 143
    21ec:	ff 4f       	sbci	r31, 0xFF	; 255
    21ee:	80 81       	ld	r24, Z
    21f0:	91 81       	ldd	r25, Z+1	; 0x01
    21f2:	01 97       	sbiw	r24, 0x01	; 1
    21f4:	f1 f7       	brne	.-4      	; 0x21f2 <FUN_LEFT+0xcf2>
    21f6:	fe 01       	movw	r30, r28
    21f8:	ef 58       	subi	r30, 0x8F	; 143
    21fa:	ff 4f       	sbci	r31, 0xFF	; 255
    21fc:	91 83       	std	Z+1, r25	; 0x01
    21fe:	80 83       	st	Z, r24
_delay_ms(50);
DIO__CheckStatusSetPinValue(DIO__UINT8_PORTA,DIO__UINT8_PIN3,DIO__UINT8_HIGH);
    2200:	80 e0       	ldi	r24, 0x00	; 0
    2202:	63 e0       	ldi	r22, 0x03	; 3
    2204:	41 e0       	ldi	r20, 0x01	; 1
    2206:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <DIO__CheckStatusSetPinValue>
    220a:	fe 01       	movw	r30, r28
    220c:	e3 59       	subi	r30, 0x93	; 147
    220e:	ff 4f       	sbci	r31, 0xFF	; 255
    2210:	80 e0       	ldi	r24, 0x00	; 0
    2212:	90 e0       	ldi	r25, 0x00	; 0
    2214:	a8 e4       	ldi	r26, 0x48	; 72
    2216:	b2 e4       	ldi	r27, 0x42	; 66
    2218:	80 83       	st	Z, r24
    221a:	91 83       	std	Z+1, r25	; 0x01
    221c:	a2 83       	std	Z+2, r26	; 0x02
    221e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2220:	8e 01       	movw	r16, r28
    2222:	07 59       	subi	r16, 0x97	; 151
    2224:	1f 4f       	sbci	r17, 0xFF	; 255
    2226:	fe 01       	movw	r30, r28
    2228:	e3 59       	subi	r30, 0x93	; 147
    222a:	ff 4f       	sbci	r31, 0xFF	; 255
    222c:	60 81       	ld	r22, Z
    222e:	71 81       	ldd	r23, Z+1	; 0x01
    2230:	82 81       	ldd	r24, Z+2	; 0x02
    2232:	93 81       	ldd	r25, Z+3	; 0x03
    2234:	20 e0       	ldi	r18, 0x00	; 0
    2236:	30 e0       	ldi	r19, 0x00	; 0
    2238:	4a ef       	ldi	r20, 0xFA	; 250
    223a:	54 e4       	ldi	r21, 0x44	; 68
    223c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2240:	dc 01       	movw	r26, r24
    2242:	cb 01       	movw	r24, r22
    2244:	f8 01       	movw	r30, r16
    2246:	80 83       	st	Z, r24
    2248:	91 83       	std	Z+1, r25	; 0x01
    224a:	a2 83       	std	Z+2, r26	; 0x02
    224c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    224e:	fe 01       	movw	r30, r28
    2250:	e7 59       	subi	r30, 0x97	; 151
    2252:	ff 4f       	sbci	r31, 0xFF	; 255
    2254:	60 81       	ld	r22, Z
    2256:	71 81       	ldd	r23, Z+1	; 0x01
    2258:	82 81       	ldd	r24, Z+2	; 0x02
    225a:	93 81       	ldd	r25, Z+3	; 0x03
    225c:	20 e0       	ldi	r18, 0x00	; 0
    225e:	30 e0       	ldi	r19, 0x00	; 0
    2260:	40 e8       	ldi	r20, 0x80	; 128
    2262:	5f e3       	ldi	r21, 0x3F	; 63
    2264:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2268:	88 23       	and	r24, r24
    226a:	44 f4       	brge	.+16     	; 0x227c <FUN_LEFT+0xd7c>
		__ticks = 1;
    226c:	fe 01       	movw	r30, r28
    226e:	e9 59       	subi	r30, 0x99	; 153
    2270:	ff 4f       	sbci	r31, 0xFF	; 255
    2272:	81 e0       	ldi	r24, 0x01	; 1
    2274:	90 e0       	ldi	r25, 0x00	; 0
    2276:	91 83       	std	Z+1, r25	; 0x01
    2278:	80 83       	st	Z, r24
    227a:	64 c0       	rjmp	.+200    	; 0x2344 <FUN_LEFT+0xe44>
	else if (__tmp > 65535)
    227c:	fe 01       	movw	r30, r28
    227e:	e7 59       	subi	r30, 0x97	; 151
    2280:	ff 4f       	sbci	r31, 0xFF	; 255
    2282:	60 81       	ld	r22, Z
    2284:	71 81       	ldd	r23, Z+1	; 0x01
    2286:	82 81       	ldd	r24, Z+2	; 0x02
    2288:	93 81       	ldd	r25, Z+3	; 0x03
    228a:	20 e0       	ldi	r18, 0x00	; 0
    228c:	3f ef       	ldi	r19, 0xFF	; 255
    228e:	4f e7       	ldi	r20, 0x7F	; 127
    2290:	57 e4       	ldi	r21, 0x47	; 71
    2292:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2296:	18 16       	cp	r1, r24
    2298:	0c f0       	brlt	.+2      	; 0x229c <FUN_LEFT+0xd9c>
    229a:	43 c0       	rjmp	.+134    	; 0x2322 <FUN_LEFT+0xe22>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    229c:	fe 01       	movw	r30, r28
    229e:	e3 59       	subi	r30, 0x93	; 147
    22a0:	ff 4f       	sbci	r31, 0xFF	; 255
    22a2:	60 81       	ld	r22, Z
    22a4:	71 81       	ldd	r23, Z+1	; 0x01
    22a6:	82 81       	ldd	r24, Z+2	; 0x02
    22a8:	93 81       	ldd	r25, Z+3	; 0x03
    22aa:	20 e0       	ldi	r18, 0x00	; 0
    22ac:	30 e0       	ldi	r19, 0x00	; 0
    22ae:	40 e2       	ldi	r20, 0x20	; 32
    22b0:	51 e4       	ldi	r21, 0x41	; 65
    22b2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    22b6:	dc 01       	movw	r26, r24
    22b8:	cb 01       	movw	r24, r22
    22ba:	8e 01       	movw	r16, r28
    22bc:	09 59       	subi	r16, 0x99	; 153
    22be:	1f 4f       	sbci	r17, 0xFF	; 255
    22c0:	bc 01       	movw	r22, r24
    22c2:	cd 01       	movw	r24, r26
    22c4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    22c8:	dc 01       	movw	r26, r24
    22ca:	cb 01       	movw	r24, r22
    22cc:	f8 01       	movw	r30, r16
    22ce:	91 83       	std	Z+1, r25	; 0x01
    22d0:	80 83       	st	Z, r24
    22d2:	1f c0       	rjmp	.+62     	; 0x2312 <FUN_LEFT+0xe12>
    22d4:	fe 01       	movw	r30, r28
    22d6:	eb 59       	subi	r30, 0x9B	; 155
    22d8:	ff 4f       	sbci	r31, 0xFF	; 255
    22da:	88 ec       	ldi	r24, 0xC8	; 200
    22dc:	90 e0       	ldi	r25, 0x00	; 0
    22de:	91 83       	std	Z+1, r25	; 0x01
    22e0:	80 83       	st	Z, r24
    22e2:	fe 01       	movw	r30, r28
    22e4:	eb 59       	subi	r30, 0x9B	; 155
    22e6:	ff 4f       	sbci	r31, 0xFF	; 255
    22e8:	80 81       	ld	r24, Z
    22ea:	91 81       	ldd	r25, Z+1	; 0x01
    22ec:	01 97       	sbiw	r24, 0x01	; 1
    22ee:	f1 f7       	brne	.-4      	; 0x22ec <FUN_LEFT+0xdec>
    22f0:	fe 01       	movw	r30, r28
    22f2:	eb 59       	subi	r30, 0x9B	; 155
    22f4:	ff 4f       	sbci	r31, 0xFF	; 255
    22f6:	91 83       	std	Z+1, r25	; 0x01
    22f8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    22fa:	de 01       	movw	r26, r28
    22fc:	a9 59       	subi	r26, 0x99	; 153
    22fe:	bf 4f       	sbci	r27, 0xFF	; 255
    2300:	fe 01       	movw	r30, r28
    2302:	e9 59       	subi	r30, 0x99	; 153
    2304:	ff 4f       	sbci	r31, 0xFF	; 255
    2306:	80 81       	ld	r24, Z
    2308:	91 81       	ldd	r25, Z+1	; 0x01
    230a:	01 97       	sbiw	r24, 0x01	; 1
    230c:	11 96       	adiw	r26, 0x01	; 1
    230e:	9c 93       	st	X, r25
    2310:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2312:	fe 01       	movw	r30, r28
    2314:	e9 59       	subi	r30, 0x99	; 153
    2316:	ff 4f       	sbci	r31, 0xFF	; 255
    2318:	80 81       	ld	r24, Z
    231a:	91 81       	ldd	r25, Z+1	; 0x01
    231c:	00 97       	sbiw	r24, 0x00	; 0
    231e:	d1 f6       	brne	.-76     	; 0x22d4 <FUN_LEFT+0xdd4>
    2320:	27 c0       	rjmp	.+78     	; 0x2370 <FUN_LEFT+0xe70>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2322:	8e 01       	movw	r16, r28
    2324:	09 59       	subi	r16, 0x99	; 153
    2326:	1f 4f       	sbci	r17, 0xFF	; 255
    2328:	fe 01       	movw	r30, r28
    232a:	e7 59       	subi	r30, 0x97	; 151
    232c:	ff 4f       	sbci	r31, 0xFF	; 255
    232e:	60 81       	ld	r22, Z
    2330:	71 81       	ldd	r23, Z+1	; 0x01
    2332:	82 81       	ldd	r24, Z+2	; 0x02
    2334:	93 81       	ldd	r25, Z+3	; 0x03
    2336:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    233a:	dc 01       	movw	r26, r24
    233c:	cb 01       	movw	r24, r22
    233e:	f8 01       	movw	r30, r16
    2340:	91 83       	std	Z+1, r25	; 0x01
    2342:	80 83       	st	Z, r24
    2344:	de 01       	movw	r26, r28
    2346:	ad 59       	subi	r26, 0x9D	; 157
    2348:	bf 4f       	sbci	r27, 0xFF	; 255
    234a:	fe 01       	movw	r30, r28
    234c:	e9 59       	subi	r30, 0x99	; 153
    234e:	ff 4f       	sbci	r31, 0xFF	; 255
    2350:	80 81       	ld	r24, Z
    2352:	91 81       	ldd	r25, Z+1	; 0x01
    2354:	8d 93       	st	X+, r24
    2356:	9c 93       	st	X, r25
    2358:	fe 01       	movw	r30, r28
    235a:	ed 59       	subi	r30, 0x9D	; 157
    235c:	ff 4f       	sbci	r31, 0xFF	; 255
    235e:	80 81       	ld	r24, Z
    2360:	91 81       	ldd	r25, Z+1	; 0x01
    2362:	01 97       	sbiw	r24, 0x01	; 1
    2364:	f1 f7       	brne	.-4      	; 0x2362 <FUN_LEFT+0xe62>
    2366:	fe 01       	movw	r30, r28
    2368:	ed 59       	subi	r30, 0x9D	; 157
    236a:	ff 4f       	sbci	r31, 0xFF	; 255
    236c:	91 83       	std	Z+1, r25	; 0x01
    236e:	80 83       	st	Z, r24
_delay_ms(50);
DIO__CheckStatusSetPinValue(DIO__UINT8_PORTA,DIO__UINT8_PIN3,DIO__UINT8_LOW);
    2370:	80 e0       	ldi	r24, 0x00	; 0
    2372:	63 e0       	ldi	r22, 0x03	; 3
    2374:	40 e0       	ldi	r20, 0x00	; 0
    2376:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <DIO__CheckStatusSetPinValue>
    237a:	fe 01       	movw	r30, r28
    237c:	e1 5a       	subi	r30, 0xA1	; 161
    237e:	ff 4f       	sbci	r31, 0xFF	; 255
    2380:	80 e0       	ldi	r24, 0x00	; 0
    2382:	90 e0       	ldi	r25, 0x00	; 0
    2384:	a8 e4       	ldi	r26, 0x48	; 72
    2386:	b2 e4       	ldi	r27, 0x42	; 66
    2388:	80 83       	st	Z, r24
    238a:	91 83       	std	Z+1, r25	; 0x01
    238c:	a2 83       	std	Z+2, r26	; 0x02
    238e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2390:	8e 01       	movw	r16, r28
    2392:	05 5a       	subi	r16, 0xA5	; 165
    2394:	1f 4f       	sbci	r17, 0xFF	; 255
    2396:	fe 01       	movw	r30, r28
    2398:	e1 5a       	subi	r30, 0xA1	; 161
    239a:	ff 4f       	sbci	r31, 0xFF	; 255
    239c:	60 81       	ld	r22, Z
    239e:	71 81       	ldd	r23, Z+1	; 0x01
    23a0:	82 81       	ldd	r24, Z+2	; 0x02
    23a2:	93 81       	ldd	r25, Z+3	; 0x03
    23a4:	20 e0       	ldi	r18, 0x00	; 0
    23a6:	30 e0       	ldi	r19, 0x00	; 0
    23a8:	4a ef       	ldi	r20, 0xFA	; 250
    23aa:	54 e4       	ldi	r21, 0x44	; 68
    23ac:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    23b0:	dc 01       	movw	r26, r24
    23b2:	cb 01       	movw	r24, r22
    23b4:	f8 01       	movw	r30, r16
    23b6:	80 83       	st	Z, r24
    23b8:	91 83       	std	Z+1, r25	; 0x01
    23ba:	a2 83       	std	Z+2, r26	; 0x02
    23bc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    23be:	fe 01       	movw	r30, r28
    23c0:	e5 5a       	subi	r30, 0xA5	; 165
    23c2:	ff 4f       	sbci	r31, 0xFF	; 255
    23c4:	60 81       	ld	r22, Z
    23c6:	71 81       	ldd	r23, Z+1	; 0x01
    23c8:	82 81       	ldd	r24, Z+2	; 0x02
    23ca:	93 81       	ldd	r25, Z+3	; 0x03
    23cc:	20 e0       	ldi	r18, 0x00	; 0
    23ce:	30 e0       	ldi	r19, 0x00	; 0
    23d0:	40 e8       	ldi	r20, 0x80	; 128
    23d2:	5f e3       	ldi	r21, 0x3F	; 63
    23d4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    23d8:	88 23       	and	r24, r24
    23da:	44 f4       	brge	.+16     	; 0x23ec <FUN_LEFT+0xeec>
		__ticks = 1;
    23dc:	fe 01       	movw	r30, r28
    23de:	e7 5a       	subi	r30, 0xA7	; 167
    23e0:	ff 4f       	sbci	r31, 0xFF	; 255
    23e2:	81 e0       	ldi	r24, 0x01	; 1
    23e4:	90 e0       	ldi	r25, 0x00	; 0
    23e6:	91 83       	std	Z+1, r25	; 0x01
    23e8:	80 83       	st	Z, r24
    23ea:	64 c0       	rjmp	.+200    	; 0x24b4 <FUN_LEFT+0xfb4>
	else if (__tmp > 65535)
    23ec:	fe 01       	movw	r30, r28
    23ee:	e5 5a       	subi	r30, 0xA5	; 165
    23f0:	ff 4f       	sbci	r31, 0xFF	; 255
    23f2:	60 81       	ld	r22, Z
    23f4:	71 81       	ldd	r23, Z+1	; 0x01
    23f6:	82 81       	ldd	r24, Z+2	; 0x02
    23f8:	93 81       	ldd	r25, Z+3	; 0x03
    23fa:	20 e0       	ldi	r18, 0x00	; 0
    23fc:	3f ef       	ldi	r19, 0xFF	; 255
    23fe:	4f e7       	ldi	r20, 0x7F	; 127
    2400:	57 e4       	ldi	r21, 0x47	; 71
    2402:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2406:	18 16       	cp	r1, r24
    2408:	0c f0       	brlt	.+2      	; 0x240c <FUN_LEFT+0xf0c>
    240a:	43 c0       	rjmp	.+134    	; 0x2492 <FUN_LEFT+0xf92>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    240c:	fe 01       	movw	r30, r28
    240e:	e1 5a       	subi	r30, 0xA1	; 161
    2410:	ff 4f       	sbci	r31, 0xFF	; 255
    2412:	60 81       	ld	r22, Z
    2414:	71 81       	ldd	r23, Z+1	; 0x01
    2416:	82 81       	ldd	r24, Z+2	; 0x02
    2418:	93 81       	ldd	r25, Z+3	; 0x03
    241a:	20 e0       	ldi	r18, 0x00	; 0
    241c:	30 e0       	ldi	r19, 0x00	; 0
    241e:	40 e2       	ldi	r20, 0x20	; 32
    2420:	51 e4       	ldi	r21, 0x41	; 65
    2422:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2426:	dc 01       	movw	r26, r24
    2428:	cb 01       	movw	r24, r22
    242a:	8e 01       	movw	r16, r28
    242c:	07 5a       	subi	r16, 0xA7	; 167
    242e:	1f 4f       	sbci	r17, 0xFF	; 255
    2430:	bc 01       	movw	r22, r24
    2432:	cd 01       	movw	r24, r26
    2434:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2438:	dc 01       	movw	r26, r24
    243a:	cb 01       	movw	r24, r22
    243c:	f8 01       	movw	r30, r16
    243e:	91 83       	std	Z+1, r25	; 0x01
    2440:	80 83       	st	Z, r24
    2442:	1f c0       	rjmp	.+62     	; 0x2482 <FUN_LEFT+0xf82>
    2444:	fe 01       	movw	r30, r28
    2446:	e9 5a       	subi	r30, 0xA9	; 169
    2448:	ff 4f       	sbci	r31, 0xFF	; 255
    244a:	88 ec       	ldi	r24, 0xC8	; 200
    244c:	90 e0       	ldi	r25, 0x00	; 0
    244e:	91 83       	std	Z+1, r25	; 0x01
    2450:	80 83       	st	Z, r24
    2452:	fe 01       	movw	r30, r28
    2454:	e9 5a       	subi	r30, 0xA9	; 169
    2456:	ff 4f       	sbci	r31, 0xFF	; 255
    2458:	80 81       	ld	r24, Z
    245a:	91 81       	ldd	r25, Z+1	; 0x01
    245c:	01 97       	sbiw	r24, 0x01	; 1
    245e:	f1 f7       	brne	.-4      	; 0x245c <FUN_LEFT+0xf5c>
    2460:	fe 01       	movw	r30, r28
    2462:	e9 5a       	subi	r30, 0xA9	; 169
    2464:	ff 4f       	sbci	r31, 0xFF	; 255
    2466:	91 83       	std	Z+1, r25	; 0x01
    2468:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    246a:	de 01       	movw	r26, r28
    246c:	a7 5a       	subi	r26, 0xA7	; 167
    246e:	bf 4f       	sbci	r27, 0xFF	; 255
    2470:	fe 01       	movw	r30, r28
    2472:	e7 5a       	subi	r30, 0xA7	; 167
    2474:	ff 4f       	sbci	r31, 0xFF	; 255
    2476:	80 81       	ld	r24, Z
    2478:	91 81       	ldd	r25, Z+1	; 0x01
    247a:	01 97       	sbiw	r24, 0x01	; 1
    247c:	11 96       	adiw	r26, 0x01	; 1
    247e:	9c 93       	st	X, r25
    2480:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2482:	fe 01       	movw	r30, r28
    2484:	e7 5a       	subi	r30, 0xA7	; 167
    2486:	ff 4f       	sbci	r31, 0xFF	; 255
    2488:	80 81       	ld	r24, Z
    248a:	91 81       	ldd	r25, Z+1	; 0x01
    248c:	00 97       	sbiw	r24, 0x00	; 0
    248e:	d1 f6       	brne	.-76     	; 0x2444 <FUN_LEFT+0xf44>
    2490:	27 c0       	rjmp	.+78     	; 0x24e0 <FUN_LEFT+0xfe0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2492:	8e 01       	movw	r16, r28
    2494:	07 5a       	subi	r16, 0xA7	; 167
    2496:	1f 4f       	sbci	r17, 0xFF	; 255
    2498:	fe 01       	movw	r30, r28
    249a:	e5 5a       	subi	r30, 0xA5	; 165
    249c:	ff 4f       	sbci	r31, 0xFF	; 255
    249e:	60 81       	ld	r22, Z
    24a0:	71 81       	ldd	r23, Z+1	; 0x01
    24a2:	82 81       	ldd	r24, Z+2	; 0x02
    24a4:	93 81       	ldd	r25, Z+3	; 0x03
    24a6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    24aa:	dc 01       	movw	r26, r24
    24ac:	cb 01       	movw	r24, r22
    24ae:	f8 01       	movw	r30, r16
    24b0:	91 83       	std	Z+1, r25	; 0x01
    24b2:	80 83       	st	Z, r24
    24b4:	de 01       	movw	r26, r28
    24b6:	ab 5a       	subi	r26, 0xAB	; 171
    24b8:	bf 4f       	sbci	r27, 0xFF	; 255
    24ba:	fe 01       	movw	r30, r28
    24bc:	e7 5a       	subi	r30, 0xA7	; 167
    24be:	ff 4f       	sbci	r31, 0xFF	; 255
    24c0:	80 81       	ld	r24, Z
    24c2:	91 81       	ldd	r25, Z+1	; 0x01
    24c4:	8d 93       	st	X+, r24
    24c6:	9c 93       	st	X, r25
    24c8:	fe 01       	movw	r30, r28
    24ca:	eb 5a       	subi	r30, 0xAB	; 171
    24cc:	ff 4f       	sbci	r31, 0xFF	; 255
    24ce:	80 81       	ld	r24, Z
    24d0:	91 81       	ldd	r25, Z+1	; 0x01
    24d2:	01 97       	sbiw	r24, 0x01	; 1
    24d4:	f1 f7       	brne	.-4      	; 0x24d2 <FUN_LEFT+0xfd2>
    24d6:	fe 01       	movw	r30, r28
    24d8:	eb 5a       	subi	r30, 0xAB	; 171
    24da:	ff 4f       	sbci	r31, 0xFF	; 255
    24dc:	91 83       	std	Z+1, r25	; 0x01
    24de:	80 83       	st	Z, r24
_delay_ms(50);
DIO__CheckStatusSetPinValue(DIO__UINT8_PORTA,DIO__UINT8_PIN2,DIO__UINT8_HIGH);
    24e0:	80 e0       	ldi	r24, 0x00	; 0
    24e2:	62 e0       	ldi	r22, 0x02	; 2
    24e4:	41 e0       	ldi	r20, 0x01	; 1
    24e6:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <DIO__CheckStatusSetPinValue>
    24ea:	fe 01       	movw	r30, r28
    24ec:	ef 5a       	subi	r30, 0xAF	; 175
    24ee:	ff 4f       	sbci	r31, 0xFF	; 255
    24f0:	80 e0       	ldi	r24, 0x00	; 0
    24f2:	90 e0       	ldi	r25, 0x00	; 0
    24f4:	a8 e4       	ldi	r26, 0x48	; 72
    24f6:	b2 e4       	ldi	r27, 0x42	; 66
    24f8:	80 83       	st	Z, r24
    24fa:	91 83       	std	Z+1, r25	; 0x01
    24fc:	a2 83       	std	Z+2, r26	; 0x02
    24fe:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2500:	8e 01       	movw	r16, r28
    2502:	03 5b       	subi	r16, 0xB3	; 179
    2504:	1f 4f       	sbci	r17, 0xFF	; 255
    2506:	fe 01       	movw	r30, r28
    2508:	ef 5a       	subi	r30, 0xAF	; 175
    250a:	ff 4f       	sbci	r31, 0xFF	; 255
    250c:	60 81       	ld	r22, Z
    250e:	71 81       	ldd	r23, Z+1	; 0x01
    2510:	82 81       	ldd	r24, Z+2	; 0x02
    2512:	93 81       	ldd	r25, Z+3	; 0x03
    2514:	20 e0       	ldi	r18, 0x00	; 0
    2516:	30 e0       	ldi	r19, 0x00	; 0
    2518:	4a ef       	ldi	r20, 0xFA	; 250
    251a:	54 e4       	ldi	r21, 0x44	; 68
    251c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2520:	dc 01       	movw	r26, r24
    2522:	cb 01       	movw	r24, r22
    2524:	f8 01       	movw	r30, r16
    2526:	80 83       	st	Z, r24
    2528:	91 83       	std	Z+1, r25	; 0x01
    252a:	a2 83       	std	Z+2, r26	; 0x02
    252c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    252e:	fe 01       	movw	r30, r28
    2530:	e3 5b       	subi	r30, 0xB3	; 179
    2532:	ff 4f       	sbci	r31, 0xFF	; 255
    2534:	60 81       	ld	r22, Z
    2536:	71 81       	ldd	r23, Z+1	; 0x01
    2538:	82 81       	ldd	r24, Z+2	; 0x02
    253a:	93 81       	ldd	r25, Z+3	; 0x03
    253c:	20 e0       	ldi	r18, 0x00	; 0
    253e:	30 e0       	ldi	r19, 0x00	; 0
    2540:	40 e8       	ldi	r20, 0x80	; 128
    2542:	5f e3       	ldi	r21, 0x3F	; 63
    2544:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2548:	88 23       	and	r24, r24
    254a:	44 f4       	brge	.+16     	; 0x255c <FUN_LEFT+0x105c>
		__ticks = 1;
    254c:	fe 01       	movw	r30, r28
    254e:	e5 5b       	subi	r30, 0xB5	; 181
    2550:	ff 4f       	sbci	r31, 0xFF	; 255
    2552:	81 e0       	ldi	r24, 0x01	; 1
    2554:	90 e0       	ldi	r25, 0x00	; 0
    2556:	91 83       	std	Z+1, r25	; 0x01
    2558:	80 83       	st	Z, r24
    255a:	64 c0       	rjmp	.+200    	; 0x2624 <FUN_LEFT+0x1124>
	else if (__tmp > 65535)
    255c:	fe 01       	movw	r30, r28
    255e:	e3 5b       	subi	r30, 0xB3	; 179
    2560:	ff 4f       	sbci	r31, 0xFF	; 255
    2562:	60 81       	ld	r22, Z
    2564:	71 81       	ldd	r23, Z+1	; 0x01
    2566:	82 81       	ldd	r24, Z+2	; 0x02
    2568:	93 81       	ldd	r25, Z+3	; 0x03
    256a:	20 e0       	ldi	r18, 0x00	; 0
    256c:	3f ef       	ldi	r19, 0xFF	; 255
    256e:	4f e7       	ldi	r20, 0x7F	; 127
    2570:	57 e4       	ldi	r21, 0x47	; 71
    2572:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2576:	18 16       	cp	r1, r24
    2578:	0c f0       	brlt	.+2      	; 0x257c <FUN_LEFT+0x107c>
    257a:	43 c0       	rjmp	.+134    	; 0x2602 <FUN_LEFT+0x1102>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    257c:	fe 01       	movw	r30, r28
    257e:	ef 5a       	subi	r30, 0xAF	; 175
    2580:	ff 4f       	sbci	r31, 0xFF	; 255
    2582:	60 81       	ld	r22, Z
    2584:	71 81       	ldd	r23, Z+1	; 0x01
    2586:	82 81       	ldd	r24, Z+2	; 0x02
    2588:	93 81       	ldd	r25, Z+3	; 0x03
    258a:	20 e0       	ldi	r18, 0x00	; 0
    258c:	30 e0       	ldi	r19, 0x00	; 0
    258e:	40 e2       	ldi	r20, 0x20	; 32
    2590:	51 e4       	ldi	r21, 0x41	; 65
    2592:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2596:	dc 01       	movw	r26, r24
    2598:	cb 01       	movw	r24, r22
    259a:	8e 01       	movw	r16, r28
    259c:	05 5b       	subi	r16, 0xB5	; 181
    259e:	1f 4f       	sbci	r17, 0xFF	; 255
    25a0:	bc 01       	movw	r22, r24
    25a2:	cd 01       	movw	r24, r26
    25a4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    25a8:	dc 01       	movw	r26, r24
    25aa:	cb 01       	movw	r24, r22
    25ac:	f8 01       	movw	r30, r16
    25ae:	91 83       	std	Z+1, r25	; 0x01
    25b0:	80 83       	st	Z, r24
    25b2:	1f c0       	rjmp	.+62     	; 0x25f2 <FUN_LEFT+0x10f2>
    25b4:	fe 01       	movw	r30, r28
    25b6:	e7 5b       	subi	r30, 0xB7	; 183
    25b8:	ff 4f       	sbci	r31, 0xFF	; 255
    25ba:	88 ec       	ldi	r24, 0xC8	; 200
    25bc:	90 e0       	ldi	r25, 0x00	; 0
    25be:	91 83       	std	Z+1, r25	; 0x01
    25c0:	80 83       	st	Z, r24
    25c2:	fe 01       	movw	r30, r28
    25c4:	e7 5b       	subi	r30, 0xB7	; 183
    25c6:	ff 4f       	sbci	r31, 0xFF	; 255
    25c8:	80 81       	ld	r24, Z
    25ca:	91 81       	ldd	r25, Z+1	; 0x01
    25cc:	01 97       	sbiw	r24, 0x01	; 1
    25ce:	f1 f7       	brne	.-4      	; 0x25cc <FUN_LEFT+0x10cc>
    25d0:	fe 01       	movw	r30, r28
    25d2:	e7 5b       	subi	r30, 0xB7	; 183
    25d4:	ff 4f       	sbci	r31, 0xFF	; 255
    25d6:	91 83       	std	Z+1, r25	; 0x01
    25d8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    25da:	de 01       	movw	r26, r28
    25dc:	a5 5b       	subi	r26, 0xB5	; 181
    25de:	bf 4f       	sbci	r27, 0xFF	; 255
    25e0:	fe 01       	movw	r30, r28
    25e2:	e5 5b       	subi	r30, 0xB5	; 181
    25e4:	ff 4f       	sbci	r31, 0xFF	; 255
    25e6:	80 81       	ld	r24, Z
    25e8:	91 81       	ldd	r25, Z+1	; 0x01
    25ea:	01 97       	sbiw	r24, 0x01	; 1
    25ec:	11 96       	adiw	r26, 0x01	; 1
    25ee:	9c 93       	st	X, r25
    25f0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    25f2:	fe 01       	movw	r30, r28
    25f4:	e5 5b       	subi	r30, 0xB5	; 181
    25f6:	ff 4f       	sbci	r31, 0xFF	; 255
    25f8:	80 81       	ld	r24, Z
    25fa:	91 81       	ldd	r25, Z+1	; 0x01
    25fc:	00 97       	sbiw	r24, 0x00	; 0
    25fe:	d1 f6       	brne	.-76     	; 0x25b4 <FUN_LEFT+0x10b4>
    2600:	27 c0       	rjmp	.+78     	; 0x2650 <FUN_LEFT+0x1150>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2602:	8e 01       	movw	r16, r28
    2604:	05 5b       	subi	r16, 0xB5	; 181
    2606:	1f 4f       	sbci	r17, 0xFF	; 255
    2608:	fe 01       	movw	r30, r28
    260a:	e3 5b       	subi	r30, 0xB3	; 179
    260c:	ff 4f       	sbci	r31, 0xFF	; 255
    260e:	60 81       	ld	r22, Z
    2610:	71 81       	ldd	r23, Z+1	; 0x01
    2612:	82 81       	ldd	r24, Z+2	; 0x02
    2614:	93 81       	ldd	r25, Z+3	; 0x03
    2616:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    261a:	dc 01       	movw	r26, r24
    261c:	cb 01       	movw	r24, r22
    261e:	f8 01       	movw	r30, r16
    2620:	91 83       	std	Z+1, r25	; 0x01
    2622:	80 83       	st	Z, r24
    2624:	de 01       	movw	r26, r28
    2626:	a9 5b       	subi	r26, 0xB9	; 185
    2628:	bf 4f       	sbci	r27, 0xFF	; 255
    262a:	fe 01       	movw	r30, r28
    262c:	e5 5b       	subi	r30, 0xB5	; 181
    262e:	ff 4f       	sbci	r31, 0xFF	; 255
    2630:	80 81       	ld	r24, Z
    2632:	91 81       	ldd	r25, Z+1	; 0x01
    2634:	8d 93       	st	X+, r24
    2636:	9c 93       	st	X, r25
    2638:	fe 01       	movw	r30, r28
    263a:	e9 5b       	subi	r30, 0xB9	; 185
    263c:	ff 4f       	sbci	r31, 0xFF	; 255
    263e:	80 81       	ld	r24, Z
    2640:	91 81       	ldd	r25, Z+1	; 0x01
    2642:	01 97       	sbiw	r24, 0x01	; 1
    2644:	f1 f7       	brne	.-4      	; 0x2642 <FUN_LEFT+0x1142>
    2646:	fe 01       	movw	r30, r28
    2648:	e9 5b       	subi	r30, 0xB9	; 185
    264a:	ff 4f       	sbci	r31, 0xFF	; 255
    264c:	91 83       	std	Z+1, r25	; 0x01
    264e:	80 83       	st	Z, r24
_delay_ms(50);
DIO__CheckStatusSetPinValue(DIO__UINT8_PORTA,DIO__UINT8_PIN2,DIO__UINT8_LOW);
    2650:	80 e0       	ldi	r24, 0x00	; 0
    2652:	62 e0       	ldi	r22, 0x02	; 2
    2654:	40 e0       	ldi	r20, 0x00	; 0
    2656:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <DIO__CheckStatusSetPinValue>
    265a:	fe 01       	movw	r30, r28
    265c:	ed 5b       	subi	r30, 0xBD	; 189
    265e:	ff 4f       	sbci	r31, 0xFF	; 255
    2660:	80 e0       	ldi	r24, 0x00	; 0
    2662:	90 e0       	ldi	r25, 0x00	; 0
    2664:	a8 e4       	ldi	r26, 0x48	; 72
    2666:	b2 e4       	ldi	r27, 0x42	; 66
    2668:	80 83       	st	Z, r24
    266a:	91 83       	std	Z+1, r25	; 0x01
    266c:	a2 83       	std	Z+2, r26	; 0x02
    266e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2670:	8e 01       	movw	r16, r28
    2672:	01 5c       	subi	r16, 0xC1	; 193
    2674:	1f 4f       	sbci	r17, 0xFF	; 255
    2676:	fe 01       	movw	r30, r28
    2678:	ed 5b       	subi	r30, 0xBD	; 189
    267a:	ff 4f       	sbci	r31, 0xFF	; 255
    267c:	60 81       	ld	r22, Z
    267e:	71 81       	ldd	r23, Z+1	; 0x01
    2680:	82 81       	ldd	r24, Z+2	; 0x02
    2682:	93 81       	ldd	r25, Z+3	; 0x03
    2684:	20 e0       	ldi	r18, 0x00	; 0
    2686:	30 e0       	ldi	r19, 0x00	; 0
    2688:	4a ef       	ldi	r20, 0xFA	; 250
    268a:	54 e4       	ldi	r21, 0x44	; 68
    268c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2690:	dc 01       	movw	r26, r24
    2692:	cb 01       	movw	r24, r22
    2694:	f8 01       	movw	r30, r16
    2696:	80 83       	st	Z, r24
    2698:	91 83       	std	Z+1, r25	; 0x01
    269a:	a2 83       	std	Z+2, r26	; 0x02
    269c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    269e:	fe 01       	movw	r30, r28
    26a0:	ff 96       	adiw	r30, 0x3f	; 63
    26a2:	60 81       	ld	r22, Z
    26a4:	71 81       	ldd	r23, Z+1	; 0x01
    26a6:	82 81       	ldd	r24, Z+2	; 0x02
    26a8:	93 81       	ldd	r25, Z+3	; 0x03
    26aa:	20 e0       	ldi	r18, 0x00	; 0
    26ac:	30 e0       	ldi	r19, 0x00	; 0
    26ae:	40 e8       	ldi	r20, 0x80	; 128
    26b0:	5f e3       	ldi	r21, 0x3F	; 63
    26b2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    26b6:	88 23       	and	r24, r24
    26b8:	2c f4       	brge	.+10     	; 0x26c4 <FUN_LEFT+0x11c4>
		__ticks = 1;
    26ba:	81 e0       	ldi	r24, 0x01	; 1
    26bc:	90 e0       	ldi	r25, 0x00	; 0
    26be:	9e af       	std	Y+62, r25	; 0x3e
    26c0:	8d af       	std	Y+61, r24	; 0x3d
    26c2:	46 c0       	rjmp	.+140    	; 0x2750 <FUN_LEFT+0x1250>
	else if (__tmp > 65535)
    26c4:	fe 01       	movw	r30, r28
    26c6:	ff 96       	adiw	r30, 0x3f	; 63
    26c8:	60 81       	ld	r22, Z
    26ca:	71 81       	ldd	r23, Z+1	; 0x01
    26cc:	82 81       	ldd	r24, Z+2	; 0x02
    26ce:	93 81       	ldd	r25, Z+3	; 0x03
    26d0:	20 e0       	ldi	r18, 0x00	; 0
    26d2:	3f ef       	ldi	r19, 0xFF	; 255
    26d4:	4f e7       	ldi	r20, 0x7F	; 127
    26d6:	57 e4       	ldi	r21, 0x47	; 71
    26d8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    26dc:	18 16       	cp	r1, r24
    26de:	64 f5       	brge	.+88     	; 0x2738 <FUN_LEFT+0x1238>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    26e0:	fe 01       	movw	r30, r28
    26e2:	ed 5b       	subi	r30, 0xBD	; 189
    26e4:	ff 4f       	sbci	r31, 0xFF	; 255
    26e6:	60 81       	ld	r22, Z
    26e8:	71 81       	ldd	r23, Z+1	; 0x01
    26ea:	82 81       	ldd	r24, Z+2	; 0x02
    26ec:	93 81       	ldd	r25, Z+3	; 0x03
    26ee:	20 e0       	ldi	r18, 0x00	; 0
    26f0:	30 e0       	ldi	r19, 0x00	; 0
    26f2:	40 e2       	ldi	r20, 0x20	; 32
    26f4:	51 e4       	ldi	r21, 0x41	; 65
    26f6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    26fa:	dc 01       	movw	r26, r24
    26fc:	cb 01       	movw	r24, r22
    26fe:	bc 01       	movw	r22, r24
    2700:	cd 01       	movw	r24, r26
    2702:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2706:	dc 01       	movw	r26, r24
    2708:	cb 01       	movw	r24, r22
    270a:	9e af       	std	Y+62, r25	; 0x3e
    270c:	8d af       	std	Y+61, r24	; 0x3d
    270e:	0f c0       	rjmp	.+30     	; 0x272e <FUN_LEFT+0x122e>
    2710:	88 ec       	ldi	r24, 0xC8	; 200
    2712:	90 e0       	ldi	r25, 0x00	; 0
    2714:	9c af       	std	Y+60, r25	; 0x3c
    2716:	8b af       	std	Y+59, r24	; 0x3b
    2718:	8b ad       	ldd	r24, Y+59	; 0x3b
    271a:	9c ad       	ldd	r25, Y+60	; 0x3c
    271c:	01 97       	sbiw	r24, 0x01	; 1
    271e:	f1 f7       	brne	.-4      	; 0x271c <FUN_LEFT+0x121c>
    2720:	9c af       	std	Y+60, r25	; 0x3c
    2722:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2724:	8d ad       	ldd	r24, Y+61	; 0x3d
    2726:	9e ad       	ldd	r25, Y+62	; 0x3e
    2728:	01 97       	sbiw	r24, 0x01	; 1
    272a:	9e af       	std	Y+62, r25	; 0x3e
    272c:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    272e:	8d ad       	ldd	r24, Y+61	; 0x3d
    2730:	9e ad       	ldd	r25, Y+62	; 0x3e
    2732:	00 97       	sbiw	r24, 0x00	; 0
    2734:	69 f7       	brne	.-38     	; 0x2710 <FUN_LEFT+0x1210>
    2736:	16 c0       	rjmp	.+44     	; 0x2764 <FUN_LEFT+0x1264>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2738:	fe 01       	movw	r30, r28
    273a:	ff 96       	adiw	r30, 0x3f	; 63
    273c:	60 81       	ld	r22, Z
    273e:	71 81       	ldd	r23, Z+1	; 0x01
    2740:	82 81       	ldd	r24, Z+2	; 0x02
    2742:	93 81       	ldd	r25, Z+3	; 0x03
    2744:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2748:	dc 01       	movw	r26, r24
    274a:	cb 01       	movw	r24, r22
    274c:	9e af       	std	Y+62, r25	; 0x3e
    274e:	8d af       	std	Y+61, r24	; 0x3d
    2750:	8d ad       	ldd	r24, Y+61	; 0x3d
    2752:	9e ad       	ldd	r25, Y+62	; 0x3e
    2754:	9a af       	std	Y+58, r25	; 0x3a
    2756:	89 af       	std	Y+57, r24	; 0x39
    2758:	89 ad       	ldd	r24, Y+57	; 0x39
    275a:	9a ad       	ldd	r25, Y+58	; 0x3a
    275c:	01 97       	sbiw	r24, 0x01	; 1
    275e:	f1 f7       	brne	.-4      	; 0x275c <FUN_LEFT+0x125c>
    2760:	9a af       	std	Y+58, r25	; 0x3a
    2762:	89 af       	std	Y+57, r24	; 0x39
_delay_ms(50);
DIO__CheckStatusSetPinValue(DIO__UINT8_PORTA,DIO__UINT8_PIN1,DIO__UINT8_HIGH);
    2764:	80 e0       	ldi	r24, 0x00	; 0
    2766:	61 e0       	ldi	r22, 0x01	; 1
    2768:	41 e0       	ldi	r20, 0x01	; 1
    276a:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <DIO__CheckStatusSetPinValue>
    276e:	80 e0       	ldi	r24, 0x00	; 0
    2770:	90 e0       	ldi	r25, 0x00	; 0
    2772:	a8 e4       	ldi	r26, 0x48	; 72
    2774:	b2 e4       	ldi	r27, 0x42	; 66
    2776:	8d ab       	std	Y+53, r24	; 0x35
    2778:	9e ab       	std	Y+54, r25	; 0x36
    277a:	af ab       	std	Y+55, r26	; 0x37
    277c:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    277e:	6d a9       	ldd	r22, Y+53	; 0x35
    2780:	7e a9       	ldd	r23, Y+54	; 0x36
    2782:	8f a9       	ldd	r24, Y+55	; 0x37
    2784:	98 ad       	ldd	r25, Y+56	; 0x38
    2786:	20 e0       	ldi	r18, 0x00	; 0
    2788:	30 e0       	ldi	r19, 0x00	; 0
    278a:	4a ef       	ldi	r20, 0xFA	; 250
    278c:	54 e4       	ldi	r21, 0x44	; 68
    278e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2792:	dc 01       	movw	r26, r24
    2794:	cb 01       	movw	r24, r22
    2796:	89 ab       	std	Y+49, r24	; 0x31
    2798:	9a ab       	std	Y+50, r25	; 0x32
    279a:	ab ab       	std	Y+51, r26	; 0x33
    279c:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    279e:	69 a9       	ldd	r22, Y+49	; 0x31
    27a0:	7a a9       	ldd	r23, Y+50	; 0x32
    27a2:	8b a9       	ldd	r24, Y+51	; 0x33
    27a4:	9c a9       	ldd	r25, Y+52	; 0x34
    27a6:	20 e0       	ldi	r18, 0x00	; 0
    27a8:	30 e0       	ldi	r19, 0x00	; 0
    27aa:	40 e8       	ldi	r20, 0x80	; 128
    27ac:	5f e3       	ldi	r21, 0x3F	; 63
    27ae:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    27b2:	88 23       	and	r24, r24
    27b4:	2c f4       	brge	.+10     	; 0x27c0 <FUN_LEFT+0x12c0>
		__ticks = 1;
    27b6:	81 e0       	ldi	r24, 0x01	; 1
    27b8:	90 e0       	ldi	r25, 0x00	; 0
    27ba:	98 ab       	std	Y+48, r25	; 0x30
    27bc:	8f a7       	std	Y+47, r24	; 0x2f
    27be:	3f c0       	rjmp	.+126    	; 0x283e <FUN_LEFT+0x133e>
	else if (__tmp > 65535)
    27c0:	69 a9       	ldd	r22, Y+49	; 0x31
    27c2:	7a a9       	ldd	r23, Y+50	; 0x32
    27c4:	8b a9       	ldd	r24, Y+51	; 0x33
    27c6:	9c a9       	ldd	r25, Y+52	; 0x34
    27c8:	20 e0       	ldi	r18, 0x00	; 0
    27ca:	3f ef       	ldi	r19, 0xFF	; 255
    27cc:	4f e7       	ldi	r20, 0x7F	; 127
    27ce:	57 e4       	ldi	r21, 0x47	; 71
    27d0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    27d4:	18 16       	cp	r1, r24
    27d6:	4c f5       	brge	.+82     	; 0x282a <FUN_LEFT+0x132a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    27d8:	6d a9       	ldd	r22, Y+53	; 0x35
    27da:	7e a9       	ldd	r23, Y+54	; 0x36
    27dc:	8f a9       	ldd	r24, Y+55	; 0x37
    27de:	98 ad       	ldd	r25, Y+56	; 0x38
    27e0:	20 e0       	ldi	r18, 0x00	; 0
    27e2:	30 e0       	ldi	r19, 0x00	; 0
    27e4:	40 e2       	ldi	r20, 0x20	; 32
    27e6:	51 e4       	ldi	r21, 0x41	; 65
    27e8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    27ec:	dc 01       	movw	r26, r24
    27ee:	cb 01       	movw	r24, r22
    27f0:	bc 01       	movw	r22, r24
    27f2:	cd 01       	movw	r24, r26
    27f4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    27f8:	dc 01       	movw	r26, r24
    27fa:	cb 01       	movw	r24, r22
    27fc:	98 ab       	std	Y+48, r25	; 0x30
    27fe:	8f a7       	std	Y+47, r24	; 0x2f
    2800:	0f c0       	rjmp	.+30     	; 0x2820 <FUN_LEFT+0x1320>
    2802:	88 ec       	ldi	r24, 0xC8	; 200
    2804:	90 e0       	ldi	r25, 0x00	; 0
    2806:	9e a7       	std	Y+46, r25	; 0x2e
    2808:	8d a7       	std	Y+45, r24	; 0x2d
    280a:	8d a5       	ldd	r24, Y+45	; 0x2d
    280c:	9e a5       	ldd	r25, Y+46	; 0x2e
    280e:	01 97       	sbiw	r24, 0x01	; 1
    2810:	f1 f7       	brne	.-4      	; 0x280e <FUN_LEFT+0x130e>
    2812:	9e a7       	std	Y+46, r25	; 0x2e
    2814:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2816:	8f a5       	ldd	r24, Y+47	; 0x2f
    2818:	98 a9       	ldd	r25, Y+48	; 0x30
    281a:	01 97       	sbiw	r24, 0x01	; 1
    281c:	98 ab       	std	Y+48, r25	; 0x30
    281e:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2820:	8f a5       	ldd	r24, Y+47	; 0x2f
    2822:	98 a9       	ldd	r25, Y+48	; 0x30
    2824:	00 97       	sbiw	r24, 0x00	; 0
    2826:	69 f7       	brne	.-38     	; 0x2802 <FUN_LEFT+0x1302>
    2828:	14 c0       	rjmp	.+40     	; 0x2852 <FUN_LEFT+0x1352>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    282a:	69 a9       	ldd	r22, Y+49	; 0x31
    282c:	7a a9       	ldd	r23, Y+50	; 0x32
    282e:	8b a9       	ldd	r24, Y+51	; 0x33
    2830:	9c a9       	ldd	r25, Y+52	; 0x34
    2832:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2836:	dc 01       	movw	r26, r24
    2838:	cb 01       	movw	r24, r22
    283a:	98 ab       	std	Y+48, r25	; 0x30
    283c:	8f a7       	std	Y+47, r24	; 0x2f
    283e:	8f a5       	ldd	r24, Y+47	; 0x2f
    2840:	98 a9       	ldd	r25, Y+48	; 0x30
    2842:	9c a7       	std	Y+44, r25	; 0x2c
    2844:	8b a7       	std	Y+43, r24	; 0x2b
    2846:	8b a5       	ldd	r24, Y+43	; 0x2b
    2848:	9c a5       	ldd	r25, Y+44	; 0x2c
    284a:	01 97       	sbiw	r24, 0x01	; 1
    284c:	f1 f7       	brne	.-4      	; 0x284a <FUN_LEFT+0x134a>
    284e:	9c a7       	std	Y+44, r25	; 0x2c
    2850:	8b a7       	std	Y+43, r24	; 0x2b
_delay_ms(50);
DIO__CheckStatusSetPinValue(DIO__UINT8_PORTA,DIO__UINT8_PIN1,DIO__UINT8_LOW);
    2852:	80 e0       	ldi	r24, 0x00	; 0
    2854:	61 e0       	ldi	r22, 0x01	; 1
    2856:	40 e0       	ldi	r20, 0x00	; 0
    2858:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <DIO__CheckStatusSetPinValue>
    285c:	80 e0       	ldi	r24, 0x00	; 0
    285e:	90 e0       	ldi	r25, 0x00	; 0
    2860:	a8 e4       	ldi	r26, 0x48	; 72
    2862:	b2 e4       	ldi	r27, 0x42	; 66
    2864:	8f a3       	std	Y+39, r24	; 0x27
    2866:	98 a7       	std	Y+40, r25	; 0x28
    2868:	a9 a7       	std	Y+41, r26	; 0x29
    286a:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    286c:	6f a1       	ldd	r22, Y+39	; 0x27
    286e:	78 a5       	ldd	r23, Y+40	; 0x28
    2870:	89 a5       	ldd	r24, Y+41	; 0x29
    2872:	9a a5       	ldd	r25, Y+42	; 0x2a
    2874:	20 e0       	ldi	r18, 0x00	; 0
    2876:	30 e0       	ldi	r19, 0x00	; 0
    2878:	4a ef       	ldi	r20, 0xFA	; 250
    287a:	54 e4       	ldi	r21, 0x44	; 68
    287c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2880:	dc 01       	movw	r26, r24
    2882:	cb 01       	movw	r24, r22
    2884:	8b a3       	std	Y+35, r24	; 0x23
    2886:	9c a3       	std	Y+36, r25	; 0x24
    2888:	ad a3       	std	Y+37, r26	; 0x25
    288a:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    288c:	6b a1       	ldd	r22, Y+35	; 0x23
    288e:	7c a1       	ldd	r23, Y+36	; 0x24
    2890:	8d a1       	ldd	r24, Y+37	; 0x25
    2892:	9e a1       	ldd	r25, Y+38	; 0x26
    2894:	20 e0       	ldi	r18, 0x00	; 0
    2896:	30 e0       	ldi	r19, 0x00	; 0
    2898:	40 e8       	ldi	r20, 0x80	; 128
    289a:	5f e3       	ldi	r21, 0x3F	; 63
    289c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    28a0:	88 23       	and	r24, r24
    28a2:	2c f4       	brge	.+10     	; 0x28ae <FUN_LEFT+0x13ae>
		__ticks = 1;
    28a4:	81 e0       	ldi	r24, 0x01	; 1
    28a6:	90 e0       	ldi	r25, 0x00	; 0
    28a8:	9a a3       	std	Y+34, r25	; 0x22
    28aa:	89 a3       	std	Y+33, r24	; 0x21
    28ac:	3f c0       	rjmp	.+126    	; 0x292c <FUN_LEFT+0x142c>
	else if (__tmp > 65535)
    28ae:	6b a1       	ldd	r22, Y+35	; 0x23
    28b0:	7c a1       	ldd	r23, Y+36	; 0x24
    28b2:	8d a1       	ldd	r24, Y+37	; 0x25
    28b4:	9e a1       	ldd	r25, Y+38	; 0x26
    28b6:	20 e0       	ldi	r18, 0x00	; 0
    28b8:	3f ef       	ldi	r19, 0xFF	; 255
    28ba:	4f e7       	ldi	r20, 0x7F	; 127
    28bc:	57 e4       	ldi	r21, 0x47	; 71
    28be:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    28c2:	18 16       	cp	r1, r24
    28c4:	4c f5       	brge	.+82     	; 0x2918 <FUN_LEFT+0x1418>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    28c6:	6f a1       	ldd	r22, Y+39	; 0x27
    28c8:	78 a5       	ldd	r23, Y+40	; 0x28
    28ca:	89 a5       	ldd	r24, Y+41	; 0x29
    28cc:	9a a5       	ldd	r25, Y+42	; 0x2a
    28ce:	20 e0       	ldi	r18, 0x00	; 0
    28d0:	30 e0       	ldi	r19, 0x00	; 0
    28d2:	40 e2       	ldi	r20, 0x20	; 32
    28d4:	51 e4       	ldi	r21, 0x41	; 65
    28d6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    28da:	dc 01       	movw	r26, r24
    28dc:	cb 01       	movw	r24, r22
    28de:	bc 01       	movw	r22, r24
    28e0:	cd 01       	movw	r24, r26
    28e2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    28e6:	dc 01       	movw	r26, r24
    28e8:	cb 01       	movw	r24, r22
    28ea:	9a a3       	std	Y+34, r25	; 0x22
    28ec:	89 a3       	std	Y+33, r24	; 0x21
    28ee:	0f c0       	rjmp	.+30     	; 0x290e <FUN_LEFT+0x140e>
    28f0:	88 ec       	ldi	r24, 0xC8	; 200
    28f2:	90 e0       	ldi	r25, 0x00	; 0
    28f4:	98 a3       	std	Y+32, r25	; 0x20
    28f6:	8f 8f       	std	Y+31, r24	; 0x1f
    28f8:	8f 8d       	ldd	r24, Y+31	; 0x1f
    28fa:	98 a1       	ldd	r25, Y+32	; 0x20
    28fc:	01 97       	sbiw	r24, 0x01	; 1
    28fe:	f1 f7       	brne	.-4      	; 0x28fc <FUN_LEFT+0x13fc>
    2900:	98 a3       	std	Y+32, r25	; 0x20
    2902:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2904:	89 a1       	ldd	r24, Y+33	; 0x21
    2906:	9a a1       	ldd	r25, Y+34	; 0x22
    2908:	01 97       	sbiw	r24, 0x01	; 1
    290a:	9a a3       	std	Y+34, r25	; 0x22
    290c:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    290e:	89 a1       	ldd	r24, Y+33	; 0x21
    2910:	9a a1       	ldd	r25, Y+34	; 0x22
    2912:	00 97       	sbiw	r24, 0x00	; 0
    2914:	69 f7       	brne	.-38     	; 0x28f0 <FUN_LEFT+0x13f0>
    2916:	14 c0       	rjmp	.+40     	; 0x2940 <FUN_LEFT+0x1440>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2918:	6b a1       	ldd	r22, Y+35	; 0x23
    291a:	7c a1       	ldd	r23, Y+36	; 0x24
    291c:	8d a1       	ldd	r24, Y+37	; 0x25
    291e:	9e a1       	ldd	r25, Y+38	; 0x26
    2920:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2924:	dc 01       	movw	r26, r24
    2926:	cb 01       	movw	r24, r22
    2928:	9a a3       	std	Y+34, r25	; 0x22
    292a:	89 a3       	std	Y+33, r24	; 0x21
    292c:	89 a1       	ldd	r24, Y+33	; 0x21
    292e:	9a a1       	ldd	r25, Y+34	; 0x22
    2930:	9e 8f       	std	Y+30, r25	; 0x1e
    2932:	8d 8f       	std	Y+29, r24	; 0x1d
    2934:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2936:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2938:	01 97       	sbiw	r24, 0x01	; 1
    293a:	f1 f7       	brne	.-4      	; 0x2938 <FUN_LEFT+0x1438>
    293c:	9e 8f       	std	Y+30, r25	; 0x1e
    293e:	8d 8f       	std	Y+29, r24	; 0x1d
_delay_ms(50);
DIO__CheckStatusSetPinValue(DIO__UINT8_PORTA,DIO__UINT8_PIN0,DIO__UINT8_HIGH);
    2940:	80 e0       	ldi	r24, 0x00	; 0
    2942:	60 e0       	ldi	r22, 0x00	; 0
    2944:	41 e0       	ldi	r20, 0x01	; 1
    2946:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <DIO__CheckStatusSetPinValue>
    294a:	80 e0       	ldi	r24, 0x00	; 0
    294c:	90 e0       	ldi	r25, 0x00	; 0
    294e:	a8 e4       	ldi	r26, 0x48	; 72
    2950:	b2 e4       	ldi	r27, 0x42	; 66
    2952:	89 8f       	std	Y+25, r24	; 0x19
    2954:	9a 8f       	std	Y+26, r25	; 0x1a
    2956:	ab 8f       	std	Y+27, r26	; 0x1b
    2958:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    295a:	69 8d       	ldd	r22, Y+25	; 0x19
    295c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    295e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2960:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2962:	20 e0       	ldi	r18, 0x00	; 0
    2964:	30 e0       	ldi	r19, 0x00	; 0
    2966:	4a ef       	ldi	r20, 0xFA	; 250
    2968:	54 e4       	ldi	r21, 0x44	; 68
    296a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    296e:	dc 01       	movw	r26, r24
    2970:	cb 01       	movw	r24, r22
    2972:	8d 8b       	std	Y+21, r24	; 0x15
    2974:	9e 8b       	std	Y+22, r25	; 0x16
    2976:	af 8b       	std	Y+23, r26	; 0x17
    2978:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    297a:	6d 89       	ldd	r22, Y+21	; 0x15
    297c:	7e 89       	ldd	r23, Y+22	; 0x16
    297e:	8f 89       	ldd	r24, Y+23	; 0x17
    2980:	98 8d       	ldd	r25, Y+24	; 0x18
    2982:	20 e0       	ldi	r18, 0x00	; 0
    2984:	30 e0       	ldi	r19, 0x00	; 0
    2986:	40 e8       	ldi	r20, 0x80	; 128
    2988:	5f e3       	ldi	r21, 0x3F	; 63
    298a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    298e:	88 23       	and	r24, r24
    2990:	2c f4       	brge	.+10     	; 0x299c <FUN_LEFT+0x149c>
		__ticks = 1;
    2992:	81 e0       	ldi	r24, 0x01	; 1
    2994:	90 e0       	ldi	r25, 0x00	; 0
    2996:	9c 8b       	std	Y+20, r25	; 0x14
    2998:	8b 8b       	std	Y+19, r24	; 0x13
    299a:	3f c0       	rjmp	.+126    	; 0x2a1a <FUN_LEFT+0x151a>
	else if (__tmp > 65535)
    299c:	6d 89       	ldd	r22, Y+21	; 0x15
    299e:	7e 89       	ldd	r23, Y+22	; 0x16
    29a0:	8f 89       	ldd	r24, Y+23	; 0x17
    29a2:	98 8d       	ldd	r25, Y+24	; 0x18
    29a4:	20 e0       	ldi	r18, 0x00	; 0
    29a6:	3f ef       	ldi	r19, 0xFF	; 255
    29a8:	4f e7       	ldi	r20, 0x7F	; 127
    29aa:	57 e4       	ldi	r21, 0x47	; 71
    29ac:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    29b0:	18 16       	cp	r1, r24
    29b2:	4c f5       	brge	.+82     	; 0x2a06 <FUN_LEFT+0x1506>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    29b4:	69 8d       	ldd	r22, Y+25	; 0x19
    29b6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    29b8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    29ba:	9c 8d       	ldd	r25, Y+28	; 0x1c
    29bc:	20 e0       	ldi	r18, 0x00	; 0
    29be:	30 e0       	ldi	r19, 0x00	; 0
    29c0:	40 e2       	ldi	r20, 0x20	; 32
    29c2:	51 e4       	ldi	r21, 0x41	; 65
    29c4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    29c8:	dc 01       	movw	r26, r24
    29ca:	cb 01       	movw	r24, r22
    29cc:	bc 01       	movw	r22, r24
    29ce:	cd 01       	movw	r24, r26
    29d0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    29d4:	dc 01       	movw	r26, r24
    29d6:	cb 01       	movw	r24, r22
    29d8:	9c 8b       	std	Y+20, r25	; 0x14
    29da:	8b 8b       	std	Y+19, r24	; 0x13
    29dc:	0f c0       	rjmp	.+30     	; 0x29fc <FUN_LEFT+0x14fc>
    29de:	88 ec       	ldi	r24, 0xC8	; 200
    29e0:	90 e0       	ldi	r25, 0x00	; 0
    29e2:	9a 8b       	std	Y+18, r25	; 0x12
    29e4:	89 8b       	std	Y+17, r24	; 0x11
    29e6:	89 89       	ldd	r24, Y+17	; 0x11
    29e8:	9a 89       	ldd	r25, Y+18	; 0x12
    29ea:	01 97       	sbiw	r24, 0x01	; 1
    29ec:	f1 f7       	brne	.-4      	; 0x29ea <FUN_LEFT+0x14ea>
    29ee:	9a 8b       	std	Y+18, r25	; 0x12
    29f0:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    29f2:	8b 89       	ldd	r24, Y+19	; 0x13
    29f4:	9c 89       	ldd	r25, Y+20	; 0x14
    29f6:	01 97       	sbiw	r24, 0x01	; 1
    29f8:	9c 8b       	std	Y+20, r25	; 0x14
    29fa:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    29fc:	8b 89       	ldd	r24, Y+19	; 0x13
    29fe:	9c 89       	ldd	r25, Y+20	; 0x14
    2a00:	00 97       	sbiw	r24, 0x00	; 0
    2a02:	69 f7       	brne	.-38     	; 0x29de <FUN_LEFT+0x14de>
    2a04:	14 c0       	rjmp	.+40     	; 0x2a2e <FUN_LEFT+0x152e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2a06:	6d 89       	ldd	r22, Y+21	; 0x15
    2a08:	7e 89       	ldd	r23, Y+22	; 0x16
    2a0a:	8f 89       	ldd	r24, Y+23	; 0x17
    2a0c:	98 8d       	ldd	r25, Y+24	; 0x18
    2a0e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a12:	dc 01       	movw	r26, r24
    2a14:	cb 01       	movw	r24, r22
    2a16:	9c 8b       	std	Y+20, r25	; 0x14
    2a18:	8b 8b       	std	Y+19, r24	; 0x13
    2a1a:	8b 89       	ldd	r24, Y+19	; 0x13
    2a1c:	9c 89       	ldd	r25, Y+20	; 0x14
    2a1e:	98 8b       	std	Y+16, r25	; 0x10
    2a20:	8f 87       	std	Y+15, r24	; 0x0f
    2a22:	8f 85       	ldd	r24, Y+15	; 0x0f
    2a24:	98 89       	ldd	r25, Y+16	; 0x10
    2a26:	01 97       	sbiw	r24, 0x01	; 1
    2a28:	f1 f7       	brne	.-4      	; 0x2a26 <FUN_LEFT+0x1526>
    2a2a:	98 8b       	std	Y+16, r25	; 0x10
    2a2c:	8f 87       	std	Y+15, r24	; 0x0f
_delay_ms(50);
DIO__CheckStatusSetPinValue(DIO__UINT8_PORTA,DIO__UINT8_PIN0,DIO__UINT8_LOW);
    2a2e:	80 e0       	ldi	r24, 0x00	; 0
    2a30:	60 e0       	ldi	r22, 0x00	; 0
    2a32:	40 e0       	ldi	r20, 0x00	; 0
    2a34:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <DIO__CheckStatusSetPinValue>
    2a38:	80 e0       	ldi	r24, 0x00	; 0
    2a3a:	90 e0       	ldi	r25, 0x00	; 0
    2a3c:	a8 e4       	ldi	r26, 0x48	; 72
    2a3e:	b2 e4       	ldi	r27, 0x42	; 66
    2a40:	8b 87       	std	Y+11, r24	; 0x0b
    2a42:	9c 87       	std	Y+12, r25	; 0x0c
    2a44:	ad 87       	std	Y+13, r26	; 0x0d
    2a46:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2a48:	6b 85       	ldd	r22, Y+11	; 0x0b
    2a4a:	7c 85       	ldd	r23, Y+12	; 0x0c
    2a4c:	8d 85       	ldd	r24, Y+13	; 0x0d
    2a4e:	9e 85       	ldd	r25, Y+14	; 0x0e
    2a50:	20 e0       	ldi	r18, 0x00	; 0
    2a52:	30 e0       	ldi	r19, 0x00	; 0
    2a54:	4a ef       	ldi	r20, 0xFA	; 250
    2a56:	54 e4       	ldi	r21, 0x44	; 68
    2a58:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2a5c:	dc 01       	movw	r26, r24
    2a5e:	cb 01       	movw	r24, r22
    2a60:	8f 83       	std	Y+7, r24	; 0x07
    2a62:	98 87       	std	Y+8, r25	; 0x08
    2a64:	a9 87       	std	Y+9, r26	; 0x09
    2a66:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2a68:	6f 81       	ldd	r22, Y+7	; 0x07
    2a6a:	78 85       	ldd	r23, Y+8	; 0x08
    2a6c:	89 85       	ldd	r24, Y+9	; 0x09
    2a6e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2a70:	20 e0       	ldi	r18, 0x00	; 0
    2a72:	30 e0       	ldi	r19, 0x00	; 0
    2a74:	40 e8       	ldi	r20, 0x80	; 128
    2a76:	5f e3       	ldi	r21, 0x3F	; 63
    2a78:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2a7c:	88 23       	and	r24, r24
    2a7e:	2c f4       	brge	.+10     	; 0x2a8a <FUN_LEFT+0x158a>
		__ticks = 1;
    2a80:	81 e0       	ldi	r24, 0x01	; 1
    2a82:	90 e0       	ldi	r25, 0x00	; 0
    2a84:	9e 83       	std	Y+6, r25	; 0x06
    2a86:	8d 83       	std	Y+5, r24	; 0x05
    2a88:	3f c0       	rjmp	.+126    	; 0x2b08 <FUN_LEFT+0x1608>
	else if (__tmp > 65535)
    2a8a:	6f 81       	ldd	r22, Y+7	; 0x07
    2a8c:	78 85       	ldd	r23, Y+8	; 0x08
    2a8e:	89 85       	ldd	r24, Y+9	; 0x09
    2a90:	9a 85       	ldd	r25, Y+10	; 0x0a
    2a92:	20 e0       	ldi	r18, 0x00	; 0
    2a94:	3f ef       	ldi	r19, 0xFF	; 255
    2a96:	4f e7       	ldi	r20, 0x7F	; 127
    2a98:	57 e4       	ldi	r21, 0x47	; 71
    2a9a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2a9e:	18 16       	cp	r1, r24
    2aa0:	4c f5       	brge	.+82     	; 0x2af4 <FUN_LEFT+0x15f4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2aa2:	6b 85       	ldd	r22, Y+11	; 0x0b
    2aa4:	7c 85       	ldd	r23, Y+12	; 0x0c
    2aa6:	8d 85       	ldd	r24, Y+13	; 0x0d
    2aa8:	9e 85       	ldd	r25, Y+14	; 0x0e
    2aaa:	20 e0       	ldi	r18, 0x00	; 0
    2aac:	30 e0       	ldi	r19, 0x00	; 0
    2aae:	40 e2       	ldi	r20, 0x20	; 32
    2ab0:	51 e4       	ldi	r21, 0x41	; 65
    2ab2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2ab6:	dc 01       	movw	r26, r24
    2ab8:	cb 01       	movw	r24, r22
    2aba:	bc 01       	movw	r22, r24
    2abc:	cd 01       	movw	r24, r26
    2abe:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2ac2:	dc 01       	movw	r26, r24
    2ac4:	cb 01       	movw	r24, r22
    2ac6:	9e 83       	std	Y+6, r25	; 0x06
    2ac8:	8d 83       	std	Y+5, r24	; 0x05
    2aca:	0f c0       	rjmp	.+30     	; 0x2aea <FUN_LEFT+0x15ea>
    2acc:	88 ec       	ldi	r24, 0xC8	; 200
    2ace:	90 e0       	ldi	r25, 0x00	; 0
    2ad0:	9c 83       	std	Y+4, r25	; 0x04
    2ad2:	8b 83       	std	Y+3, r24	; 0x03
    2ad4:	8b 81       	ldd	r24, Y+3	; 0x03
    2ad6:	9c 81       	ldd	r25, Y+4	; 0x04
    2ad8:	01 97       	sbiw	r24, 0x01	; 1
    2ada:	f1 f7       	brne	.-4      	; 0x2ad8 <FUN_LEFT+0x15d8>
    2adc:	9c 83       	std	Y+4, r25	; 0x04
    2ade:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2ae0:	8d 81       	ldd	r24, Y+5	; 0x05
    2ae2:	9e 81       	ldd	r25, Y+6	; 0x06
    2ae4:	01 97       	sbiw	r24, 0x01	; 1
    2ae6:	9e 83       	std	Y+6, r25	; 0x06
    2ae8:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2aea:	8d 81       	ldd	r24, Y+5	; 0x05
    2aec:	9e 81       	ldd	r25, Y+6	; 0x06
    2aee:	00 97       	sbiw	r24, 0x00	; 0
    2af0:	69 f7       	brne	.-38     	; 0x2acc <FUN_LEFT+0x15cc>
    2af2:	14 c0       	rjmp	.+40     	; 0x2b1c <FUN_LEFT+0x161c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2af4:	6f 81       	ldd	r22, Y+7	; 0x07
    2af6:	78 85       	ldd	r23, Y+8	; 0x08
    2af8:	89 85       	ldd	r24, Y+9	; 0x09
    2afa:	9a 85       	ldd	r25, Y+10	; 0x0a
    2afc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2b00:	dc 01       	movw	r26, r24
    2b02:	cb 01       	movw	r24, r22
    2b04:	9e 83       	std	Y+6, r25	; 0x06
    2b06:	8d 83       	std	Y+5, r24	; 0x05
    2b08:	8d 81       	ldd	r24, Y+5	; 0x05
    2b0a:	9e 81       	ldd	r25, Y+6	; 0x06
    2b0c:	9a 83       	std	Y+2, r25	; 0x02
    2b0e:	89 83       	std	Y+1, r24	; 0x01
    2b10:	89 81       	ldd	r24, Y+1	; 0x01
    2b12:	9a 81       	ldd	r25, Y+2	; 0x02
    2b14:	01 97       	sbiw	r24, 0x01	; 1
    2b16:	f1 f7       	brne	.-4      	; 0x2b14 <FUN_LEFT+0x1614>
    2b18:	9a 83       	std	Y+2, r25	; 0x02
    2b1a:	89 83       	std	Y+1, r24	; 0x01
_delay_ms(50);

}
    2b1c:	c2 51       	subi	r28, 0x12	; 18
    2b1e:	df 4f       	sbci	r29, 0xFF	; 255
    2b20:	0f b6       	in	r0, 0x3f	; 63
    2b22:	f8 94       	cli
    2b24:	de bf       	out	0x3e, r29	; 62
    2b26:	0f be       	out	0x3f, r0	; 63
    2b28:	cd bf       	out	0x3d, r28	; 61
    2b2a:	cf 91       	pop	r28
    2b2c:	df 91       	pop	r29
    2b2e:	1f 91       	pop	r17
    2b30:	0f 91       	pop	r16
    2b32:	08 95       	ret

00002b34 <FUN_RIGHT>:

void FUN_RIGHT(void)
{
    2b34:	0f 93       	push	r16
    2b36:	1f 93       	push	r17
    2b38:	df 93       	push	r29
    2b3a:	cf 93       	push	r28
    2b3c:	cd b7       	in	r28, 0x3d	; 61
    2b3e:	de b7       	in	r29, 0x3e	; 62
    2b40:	c0 5e       	subi	r28, 0xE0	; 224
    2b42:	d0 40       	sbci	r29, 0x00	; 0
    2b44:	0f b6       	in	r0, 0x3f	; 63
    2b46:	f8 94       	cli
    2b48:	de bf       	out	0x3e, r29	; 62
    2b4a:	0f be       	out	0x3f, r0	; 63
    2b4c:	cd bf       	out	0x3d, r28	; 61

	DIO__CheckStatusSetPinValue(DIO__UINT8_PORTA,DIO__UINT8_PIN0,DIO__UINT8_HIGH);
    2b4e:	80 e0       	ldi	r24, 0x00	; 0
    2b50:	60 e0       	ldi	r22, 0x00	; 0
    2b52:	41 e0       	ldi	r20, 0x01	; 1
    2b54:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <DIO__CheckStatusSetPinValue>
    2b58:	fe 01       	movw	r30, r28
    2b5a:	e3 52       	subi	r30, 0x23	; 35
    2b5c:	ff 4f       	sbci	r31, 0xFF	; 255
    2b5e:	80 e0       	ldi	r24, 0x00	; 0
    2b60:	90 e0       	ldi	r25, 0x00	; 0
    2b62:	a8 e4       	ldi	r26, 0x48	; 72
    2b64:	b2 e4       	ldi	r27, 0x42	; 66
    2b66:	80 83       	st	Z, r24
    2b68:	91 83       	std	Z+1, r25	; 0x01
    2b6a:	a2 83       	std	Z+2, r26	; 0x02
    2b6c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2b6e:	8e 01       	movw	r16, r28
    2b70:	07 52       	subi	r16, 0x27	; 39
    2b72:	1f 4f       	sbci	r17, 0xFF	; 255
    2b74:	fe 01       	movw	r30, r28
    2b76:	e3 52       	subi	r30, 0x23	; 35
    2b78:	ff 4f       	sbci	r31, 0xFF	; 255
    2b7a:	60 81       	ld	r22, Z
    2b7c:	71 81       	ldd	r23, Z+1	; 0x01
    2b7e:	82 81       	ldd	r24, Z+2	; 0x02
    2b80:	93 81       	ldd	r25, Z+3	; 0x03
    2b82:	20 e0       	ldi	r18, 0x00	; 0
    2b84:	30 e0       	ldi	r19, 0x00	; 0
    2b86:	4a ef       	ldi	r20, 0xFA	; 250
    2b88:	54 e4       	ldi	r21, 0x44	; 68
    2b8a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b8e:	dc 01       	movw	r26, r24
    2b90:	cb 01       	movw	r24, r22
    2b92:	f8 01       	movw	r30, r16
    2b94:	80 83       	st	Z, r24
    2b96:	91 83       	std	Z+1, r25	; 0x01
    2b98:	a2 83       	std	Z+2, r26	; 0x02
    2b9a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2b9c:	fe 01       	movw	r30, r28
    2b9e:	e7 52       	subi	r30, 0x27	; 39
    2ba0:	ff 4f       	sbci	r31, 0xFF	; 255
    2ba2:	60 81       	ld	r22, Z
    2ba4:	71 81       	ldd	r23, Z+1	; 0x01
    2ba6:	82 81       	ldd	r24, Z+2	; 0x02
    2ba8:	93 81       	ldd	r25, Z+3	; 0x03
    2baa:	20 e0       	ldi	r18, 0x00	; 0
    2bac:	30 e0       	ldi	r19, 0x00	; 0
    2bae:	40 e8       	ldi	r20, 0x80	; 128
    2bb0:	5f e3       	ldi	r21, 0x3F	; 63
    2bb2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2bb6:	88 23       	and	r24, r24
    2bb8:	44 f4       	brge	.+16     	; 0x2bca <FUN_RIGHT+0x96>
		__ticks = 1;
    2bba:	fe 01       	movw	r30, r28
    2bbc:	e9 52       	subi	r30, 0x29	; 41
    2bbe:	ff 4f       	sbci	r31, 0xFF	; 255
    2bc0:	81 e0       	ldi	r24, 0x01	; 1
    2bc2:	90 e0       	ldi	r25, 0x00	; 0
    2bc4:	91 83       	std	Z+1, r25	; 0x01
    2bc6:	80 83       	st	Z, r24
    2bc8:	64 c0       	rjmp	.+200    	; 0x2c92 <FUN_RIGHT+0x15e>
	else if (__tmp > 65535)
    2bca:	fe 01       	movw	r30, r28
    2bcc:	e7 52       	subi	r30, 0x27	; 39
    2bce:	ff 4f       	sbci	r31, 0xFF	; 255
    2bd0:	60 81       	ld	r22, Z
    2bd2:	71 81       	ldd	r23, Z+1	; 0x01
    2bd4:	82 81       	ldd	r24, Z+2	; 0x02
    2bd6:	93 81       	ldd	r25, Z+3	; 0x03
    2bd8:	20 e0       	ldi	r18, 0x00	; 0
    2bda:	3f ef       	ldi	r19, 0xFF	; 255
    2bdc:	4f e7       	ldi	r20, 0x7F	; 127
    2bde:	57 e4       	ldi	r21, 0x47	; 71
    2be0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2be4:	18 16       	cp	r1, r24
    2be6:	0c f0       	brlt	.+2      	; 0x2bea <FUN_RIGHT+0xb6>
    2be8:	43 c0       	rjmp	.+134    	; 0x2c70 <FUN_RIGHT+0x13c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2bea:	fe 01       	movw	r30, r28
    2bec:	e3 52       	subi	r30, 0x23	; 35
    2bee:	ff 4f       	sbci	r31, 0xFF	; 255
    2bf0:	60 81       	ld	r22, Z
    2bf2:	71 81       	ldd	r23, Z+1	; 0x01
    2bf4:	82 81       	ldd	r24, Z+2	; 0x02
    2bf6:	93 81       	ldd	r25, Z+3	; 0x03
    2bf8:	20 e0       	ldi	r18, 0x00	; 0
    2bfa:	30 e0       	ldi	r19, 0x00	; 0
    2bfc:	40 e2       	ldi	r20, 0x20	; 32
    2bfe:	51 e4       	ldi	r21, 0x41	; 65
    2c00:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2c04:	dc 01       	movw	r26, r24
    2c06:	cb 01       	movw	r24, r22
    2c08:	8e 01       	movw	r16, r28
    2c0a:	09 52       	subi	r16, 0x29	; 41
    2c0c:	1f 4f       	sbci	r17, 0xFF	; 255
    2c0e:	bc 01       	movw	r22, r24
    2c10:	cd 01       	movw	r24, r26
    2c12:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2c16:	dc 01       	movw	r26, r24
    2c18:	cb 01       	movw	r24, r22
    2c1a:	f8 01       	movw	r30, r16
    2c1c:	91 83       	std	Z+1, r25	; 0x01
    2c1e:	80 83       	st	Z, r24
    2c20:	1f c0       	rjmp	.+62     	; 0x2c60 <FUN_RIGHT+0x12c>
    2c22:	fe 01       	movw	r30, r28
    2c24:	eb 52       	subi	r30, 0x2B	; 43
    2c26:	ff 4f       	sbci	r31, 0xFF	; 255
    2c28:	88 ec       	ldi	r24, 0xC8	; 200
    2c2a:	90 e0       	ldi	r25, 0x00	; 0
    2c2c:	91 83       	std	Z+1, r25	; 0x01
    2c2e:	80 83       	st	Z, r24
    2c30:	fe 01       	movw	r30, r28
    2c32:	eb 52       	subi	r30, 0x2B	; 43
    2c34:	ff 4f       	sbci	r31, 0xFF	; 255
    2c36:	80 81       	ld	r24, Z
    2c38:	91 81       	ldd	r25, Z+1	; 0x01
    2c3a:	01 97       	sbiw	r24, 0x01	; 1
    2c3c:	f1 f7       	brne	.-4      	; 0x2c3a <FUN_RIGHT+0x106>
    2c3e:	fe 01       	movw	r30, r28
    2c40:	eb 52       	subi	r30, 0x2B	; 43
    2c42:	ff 4f       	sbci	r31, 0xFF	; 255
    2c44:	91 83       	std	Z+1, r25	; 0x01
    2c46:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2c48:	de 01       	movw	r26, r28
    2c4a:	a9 52       	subi	r26, 0x29	; 41
    2c4c:	bf 4f       	sbci	r27, 0xFF	; 255
    2c4e:	fe 01       	movw	r30, r28
    2c50:	e9 52       	subi	r30, 0x29	; 41
    2c52:	ff 4f       	sbci	r31, 0xFF	; 255
    2c54:	80 81       	ld	r24, Z
    2c56:	91 81       	ldd	r25, Z+1	; 0x01
    2c58:	01 97       	sbiw	r24, 0x01	; 1
    2c5a:	11 96       	adiw	r26, 0x01	; 1
    2c5c:	9c 93       	st	X, r25
    2c5e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2c60:	fe 01       	movw	r30, r28
    2c62:	e9 52       	subi	r30, 0x29	; 41
    2c64:	ff 4f       	sbci	r31, 0xFF	; 255
    2c66:	80 81       	ld	r24, Z
    2c68:	91 81       	ldd	r25, Z+1	; 0x01
    2c6a:	00 97       	sbiw	r24, 0x00	; 0
    2c6c:	d1 f6       	brne	.-76     	; 0x2c22 <FUN_RIGHT+0xee>
    2c6e:	27 c0       	rjmp	.+78     	; 0x2cbe <FUN_RIGHT+0x18a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2c70:	8e 01       	movw	r16, r28
    2c72:	09 52       	subi	r16, 0x29	; 41
    2c74:	1f 4f       	sbci	r17, 0xFF	; 255
    2c76:	fe 01       	movw	r30, r28
    2c78:	e7 52       	subi	r30, 0x27	; 39
    2c7a:	ff 4f       	sbci	r31, 0xFF	; 255
    2c7c:	60 81       	ld	r22, Z
    2c7e:	71 81       	ldd	r23, Z+1	; 0x01
    2c80:	82 81       	ldd	r24, Z+2	; 0x02
    2c82:	93 81       	ldd	r25, Z+3	; 0x03
    2c84:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2c88:	dc 01       	movw	r26, r24
    2c8a:	cb 01       	movw	r24, r22
    2c8c:	f8 01       	movw	r30, r16
    2c8e:	91 83       	std	Z+1, r25	; 0x01
    2c90:	80 83       	st	Z, r24
    2c92:	de 01       	movw	r26, r28
    2c94:	ad 52       	subi	r26, 0x2D	; 45
    2c96:	bf 4f       	sbci	r27, 0xFF	; 255
    2c98:	fe 01       	movw	r30, r28
    2c9a:	e9 52       	subi	r30, 0x29	; 41
    2c9c:	ff 4f       	sbci	r31, 0xFF	; 255
    2c9e:	80 81       	ld	r24, Z
    2ca0:	91 81       	ldd	r25, Z+1	; 0x01
    2ca2:	8d 93       	st	X+, r24
    2ca4:	9c 93       	st	X, r25
    2ca6:	fe 01       	movw	r30, r28
    2ca8:	ed 52       	subi	r30, 0x2D	; 45
    2caa:	ff 4f       	sbci	r31, 0xFF	; 255
    2cac:	80 81       	ld	r24, Z
    2cae:	91 81       	ldd	r25, Z+1	; 0x01
    2cb0:	01 97       	sbiw	r24, 0x01	; 1
    2cb2:	f1 f7       	brne	.-4      	; 0x2cb0 <FUN_RIGHT+0x17c>
    2cb4:	fe 01       	movw	r30, r28
    2cb6:	ed 52       	subi	r30, 0x2D	; 45
    2cb8:	ff 4f       	sbci	r31, 0xFF	; 255
    2cba:	91 83       	std	Z+1, r25	; 0x01
    2cbc:	80 83       	st	Z, r24
	_delay_ms(50);
	DIO__CheckStatusSetPinValue(DIO__UINT8_PORTA,DIO__UINT8_PIN0,DIO__UINT8_LOW);
    2cbe:	80 e0       	ldi	r24, 0x00	; 0
    2cc0:	60 e0       	ldi	r22, 0x00	; 0
    2cc2:	40 e0       	ldi	r20, 0x00	; 0
    2cc4:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <DIO__CheckStatusSetPinValue>
    2cc8:	fe 01       	movw	r30, r28
    2cca:	e1 53       	subi	r30, 0x31	; 49
    2ccc:	ff 4f       	sbci	r31, 0xFF	; 255
    2cce:	80 e0       	ldi	r24, 0x00	; 0
    2cd0:	90 e0       	ldi	r25, 0x00	; 0
    2cd2:	a8 e4       	ldi	r26, 0x48	; 72
    2cd4:	b2 e4       	ldi	r27, 0x42	; 66
    2cd6:	80 83       	st	Z, r24
    2cd8:	91 83       	std	Z+1, r25	; 0x01
    2cda:	a2 83       	std	Z+2, r26	; 0x02
    2cdc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2cde:	8e 01       	movw	r16, r28
    2ce0:	05 53       	subi	r16, 0x35	; 53
    2ce2:	1f 4f       	sbci	r17, 0xFF	; 255
    2ce4:	fe 01       	movw	r30, r28
    2ce6:	e1 53       	subi	r30, 0x31	; 49
    2ce8:	ff 4f       	sbci	r31, 0xFF	; 255
    2cea:	60 81       	ld	r22, Z
    2cec:	71 81       	ldd	r23, Z+1	; 0x01
    2cee:	82 81       	ldd	r24, Z+2	; 0x02
    2cf0:	93 81       	ldd	r25, Z+3	; 0x03
    2cf2:	20 e0       	ldi	r18, 0x00	; 0
    2cf4:	30 e0       	ldi	r19, 0x00	; 0
    2cf6:	4a ef       	ldi	r20, 0xFA	; 250
    2cf8:	54 e4       	ldi	r21, 0x44	; 68
    2cfa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2cfe:	dc 01       	movw	r26, r24
    2d00:	cb 01       	movw	r24, r22
    2d02:	f8 01       	movw	r30, r16
    2d04:	80 83       	st	Z, r24
    2d06:	91 83       	std	Z+1, r25	; 0x01
    2d08:	a2 83       	std	Z+2, r26	; 0x02
    2d0a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2d0c:	fe 01       	movw	r30, r28
    2d0e:	e5 53       	subi	r30, 0x35	; 53
    2d10:	ff 4f       	sbci	r31, 0xFF	; 255
    2d12:	60 81       	ld	r22, Z
    2d14:	71 81       	ldd	r23, Z+1	; 0x01
    2d16:	82 81       	ldd	r24, Z+2	; 0x02
    2d18:	93 81       	ldd	r25, Z+3	; 0x03
    2d1a:	20 e0       	ldi	r18, 0x00	; 0
    2d1c:	30 e0       	ldi	r19, 0x00	; 0
    2d1e:	40 e8       	ldi	r20, 0x80	; 128
    2d20:	5f e3       	ldi	r21, 0x3F	; 63
    2d22:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2d26:	88 23       	and	r24, r24
    2d28:	44 f4       	brge	.+16     	; 0x2d3a <FUN_RIGHT+0x206>
		__ticks = 1;
    2d2a:	fe 01       	movw	r30, r28
    2d2c:	e7 53       	subi	r30, 0x37	; 55
    2d2e:	ff 4f       	sbci	r31, 0xFF	; 255
    2d30:	81 e0       	ldi	r24, 0x01	; 1
    2d32:	90 e0       	ldi	r25, 0x00	; 0
    2d34:	91 83       	std	Z+1, r25	; 0x01
    2d36:	80 83       	st	Z, r24
    2d38:	64 c0       	rjmp	.+200    	; 0x2e02 <FUN_RIGHT+0x2ce>
	else if (__tmp > 65535)
    2d3a:	fe 01       	movw	r30, r28
    2d3c:	e5 53       	subi	r30, 0x35	; 53
    2d3e:	ff 4f       	sbci	r31, 0xFF	; 255
    2d40:	60 81       	ld	r22, Z
    2d42:	71 81       	ldd	r23, Z+1	; 0x01
    2d44:	82 81       	ldd	r24, Z+2	; 0x02
    2d46:	93 81       	ldd	r25, Z+3	; 0x03
    2d48:	20 e0       	ldi	r18, 0x00	; 0
    2d4a:	3f ef       	ldi	r19, 0xFF	; 255
    2d4c:	4f e7       	ldi	r20, 0x7F	; 127
    2d4e:	57 e4       	ldi	r21, 0x47	; 71
    2d50:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2d54:	18 16       	cp	r1, r24
    2d56:	0c f0       	brlt	.+2      	; 0x2d5a <FUN_RIGHT+0x226>
    2d58:	43 c0       	rjmp	.+134    	; 0x2de0 <FUN_RIGHT+0x2ac>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2d5a:	fe 01       	movw	r30, r28
    2d5c:	e1 53       	subi	r30, 0x31	; 49
    2d5e:	ff 4f       	sbci	r31, 0xFF	; 255
    2d60:	60 81       	ld	r22, Z
    2d62:	71 81       	ldd	r23, Z+1	; 0x01
    2d64:	82 81       	ldd	r24, Z+2	; 0x02
    2d66:	93 81       	ldd	r25, Z+3	; 0x03
    2d68:	20 e0       	ldi	r18, 0x00	; 0
    2d6a:	30 e0       	ldi	r19, 0x00	; 0
    2d6c:	40 e2       	ldi	r20, 0x20	; 32
    2d6e:	51 e4       	ldi	r21, 0x41	; 65
    2d70:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2d74:	dc 01       	movw	r26, r24
    2d76:	cb 01       	movw	r24, r22
    2d78:	8e 01       	movw	r16, r28
    2d7a:	07 53       	subi	r16, 0x37	; 55
    2d7c:	1f 4f       	sbci	r17, 0xFF	; 255
    2d7e:	bc 01       	movw	r22, r24
    2d80:	cd 01       	movw	r24, r26
    2d82:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d86:	dc 01       	movw	r26, r24
    2d88:	cb 01       	movw	r24, r22
    2d8a:	f8 01       	movw	r30, r16
    2d8c:	91 83       	std	Z+1, r25	; 0x01
    2d8e:	80 83       	st	Z, r24
    2d90:	1f c0       	rjmp	.+62     	; 0x2dd0 <FUN_RIGHT+0x29c>
    2d92:	fe 01       	movw	r30, r28
    2d94:	e9 53       	subi	r30, 0x39	; 57
    2d96:	ff 4f       	sbci	r31, 0xFF	; 255
    2d98:	88 ec       	ldi	r24, 0xC8	; 200
    2d9a:	90 e0       	ldi	r25, 0x00	; 0
    2d9c:	91 83       	std	Z+1, r25	; 0x01
    2d9e:	80 83       	st	Z, r24
    2da0:	fe 01       	movw	r30, r28
    2da2:	e9 53       	subi	r30, 0x39	; 57
    2da4:	ff 4f       	sbci	r31, 0xFF	; 255
    2da6:	80 81       	ld	r24, Z
    2da8:	91 81       	ldd	r25, Z+1	; 0x01
    2daa:	01 97       	sbiw	r24, 0x01	; 1
    2dac:	f1 f7       	brne	.-4      	; 0x2daa <FUN_RIGHT+0x276>
    2dae:	fe 01       	movw	r30, r28
    2db0:	e9 53       	subi	r30, 0x39	; 57
    2db2:	ff 4f       	sbci	r31, 0xFF	; 255
    2db4:	91 83       	std	Z+1, r25	; 0x01
    2db6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2db8:	de 01       	movw	r26, r28
    2dba:	a7 53       	subi	r26, 0x37	; 55
    2dbc:	bf 4f       	sbci	r27, 0xFF	; 255
    2dbe:	fe 01       	movw	r30, r28
    2dc0:	e7 53       	subi	r30, 0x37	; 55
    2dc2:	ff 4f       	sbci	r31, 0xFF	; 255
    2dc4:	80 81       	ld	r24, Z
    2dc6:	91 81       	ldd	r25, Z+1	; 0x01
    2dc8:	01 97       	sbiw	r24, 0x01	; 1
    2dca:	11 96       	adiw	r26, 0x01	; 1
    2dcc:	9c 93       	st	X, r25
    2dce:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2dd0:	fe 01       	movw	r30, r28
    2dd2:	e7 53       	subi	r30, 0x37	; 55
    2dd4:	ff 4f       	sbci	r31, 0xFF	; 255
    2dd6:	80 81       	ld	r24, Z
    2dd8:	91 81       	ldd	r25, Z+1	; 0x01
    2dda:	00 97       	sbiw	r24, 0x00	; 0
    2ddc:	d1 f6       	brne	.-76     	; 0x2d92 <FUN_RIGHT+0x25e>
    2dde:	27 c0       	rjmp	.+78     	; 0x2e2e <FUN_RIGHT+0x2fa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2de0:	8e 01       	movw	r16, r28
    2de2:	07 53       	subi	r16, 0x37	; 55
    2de4:	1f 4f       	sbci	r17, 0xFF	; 255
    2de6:	fe 01       	movw	r30, r28
    2de8:	e5 53       	subi	r30, 0x35	; 53
    2dea:	ff 4f       	sbci	r31, 0xFF	; 255
    2dec:	60 81       	ld	r22, Z
    2dee:	71 81       	ldd	r23, Z+1	; 0x01
    2df0:	82 81       	ldd	r24, Z+2	; 0x02
    2df2:	93 81       	ldd	r25, Z+3	; 0x03
    2df4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2df8:	dc 01       	movw	r26, r24
    2dfa:	cb 01       	movw	r24, r22
    2dfc:	f8 01       	movw	r30, r16
    2dfe:	91 83       	std	Z+1, r25	; 0x01
    2e00:	80 83       	st	Z, r24
    2e02:	de 01       	movw	r26, r28
    2e04:	ab 53       	subi	r26, 0x3B	; 59
    2e06:	bf 4f       	sbci	r27, 0xFF	; 255
    2e08:	fe 01       	movw	r30, r28
    2e0a:	e7 53       	subi	r30, 0x37	; 55
    2e0c:	ff 4f       	sbci	r31, 0xFF	; 255
    2e0e:	80 81       	ld	r24, Z
    2e10:	91 81       	ldd	r25, Z+1	; 0x01
    2e12:	8d 93       	st	X+, r24
    2e14:	9c 93       	st	X, r25
    2e16:	fe 01       	movw	r30, r28
    2e18:	eb 53       	subi	r30, 0x3B	; 59
    2e1a:	ff 4f       	sbci	r31, 0xFF	; 255
    2e1c:	80 81       	ld	r24, Z
    2e1e:	91 81       	ldd	r25, Z+1	; 0x01
    2e20:	01 97       	sbiw	r24, 0x01	; 1
    2e22:	f1 f7       	brne	.-4      	; 0x2e20 <FUN_RIGHT+0x2ec>
    2e24:	fe 01       	movw	r30, r28
    2e26:	eb 53       	subi	r30, 0x3B	; 59
    2e28:	ff 4f       	sbci	r31, 0xFF	; 255
    2e2a:	91 83       	std	Z+1, r25	; 0x01
    2e2c:	80 83       	st	Z, r24
	_delay_ms(50);
	DIO__CheckStatusSetPinValue(DIO__UINT8_PORTA,DIO__UINT8_PIN1,DIO__UINT8_HIGH);
    2e2e:	80 e0       	ldi	r24, 0x00	; 0
    2e30:	61 e0       	ldi	r22, 0x01	; 1
    2e32:	41 e0       	ldi	r20, 0x01	; 1
    2e34:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <DIO__CheckStatusSetPinValue>
    2e38:	fe 01       	movw	r30, r28
    2e3a:	ef 53       	subi	r30, 0x3F	; 63
    2e3c:	ff 4f       	sbci	r31, 0xFF	; 255
    2e3e:	80 e0       	ldi	r24, 0x00	; 0
    2e40:	90 e0       	ldi	r25, 0x00	; 0
    2e42:	a8 e4       	ldi	r26, 0x48	; 72
    2e44:	b2 e4       	ldi	r27, 0x42	; 66
    2e46:	80 83       	st	Z, r24
    2e48:	91 83       	std	Z+1, r25	; 0x01
    2e4a:	a2 83       	std	Z+2, r26	; 0x02
    2e4c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2e4e:	8e 01       	movw	r16, r28
    2e50:	03 54       	subi	r16, 0x43	; 67
    2e52:	1f 4f       	sbci	r17, 0xFF	; 255
    2e54:	fe 01       	movw	r30, r28
    2e56:	ef 53       	subi	r30, 0x3F	; 63
    2e58:	ff 4f       	sbci	r31, 0xFF	; 255
    2e5a:	60 81       	ld	r22, Z
    2e5c:	71 81       	ldd	r23, Z+1	; 0x01
    2e5e:	82 81       	ldd	r24, Z+2	; 0x02
    2e60:	93 81       	ldd	r25, Z+3	; 0x03
    2e62:	20 e0       	ldi	r18, 0x00	; 0
    2e64:	30 e0       	ldi	r19, 0x00	; 0
    2e66:	4a ef       	ldi	r20, 0xFA	; 250
    2e68:	54 e4       	ldi	r21, 0x44	; 68
    2e6a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2e6e:	dc 01       	movw	r26, r24
    2e70:	cb 01       	movw	r24, r22
    2e72:	f8 01       	movw	r30, r16
    2e74:	80 83       	st	Z, r24
    2e76:	91 83       	std	Z+1, r25	; 0x01
    2e78:	a2 83       	std	Z+2, r26	; 0x02
    2e7a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2e7c:	fe 01       	movw	r30, r28
    2e7e:	e3 54       	subi	r30, 0x43	; 67
    2e80:	ff 4f       	sbci	r31, 0xFF	; 255
    2e82:	60 81       	ld	r22, Z
    2e84:	71 81       	ldd	r23, Z+1	; 0x01
    2e86:	82 81       	ldd	r24, Z+2	; 0x02
    2e88:	93 81       	ldd	r25, Z+3	; 0x03
    2e8a:	20 e0       	ldi	r18, 0x00	; 0
    2e8c:	30 e0       	ldi	r19, 0x00	; 0
    2e8e:	40 e8       	ldi	r20, 0x80	; 128
    2e90:	5f e3       	ldi	r21, 0x3F	; 63
    2e92:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2e96:	88 23       	and	r24, r24
    2e98:	44 f4       	brge	.+16     	; 0x2eaa <FUN_RIGHT+0x376>
		__ticks = 1;
    2e9a:	fe 01       	movw	r30, r28
    2e9c:	e5 54       	subi	r30, 0x45	; 69
    2e9e:	ff 4f       	sbci	r31, 0xFF	; 255
    2ea0:	81 e0       	ldi	r24, 0x01	; 1
    2ea2:	90 e0       	ldi	r25, 0x00	; 0
    2ea4:	91 83       	std	Z+1, r25	; 0x01
    2ea6:	80 83       	st	Z, r24
    2ea8:	64 c0       	rjmp	.+200    	; 0x2f72 <FUN_RIGHT+0x43e>
	else if (__tmp > 65535)
    2eaa:	fe 01       	movw	r30, r28
    2eac:	e3 54       	subi	r30, 0x43	; 67
    2eae:	ff 4f       	sbci	r31, 0xFF	; 255
    2eb0:	60 81       	ld	r22, Z
    2eb2:	71 81       	ldd	r23, Z+1	; 0x01
    2eb4:	82 81       	ldd	r24, Z+2	; 0x02
    2eb6:	93 81       	ldd	r25, Z+3	; 0x03
    2eb8:	20 e0       	ldi	r18, 0x00	; 0
    2eba:	3f ef       	ldi	r19, 0xFF	; 255
    2ebc:	4f e7       	ldi	r20, 0x7F	; 127
    2ebe:	57 e4       	ldi	r21, 0x47	; 71
    2ec0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2ec4:	18 16       	cp	r1, r24
    2ec6:	0c f0       	brlt	.+2      	; 0x2eca <FUN_RIGHT+0x396>
    2ec8:	43 c0       	rjmp	.+134    	; 0x2f50 <FUN_RIGHT+0x41c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2eca:	fe 01       	movw	r30, r28
    2ecc:	ef 53       	subi	r30, 0x3F	; 63
    2ece:	ff 4f       	sbci	r31, 0xFF	; 255
    2ed0:	60 81       	ld	r22, Z
    2ed2:	71 81       	ldd	r23, Z+1	; 0x01
    2ed4:	82 81       	ldd	r24, Z+2	; 0x02
    2ed6:	93 81       	ldd	r25, Z+3	; 0x03
    2ed8:	20 e0       	ldi	r18, 0x00	; 0
    2eda:	30 e0       	ldi	r19, 0x00	; 0
    2edc:	40 e2       	ldi	r20, 0x20	; 32
    2ede:	51 e4       	ldi	r21, 0x41	; 65
    2ee0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2ee4:	dc 01       	movw	r26, r24
    2ee6:	cb 01       	movw	r24, r22
    2ee8:	8e 01       	movw	r16, r28
    2eea:	05 54       	subi	r16, 0x45	; 69
    2eec:	1f 4f       	sbci	r17, 0xFF	; 255
    2eee:	bc 01       	movw	r22, r24
    2ef0:	cd 01       	movw	r24, r26
    2ef2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2ef6:	dc 01       	movw	r26, r24
    2ef8:	cb 01       	movw	r24, r22
    2efa:	f8 01       	movw	r30, r16
    2efc:	91 83       	std	Z+1, r25	; 0x01
    2efe:	80 83       	st	Z, r24
    2f00:	1f c0       	rjmp	.+62     	; 0x2f40 <FUN_RIGHT+0x40c>
    2f02:	fe 01       	movw	r30, r28
    2f04:	e7 54       	subi	r30, 0x47	; 71
    2f06:	ff 4f       	sbci	r31, 0xFF	; 255
    2f08:	88 ec       	ldi	r24, 0xC8	; 200
    2f0a:	90 e0       	ldi	r25, 0x00	; 0
    2f0c:	91 83       	std	Z+1, r25	; 0x01
    2f0e:	80 83       	st	Z, r24
    2f10:	fe 01       	movw	r30, r28
    2f12:	e7 54       	subi	r30, 0x47	; 71
    2f14:	ff 4f       	sbci	r31, 0xFF	; 255
    2f16:	80 81       	ld	r24, Z
    2f18:	91 81       	ldd	r25, Z+1	; 0x01
    2f1a:	01 97       	sbiw	r24, 0x01	; 1
    2f1c:	f1 f7       	brne	.-4      	; 0x2f1a <FUN_RIGHT+0x3e6>
    2f1e:	fe 01       	movw	r30, r28
    2f20:	e7 54       	subi	r30, 0x47	; 71
    2f22:	ff 4f       	sbci	r31, 0xFF	; 255
    2f24:	91 83       	std	Z+1, r25	; 0x01
    2f26:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2f28:	de 01       	movw	r26, r28
    2f2a:	a5 54       	subi	r26, 0x45	; 69
    2f2c:	bf 4f       	sbci	r27, 0xFF	; 255
    2f2e:	fe 01       	movw	r30, r28
    2f30:	e5 54       	subi	r30, 0x45	; 69
    2f32:	ff 4f       	sbci	r31, 0xFF	; 255
    2f34:	80 81       	ld	r24, Z
    2f36:	91 81       	ldd	r25, Z+1	; 0x01
    2f38:	01 97       	sbiw	r24, 0x01	; 1
    2f3a:	11 96       	adiw	r26, 0x01	; 1
    2f3c:	9c 93       	st	X, r25
    2f3e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2f40:	fe 01       	movw	r30, r28
    2f42:	e5 54       	subi	r30, 0x45	; 69
    2f44:	ff 4f       	sbci	r31, 0xFF	; 255
    2f46:	80 81       	ld	r24, Z
    2f48:	91 81       	ldd	r25, Z+1	; 0x01
    2f4a:	00 97       	sbiw	r24, 0x00	; 0
    2f4c:	d1 f6       	brne	.-76     	; 0x2f02 <FUN_RIGHT+0x3ce>
    2f4e:	27 c0       	rjmp	.+78     	; 0x2f9e <FUN_RIGHT+0x46a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2f50:	8e 01       	movw	r16, r28
    2f52:	05 54       	subi	r16, 0x45	; 69
    2f54:	1f 4f       	sbci	r17, 0xFF	; 255
    2f56:	fe 01       	movw	r30, r28
    2f58:	e3 54       	subi	r30, 0x43	; 67
    2f5a:	ff 4f       	sbci	r31, 0xFF	; 255
    2f5c:	60 81       	ld	r22, Z
    2f5e:	71 81       	ldd	r23, Z+1	; 0x01
    2f60:	82 81       	ldd	r24, Z+2	; 0x02
    2f62:	93 81       	ldd	r25, Z+3	; 0x03
    2f64:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2f68:	dc 01       	movw	r26, r24
    2f6a:	cb 01       	movw	r24, r22
    2f6c:	f8 01       	movw	r30, r16
    2f6e:	91 83       	std	Z+1, r25	; 0x01
    2f70:	80 83       	st	Z, r24
    2f72:	de 01       	movw	r26, r28
    2f74:	a9 54       	subi	r26, 0x49	; 73
    2f76:	bf 4f       	sbci	r27, 0xFF	; 255
    2f78:	fe 01       	movw	r30, r28
    2f7a:	e5 54       	subi	r30, 0x45	; 69
    2f7c:	ff 4f       	sbci	r31, 0xFF	; 255
    2f7e:	80 81       	ld	r24, Z
    2f80:	91 81       	ldd	r25, Z+1	; 0x01
    2f82:	8d 93       	st	X+, r24
    2f84:	9c 93       	st	X, r25
    2f86:	fe 01       	movw	r30, r28
    2f88:	e9 54       	subi	r30, 0x49	; 73
    2f8a:	ff 4f       	sbci	r31, 0xFF	; 255
    2f8c:	80 81       	ld	r24, Z
    2f8e:	91 81       	ldd	r25, Z+1	; 0x01
    2f90:	01 97       	sbiw	r24, 0x01	; 1
    2f92:	f1 f7       	brne	.-4      	; 0x2f90 <FUN_RIGHT+0x45c>
    2f94:	fe 01       	movw	r30, r28
    2f96:	e9 54       	subi	r30, 0x49	; 73
    2f98:	ff 4f       	sbci	r31, 0xFF	; 255
    2f9a:	91 83       	std	Z+1, r25	; 0x01
    2f9c:	80 83       	st	Z, r24
	_delay_ms(50);
	DIO__CheckStatusSetPinValue(DIO__UINT8_PORTA,DIO__UINT8_PIN1,DIO__UINT8_LOW);
    2f9e:	80 e0       	ldi	r24, 0x00	; 0
    2fa0:	61 e0       	ldi	r22, 0x01	; 1
    2fa2:	40 e0       	ldi	r20, 0x00	; 0
    2fa4:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <DIO__CheckStatusSetPinValue>
    2fa8:	fe 01       	movw	r30, r28
    2faa:	ed 54       	subi	r30, 0x4D	; 77
    2fac:	ff 4f       	sbci	r31, 0xFF	; 255
    2fae:	80 e0       	ldi	r24, 0x00	; 0
    2fb0:	90 e0       	ldi	r25, 0x00	; 0
    2fb2:	a8 e4       	ldi	r26, 0x48	; 72
    2fb4:	b2 e4       	ldi	r27, 0x42	; 66
    2fb6:	80 83       	st	Z, r24
    2fb8:	91 83       	std	Z+1, r25	; 0x01
    2fba:	a2 83       	std	Z+2, r26	; 0x02
    2fbc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2fbe:	8e 01       	movw	r16, r28
    2fc0:	01 55       	subi	r16, 0x51	; 81
    2fc2:	1f 4f       	sbci	r17, 0xFF	; 255
    2fc4:	fe 01       	movw	r30, r28
    2fc6:	ed 54       	subi	r30, 0x4D	; 77
    2fc8:	ff 4f       	sbci	r31, 0xFF	; 255
    2fca:	60 81       	ld	r22, Z
    2fcc:	71 81       	ldd	r23, Z+1	; 0x01
    2fce:	82 81       	ldd	r24, Z+2	; 0x02
    2fd0:	93 81       	ldd	r25, Z+3	; 0x03
    2fd2:	20 e0       	ldi	r18, 0x00	; 0
    2fd4:	30 e0       	ldi	r19, 0x00	; 0
    2fd6:	4a ef       	ldi	r20, 0xFA	; 250
    2fd8:	54 e4       	ldi	r21, 0x44	; 68
    2fda:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2fde:	dc 01       	movw	r26, r24
    2fe0:	cb 01       	movw	r24, r22
    2fe2:	f8 01       	movw	r30, r16
    2fe4:	80 83       	st	Z, r24
    2fe6:	91 83       	std	Z+1, r25	; 0x01
    2fe8:	a2 83       	std	Z+2, r26	; 0x02
    2fea:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2fec:	fe 01       	movw	r30, r28
    2fee:	e1 55       	subi	r30, 0x51	; 81
    2ff0:	ff 4f       	sbci	r31, 0xFF	; 255
    2ff2:	60 81       	ld	r22, Z
    2ff4:	71 81       	ldd	r23, Z+1	; 0x01
    2ff6:	82 81       	ldd	r24, Z+2	; 0x02
    2ff8:	93 81       	ldd	r25, Z+3	; 0x03
    2ffa:	20 e0       	ldi	r18, 0x00	; 0
    2ffc:	30 e0       	ldi	r19, 0x00	; 0
    2ffe:	40 e8       	ldi	r20, 0x80	; 128
    3000:	5f e3       	ldi	r21, 0x3F	; 63
    3002:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3006:	88 23       	and	r24, r24
    3008:	44 f4       	brge	.+16     	; 0x301a <FUN_RIGHT+0x4e6>
		__ticks = 1;
    300a:	fe 01       	movw	r30, r28
    300c:	e3 55       	subi	r30, 0x53	; 83
    300e:	ff 4f       	sbci	r31, 0xFF	; 255
    3010:	81 e0       	ldi	r24, 0x01	; 1
    3012:	90 e0       	ldi	r25, 0x00	; 0
    3014:	91 83       	std	Z+1, r25	; 0x01
    3016:	80 83       	st	Z, r24
    3018:	64 c0       	rjmp	.+200    	; 0x30e2 <FUN_RIGHT+0x5ae>
	else if (__tmp > 65535)
    301a:	fe 01       	movw	r30, r28
    301c:	e1 55       	subi	r30, 0x51	; 81
    301e:	ff 4f       	sbci	r31, 0xFF	; 255
    3020:	60 81       	ld	r22, Z
    3022:	71 81       	ldd	r23, Z+1	; 0x01
    3024:	82 81       	ldd	r24, Z+2	; 0x02
    3026:	93 81       	ldd	r25, Z+3	; 0x03
    3028:	20 e0       	ldi	r18, 0x00	; 0
    302a:	3f ef       	ldi	r19, 0xFF	; 255
    302c:	4f e7       	ldi	r20, 0x7F	; 127
    302e:	57 e4       	ldi	r21, 0x47	; 71
    3030:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3034:	18 16       	cp	r1, r24
    3036:	0c f0       	brlt	.+2      	; 0x303a <FUN_RIGHT+0x506>
    3038:	43 c0       	rjmp	.+134    	; 0x30c0 <FUN_RIGHT+0x58c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    303a:	fe 01       	movw	r30, r28
    303c:	ed 54       	subi	r30, 0x4D	; 77
    303e:	ff 4f       	sbci	r31, 0xFF	; 255
    3040:	60 81       	ld	r22, Z
    3042:	71 81       	ldd	r23, Z+1	; 0x01
    3044:	82 81       	ldd	r24, Z+2	; 0x02
    3046:	93 81       	ldd	r25, Z+3	; 0x03
    3048:	20 e0       	ldi	r18, 0x00	; 0
    304a:	30 e0       	ldi	r19, 0x00	; 0
    304c:	40 e2       	ldi	r20, 0x20	; 32
    304e:	51 e4       	ldi	r21, 0x41	; 65
    3050:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3054:	dc 01       	movw	r26, r24
    3056:	cb 01       	movw	r24, r22
    3058:	8e 01       	movw	r16, r28
    305a:	03 55       	subi	r16, 0x53	; 83
    305c:	1f 4f       	sbci	r17, 0xFF	; 255
    305e:	bc 01       	movw	r22, r24
    3060:	cd 01       	movw	r24, r26
    3062:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3066:	dc 01       	movw	r26, r24
    3068:	cb 01       	movw	r24, r22
    306a:	f8 01       	movw	r30, r16
    306c:	91 83       	std	Z+1, r25	; 0x01
    306e:	80 83       	st	Z, r24
    3070:	1f c0       	rjmp	.+62     	; 0x30b0 <FUN_RIGHT+0x57c>
    3072:	fe 01       	movw	r30, r28
    3074:	e5 55       	subi	r30, 0x55	; 85
    3076:	ff 4f       	sbci	r31, 0xFF	; 255
    3078:	88 ec       	ldi	r24, 0xC8	; 200
    307a:	90 e0       	ldi	r25, 0x00	; 0
    307c:	91 83       	std	Z+1, r25	; 0x01
    307e:	80 83       	st	Z, r24
    3080:	fe 01       	movw	r30, r28
    3082:	e5 55       	subi	r30, 0x55	; 85
    3084:	ff 4f       	sbci	r31, 0xFF	; 255
    3086:	80 81       	ld	r24, Z
    3088:	91 81       	ldd	r25, Z+1	; 0x01
    308a:	01 97       	sbiw	r24, 0x01	; 1
    308c:	f1 f7       	brne	.-4      	; 0x308a <FUN_RIGHT+0x556>
    308e:	fe 01       	movw	r30, r28
    3090:	e5 55       	subi	r30, 0x55	; 85
    3092:	ff 4f       	sbci	r31, 0xFF	; 255
    3094:	91 83       	std	Z+1, r25	; 0x01
    3096:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3098:	de 01       	movw	r26, r28
    309a:	a3 55       	subi	r26, 0x53	; 83
    309c:	bf 4f       	sbci	r27, 0xFF	; 255
    309e:	fe 01       	movw	r30, r28
    30a0:	e3 55       	subi	r30, 0x53	; 83
    30a2:	ff 4f       	sbci	r31, 0xFF	; 255
    30a4:	80 81       	ld	r24, Z
    30a6:	91 81       	ldd	r25, Z+1	; 0x01
    30a8:	01 97       	sbiw	r24, 0x01	; 1
    30aa:	11 96       	adiw	r26, 0x01	; 1
    30ac:	9c 93       	st	X, r25
    30ae:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    30b0:	fe 01       	movw	r30, r28
    30b2:	e3 55       	subi	r30, 0x53	; 83
    30b4:	ff 4f       	sbci	r31, 0xFF	; 255
    30b6:	80 81       	ld	r24, Z
    30b8:	91 81       	ldd	r25, Z+1	; 0x01
    30ba:	00 97       	sbiw	r24, 0x00	; 0
    30bc:	d1 f6       	brne	.-76     	; 0x3072 <FUN_RIGHT+0x53e>
    30be:	27 c0       	rjmp	.+78     	; 0x310e <FUN_RIGHT+0x5da>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    30c0:	8e 01       	movw	r16, r28
    30c2:	03 55       	subi	r16, 0x53	; 83
    30c4:	1f 4f       	sbci	r17, 0xFF	; 255
    30c6:	fe 01       	movw	r30, r28
    30c8:	e1 55       	subi	r30, 0x51	; 81
    30ca:	ff 4f       	sbci	r31, 0xFF	; 255
    30cc:	60 81       	ld	r22, Z
    30ce:	71 81       	ldd	r23, Z+1	; 0x01
    30d0:	82 81       	ldd	r24, Z+2	; 0x02
    30d2:	93 81       	ldd	r25, Z+3	; 0x03
    30d4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    30d8:	dc 01       	movw	r26, r24
    30da:	cb 01       	movw	r24, r22
    30dc:	f8 01       	movw	r30, r16
    30de:	91 83       	std	Z+1, r25	; 0x01
    30e0:	80 83       	st	Z, r24
    30e2:	de 01       	movw	r26, r28
    30e4:	a7 55       	subi	r26, 0x57	; 87
    30e6:	bf 4f       	sbci	r27, 0xFF	; 255
    30e8:	fe 01       	movw	r30, r28
    30ea:	e3 55       	subi	r30, 0x53	; 83
    30ec:	ff 4f       	sbci	r31, 0xFF	; 255
    30ee:	80 81       	ld	r24, Z
    30f0:	91 81       	ldd	r25, Z+1	; 0x01
    30f2:	8d 93       	st	X+, r24
    30f4:	9c 93       	st	X, r25
    30f6:	fe 01       	movw	r30, r28
    30f8:	e7 55       	subi	r30, 0x57	; 87
    30fa:	ff 4f       	sbci	r31, 0xFF	; 255
    30fc:	80 81       	ld	r24, Z
    30fe:	91 81       	ldd	r25, Z+1	; 0x01
    3100:	01 97       	sbiw	r24, 0x01	; 1
    3102:	f1 f7       	brne	.-4      	; 0x3100 <FUN_RIGHT+0x5cc>
    3104:	fe 01       	movw	r30, r28
    3106:	e7 55       	subi	r30, 0x57	; 87
    3108:	ff 4f       	sbci	r31, 0xFF	; 255
    310a:	91 83       	std	Z+1, r25	; 0x01
    310c:	80 83       	st	Z, r24
	_delay_ms(50);
	DIO__CheckStatusSetPinValue(DIO__UINT8_PORTA,DIO__UINT8_PIN2,DIO__UINT8_HIGH);
    310e:	80 e0       	ldi	r24, 0x00	; 0
    3110:	62 e0       	ldi	r22, 0x02	; 2
    3112:	41 e0       	ldi	r20, 0x01	; 1
    3114:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <DIO__CheckStatusSetPinValue>
    3118:	fe 01       	movw	r30, r28
    311a:	eb 55       	subi	r30, 0x5B	; 91
    311c:	ff 4f       	sbci	r31, 0xFF	; 255
    311e:	80 e0       	ldi	r24, 0x00	; 0
    3120:	90 e0       	ldi	r25, 0x00	; 0
    3122:	a8 e4       	ldi	r26, 0x48	; 72
    3124:	b2 e4       	ldi	r27, 0x42	; 66
    3126:	80 83       	st	Z, r24
    3128:	91 83       	std	Z+1, r25	; 0x01
    312a:	a2 83       	std	Z+2, r26	; 0x02
    312c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    312e:	8e 01       	movw	r16, r28
    3130:	0f 55       	subi	r16, 0x5F	; 95
    3132:	1f 4f       	sbci	r17, 0xFF	; 255
    3134:	fe 01       	movw	r30, r28
    3136:	eb 55       	subi	r30, 0x5B	; 91
    3138:	ff 4f       	sbci	r31, 0xFF	; 255
    313a:	60 81       	ld	r22, Z
    313c:	71 81       	ldd	r23, Z+1	; 0x01
    313e:	82 81       	ldd	r24, Z+2	; 0x02
    3140:	93 81       	ldd	r25, Z+3	; 0x03
    3142:	20 e0       	ldi	r18, 0x00	; 0
    3144:	30 e0       	ldi	r19, 0x00	; 0
    3146:	4a ef       	ldi	r20, 0xFA	; 250
    3148:	54 e4       	ldi	r21, 0x44	; 68
    314a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    314e:	dc 01       	movw	r26, r24
    3150:	cb 01       	movw	r24, r22
    3152:	f8 01       	movw	r30, r16
    3154:	80 83       	st	Z, r24
    3156:	91 83       	std	Z+1, r25	; 0x01
    3158:	a2 83       	std	Z+2, r26	; 0x02
    315a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    315c:	fe 01       	movw	r30, r28
    315e:	ef 55       	subi	r30, 0x5F	; 95
    3160:	ff 4f       	sbci	r31, 0xFF	; 255
    3162:	60 81       	ld	r22, Z
    3164:	71 81       	ldd	r23, Z+1	; 0x01
    3166:	82 81       	ldd	r24, Z+2	; 0x02
    3168:	93 81       	ldd	r25, Z+3	; 0x03
    316a:	20 e0       	ldi	r18, 0x00	; 0
    316c:	30 e0       	ldi	r19, 0x00	; 0
    316e:	40 e8       	ldi	r20, 0x80	; 128
    3170:	5f e3       	ldi	r21, 0x3F	; 63
    3172:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3176:	88 23       	and	r24, r24
    3178:	44 f4       	brge	.+16     	; 0x318a <FUN_RIGHT+0x656>
		__ticks = 1;
    317a:	fe 01       	movw	r30, r28
    317c:	e1 56       	subi	r30, 0x61	; 97
    317e:	ff 4f       	sbci	r31, 0xFF	; 255
    3180:	81 e0       	ldi	r24, 0x01	; 1
    3182:	90 e0       	ldi	r25, 0x00	; 0
    3184:	91 83       	std	Z+1, r25	; 0x01
    3186:	80 83       	st	Z, r24
    3188:	64 c0       	rjmp	.+200    	; 0x3252 <FUN_RIGHT+0x71e>
	else if (__tmp > 65535)
    318a:	fe 01       	movw	r30, r28
    318c:	ef 55       	subi	r30, 0x5F	; 95
    318e:	ff 4f       	sbci	r31, 0xFF	; 255
    3190:	60 81       	ld	r22, Z
    3192:	71 81       	ldd	r23, Z+1	; 0x01
    3194:	82 81       	ldd	r24, Z+2	; 0x02
    3196:	93 81       	ldd	r25, Z+3	; 0x03
    3198:	20 e0       	ldi	r18, 0x00	; 0
    319a:	3f ef       	ldi	r19, 0xFF	; 255
    319c:	4f e7       	ldi	r20, 0x7F	; 127
    319e:	57 e4       	ldi	r21, 0x47	; 71
    31a0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    31a4:	18 16       	cp	r1, r24
    31a6:	0c f0       	brlt	.+2      	; 0x31aa <FUN_RIGHT+0x676>
    31a8:	43 c0       	rjmp	.+134    	; 0x3230 <FUN_RIGHT+0x6fc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    31aa:	fe 01       	movw	r30, r28
    31ac:	eb 55       	subi	r30, 0x5B	; 91
    31ae:	ff 4f       	sbci	r31, 0xFF	; 255
    31b0:	60 81       	ld	r22, Z
    31b2:	71 81       	ldd	r23, Z+1	; 0x01
    31b4:	82 81       	ldd	r24, Z+2	; 0x02
    31b6:	93 81       	ldd	r25, Z+3	; 0x03
    31b8:	20 e0       	ldi	r18, 0x00	; 0
    31ba:	30 e0       	ldi	r19, 0x00	; 0
    31bc:	40 e2       	ldi	r20, 0x20	; 32
    31be:	51 e4       	ldi	r21, 0x41	; 65
    31c0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    31c4:	dc 01       	movw	r26, r24
    31c6:	cb 01       	movw	r24, r22
    31c8:	8e 01       	movw	r16, r28
    31ca:	01 56       	subi	r16, 0x61	; 97
    31cc:	1f 4f       	sbci	r17, 0xFF	; 255
    31ce:	bc 01       	movw	r22, r24
    31d0:	cd 01       	movw	r24, r26
    31d2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    31d6:	dc 01       	movw	r26, r24
    31d8:	cb 01       	movw	r24, r22
    31da:	f8 01       	movw	r30, r16
    31dc:	91 83       	std	Z+1, r25	; 0x01
    31de:	80 83       	st	Z, r24
    31e0:	1f c0       	rjmp	.+62     	; 0x3220 <FUN_RIGHT+0x6ec>
    31e2:	fe 01       	movw	r30, r28
    31e4:	e3 56       	subi	r30, 0x63	; 99
    31e6:	ff 4f       	sbci	r31, 0xFF	; 255
    31e8:	88 ec       	ldi	r24, 0xC8	; 200
    31ea:	90 e0       	ldi	r25, 0x00	; 0
    31ec:	91 83       	std	Z+1, r25	; 0x01
    31ee:	80 83       	st	Z, r24
    31f0:	fe 01       	movw	r30, r28
    31f2:	e3 56       	subi	r30, 0x63	; 99
    31f4:	ff 4f       	sbci	r31, 0xFF	; 255
    31f6:	80 81       	ld	r24, Z
    31f8:	91 81       	ldd	r25, Z+1	; 0x01
    31fa:	01 97       	sbiw	r24, 0x01	; 1
    31fc:	f1 f7       	brne	.-4      	; 0x31fa <FUN_RIGHT+0x6c6>
    31fe:	fe 01       	movw	r30, r28
    3200:	e3 56       	subi	r30, 0x63	; 99
    3202:	ff 4f       	sbci	r31, 0xFF	; 255
    3204:	91 83       	std	Z+1, r25	; 0x01
    3206:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3208:	de 01       	movw	r26, r28
    320a:	a1 56       	subi	r26, 0x61	; 97
    320c:	bf 4f       	sbci	r27, 0xFF	; 255
    320e:	fe 01       	movw	r30, r28
    3210:	e1 56       	subi	r30, 0x61	; 97
    3212:	ff 4f       	sbci	r31, 0xFF	; 255
    3214:	80 81       	ld	r24, Z
    3216:	91 81       	ldd	r25, Z+1	; 0x01
    3218:	01 97       	sbiw	r24, 0x01	; 1
    321a:	11 96       	adiw	r26, 0x01	; 1
    321c:	9c 93       	st	X, r25
    321e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3220:	fe 01       	movw	r30, r28
    3222:	e1 56       	subi	r30, 0x61	; 97
    3224:	ff 4f       	sbci	r31, 0xFF	; 255
    3226:	80 81       	ld	r24, Z
    3228:	91 81       	ldd	r25, Z+1	; 0x01
    322a:	00 97       	sbiw	r24, 0x00	; 0
    322c:	d1 f6       	brne	.-76     	; 0x31e2 <FUN_RIGHT+0x6ae>
    322e:	27 c0       	rjmp	.+78     	; 0x327e <FUN_RIGHT+0x74a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3230:	8e 01       	movw	r16, r28
    3232:	01 56       	subi	r16, 0x61	; 97
    3234:	1f 4f       	sbci	r17, 0xFF	; 255
    3236:	fe 01       	movw	r30, r28
    3238:	ef 55       	subi	r30, 0x5F	; 95
    323a:	ff 4f       	sbci	r31, 0xFF	; 255
    323c:	60 81       	ld	r22, Z
    323e:	71 81       	ldd	r23, Z+1	; 0x01
    3240:	82 81       	ldd	r24, Z+2	; 0x02
    3242:	93 81       	ldd	r25, Z+3	; 0x03
    3244:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3248:	dc 01       	movw	r26, r24
    324a:	cb 01       	movw	r24, r22
    324c:	f8 01       	movw	r30, r16
    324e:	91 83       	std	Z+1, r25	; 0x01
    3250:	80 83       	st	Z, r24
    3252:	de 01       	movw	r26, r28
    3254:	a5 56       	subi	r26, 0x65	; 101
    3256:	bf 4f       	sbci	r27, 0xFF	; 255
    3258:	fe 01       	movw	r30, r28
    325a:	e1 56       	subi	r30, 0x61	; 97
    325c:	ff 4f       	sbci	r31, 0xFF	; 255
    325e:	80 81       	ld	r24, Z
    3260:	91 81       	ldd	r25, Z+1	; 0x01
    3262:	8d 93       	st	X+, r24
    3264:	9c 93       	st	X, r25
    3266:	fe 01       	movw	r30, r28
    3268:	e5 56       	subi	r30, 0x65	; 101
    326a:	ff 4f       	sbci	r31, 0xFF	; 255
    326c:	80 81       	ld	r24, Z
    326e:	91 81       	ldd	r25, Z+1	; 0x01
    3270:	01 97       	sbiw	r24, 0x01	; 1
    3272:	f1 f7       	brne	.-4      	; 0x3270 <FUN_RIGHT+0x73c>
    3274:	fe 01       	movw	r30, r28
    3276:	e5 56       	subi	r30, 0x65	; 101
    3278:	ff 4f       	sbci	r31, 0xFF	; 255
    327a:	91 83       	std	Z+1, r25	; 0x01
    327c:	80 83       	st	Z, r24
	_delay_ms(50);
	DIO__CheckStatusSetPinValue(DIO__UINT8_PORTA,DIO__UINT8_PIN2,DIO__UINT8_LOW);
    327e:	80 e0       	ldi	r24, 0x00	; 0
    3280:	62 e0       	ldi	r22, 0x02	; 2
    3282:	40 e0       	ldi	r20, 0x00	; 0
    3284:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <DIO__CheckStatusSetPinValue>
    3288:	fe 01       	movw	r30, r28
    328a:	e9 56       	subi	r30, 0x69	; 105
    328c:	ff 4f       	sbci	r31, 0xFF	; 255
    328e:	80 e0       	ldi	r24, 0x00	; 0
    3290:	90 e0       	ldi	r25, 0x00	; 0
    3292:	a8 e4       	ldi	r26, 0x48	; 72
    3294:	b2 e4       	ldi	r27, 0x42	; 66
    3296:	80 83       	st	Z, r24
    3298:	91 83       	std	Z+1, r25	; 0x01
    329a:	a2 83       	std	Z+2, r26	; 0x02
    329c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    329e:	8e 01       	movw	r16, r28
    32a0:	0d 56       	subi	r16, 0x6D	; 109
    32a2:	1f 4f       	sbci	r17, 0xFF	; 255
    32a4:	fe 01       	movw	r30, r28
    32a6:	e9 56       	subi	r30, 0x69	; 105
    32a8:	ff 4f       	sbci	r31, 0xFF	; 255
    32aa:	60 81       	ld	r22, Z
    32ac:	71 81       	ldd	r23, Z+1	; 0x01
    32ae:	82 81       	ldd	r24, Z+2	; 0x02
    32b0:	93 81       	ldd	r25, Z+3	; 0x03
    32b2:	20 e0       	ldi	r18, 0x00	; 0
    32b4:	30 e0       	ldi	r19, 0x00	; 0
    32b6:	4a ef       	ldi	r20, 0xFA	; 250
    32b8:	54 e4       	ldi	r21, 0x44	; 68
    32ba:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    32be:	dc 01       	movw	r26, r24
    32c0:	cb 01       	movw	r24, r22
    32c2:	f8 01       	movw	r30, r16
    32c4:	80 83       	st	Z, r24
    32c6:	91 83       	std	Z+1, r25	; 0x01
    32c8:	a2 83       	std	Z+2, r26	; 0x02
    32ca:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    32cc:	fe 01       	movw	r30, r28
    32ce:	ed 56       	subi	r30, 0x6D	; 109
    32d0:	ff 4f       	sbci	r31, 0xFF	; 255
    32d2:	60 81       	ld	r22, Z
    32d4:	71 81       	ldd	r23, Z+1	; 0x01
    32d6:	82 81       	ldd	r24, Z+2	; 0x02
    32d8:	93 81       	ldd	r25, Z+3	; 0x03
    32da:	20 e0       	ldi	r18, 0x00	; 0
    32dc:	30 e0       	ldi	r19, 0x00	; 0
    32de:	40 e8       	ldi	r20, 0x80	; 128
    32e0:	5f e3       	ldi	r21, 0x3F	; 63
    32e2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    32e6:	88 23       	and	r24, r24
    32e8:	44 f4       	brge	.+16     	; 0x32fa <FUN_RIGHT+0x7c6>
		__ticks = 1;
    32ea:	fe 01       	movw	r30, r28
    32ec:	ef 56       	subi	r30, 0x6F	; 111
    32ee:	ff 4f       	sbci	r31, 0xFF	; 255
    32f0:	81 e0       	ldi	r24, 0x01	; 1
    32f2:	90 e0       	ldi	r25, 0x00	; 0
    32f4:	91 83       	std	Z+1, r25	; 0x01
    32f6:	80 83       	st	Z, r24
    32f8:	64 c0       	rjmp	.+200    	; 0x33c2 <FUN_RIGHT+0x88e>
	else if (__tmp > 65535)
    32fa:	fe 01       	movw	r30, r28
    32fc:	ed 56       	subi	r30, 0x6D	; 109
    32fe:	ff 4f       	sbci	r31, 0xFF	; 255
    3300:	60 81       	ld	r22, Z
    3302:	71 81       	ldd	r23, Z+1	; 0x01
    3304:	82 81       	ldd	r24, Z+2	; 0x02
    3306:	93 81       	ldd	r25, Z+3	; 0x03
    3308:	20 e0       	ldi	r18, 0x00	; 0
    330a:	3f ef       	ldi	r19, 0xFF	; 255
    330c:	4f e7       	ldi	r20, 0x7F	; 127
    330e:	57 e4       	ldi	r21, 0x47	; 71
    3310:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3314:	18 16       	cp	r1, r24
    3316:	0c f0       	brlt	.+2      	; 0x331a <FUN_RIGHT+0x7e6>
    3318:	43 c0       	rjmp	.+134    	; 0x33a0 <FUN_RIGHT+0x86c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    331a:	fe 01       	movw	r30, r28
    331c:	e9 56       	subi	r30, 0x69	; 105
    331e:	ff 4f       	sbci	r31, 0xFF	; 255
    3320:	60 81       	ld	r22, Z
    3322:	71 81       	ldd	r23, Z+1	; 0x01
    3324:	82 81       	ldd	r24, Z+2	; 0x02
    3326:	93 81       	ldd	r25, Z+3	; 0x03
    3328:	20 e0       	ldi	r18, 0x00	; 0
    332a:	30 e0       	ldi	r19, 0x00	; 0
    332c:	40 e2       	ldi	r20, 0x20	; 32
    332e:	51 e4       	ldi	r21, 0x41	; 65
    3330:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3334:	dc 01       	movw	r26, r24
    3336:	cb 01       	movw	r24, r22
    3338:	8e 01       	movw	r16, r28
    333a:	0f 56       	subi	r16, 0x6F	; 111
    333c:	1f 4f       	sbci	r17, 0xFF	; 255
    333e:	bc 01       	movw	r22, r24
    3340:	cd 01       	movw	r24, r26
    3342:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3346:	dc 01       	movw	r26, r24
    3348:	cb 01       	movw	r24, r22
    334a:	f8 01       	movw	r30, r16
    334c:	91 83       	std	Z+1, r25	; 0x01
    334e:	80 83       	st	Z, r24
    3350:	1f c0       	rjmp	.+62     	; 0x3390 <FUN_RIGHT+0x85c>
    3352:	fe 01       	movw	r30, r28
    3354:	e1 57       	subi	r30, 0x71	; 113
    3356:	ff 4f       	sbci	r31, 0xFF	; 255
    3358:	88 ec       	ldi	r24, 0xC8	; 200
    335a:	90 e0       	ldi	r25, 0x00	; 0
    335c:	91 83       	std	Z+1, r25	; 0x01
    335e:	80 83       	st	Z, r24
    3360:	fe 01       	movw	r30, r28
    3362:	e1 57       	subi	r30, 0x71	; 113
    3364:	ff 4f       	sbci	r31, 0xFF	; 255
    3366:	80 81       	ld	r24, Z
    3368:	91 81       	ldd	r25, Z+1	; 0x01
    336a:	01 97       	sbiw	r24, 0x01	; 1
    336c:	f1 f7       	brne	.-4      	; 0x336a <FUN_RIGHT+0x836>
    336e:	fe 01       	movw	r30, r28
    3370:	e1 57       	subi	r30, 0x71	; 113
    3372:	ff 4f       	sbci	r31, 0xFF	; 255
    3374:	91 83       	std	Z+1, r25	; 0x01
    3376:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3378:	de 01       	movw	r26, r28
    337a:	af 56       	subi	r26, 0x6F	; 111
    337c:	bf 4f       	sbci	r27, 0xFF	; 255
    337e:	fe 01       	movw	r30, r28
    3380:	ef 56       	subi	r30, 0x6F	; 111
    3382:	ff 4f       	sbci	r31, 0xFF	; 255
    3384:	80 81       	ld	r24, Z
    3386:	91 81       	ldd	r25, Z+1	; 0x01
    3388:	01 97       	sbiw	r24, 0x01	; 1
    338a:	11 96       	adiw	r26, 0x01	; 1
    338c:	9c 93       	st	X, r25
    338e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3390:	fe 01       	movw	r30, r28
    3392:	ef 56       	subi	r30, 0x6F	; 111
    3394:	ff 4f       	sbci	r31, 0xFF	; 255
    3396:	80 81       	ld	r24, Z
    3398:	91 81       	ldd	r25, Z+1	; 0x01
    339a:	00 97       	sbiw	r24, 0x00	; 0
    339c:	d1 f6       	brne	.-76     	; 0x3352 <FUN_RIGHT+0x81e>
    339e:	27 c0       	rjmp	.+78     	; 0x33ee <FUN_RIGHT+0x8ba>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    33a0:	8e 01       	movw	r16, r28
    33a2:	0f 56       	subi	r16, 0x6F	; 111
    33a4:	1f 4f       	sbci	r17, 0xFF	; 255
    33a6:	fe 01       	movw	r30, r28
    33a8:	ed 56       	subi	r30, 0x6D	; 109
    33aa:	ff 4f       	sbci	r31, 0xFF	; 255
    33ac:	60 81       	ld	r22, Z
    33ae:	71 81       	ldd	r23, Z+1	; 0x01
    33b0:	82 81       	ldd	r24, Z+2	; 0x02
    33b2:	93 81       	ldd	r25, Z+3	; 0x03
    33b4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    33b8:	dc 01       	movw	r26, r24
    33ba:	cb 01       	movw	r24, r22
    33bc:	f8 01       	movw	r30, r16
    33be:	91 83       	std	Z+1, r25	; 0x01
    33c0:	80 83       	st	Z, r24
    33c2:	de 01       	movw	r26, r28
    33c4:	a3 57       	subi	r26, 0x73	; 115
    33c6:	bf 4f       	sbci	r27, 0xFF	; 255
    33c8:	fe 01       	movw	r30, r28
    33ca:	ef 56       	subi	r30, 0x6F	; 111
    33cc:	ff 4f       	sbci	r31, 0xFF	; 255
    33ce:	80 81       	ld	r24, Z
    33d0:	91 81       	ldd	r25, Z+1	; 0x01
    33d2:	8d 93       	st	X+, r24
    33d4:	9c 93       	st	X, r25
    33d6:	fe 01       	movw	r30, r28
    33d8:	e3 57       	subi	r30, 0x73	; 115
    33da:	ff 4f       	sbci	r31, 0xFF	; 255
    33dc:	80 81       	ld	r24, Z
    33de:	91 81       	ldd	r25, Z+1	; 0x01
    33e0:	01 97       	sbiw	r24, 0x01	; 1
    33e2:	f1 f7       	brne	.-4      	; 0x33e0 <FUN_RIGHT+0x8ac>
    33e4:	fe 01       	movw	r30, r28
    33e6:	e3 57       	subi	r30, 0x73	; 115
    33e8:	ff 4f       	sbci	r31, 0xFF	; 255
    33ea:	91 83       	std	Z+1, r25	; 0x01
    33ec:	80 83       	st	Z, r24
	_delay_ms(50);
	DIO__CheckStatusSetPinValue(DIO__UINT8_PORTA,DIO__UINT8_PIN3,DIO__UINT8_HIGH);
    33ee:	80 e0       	ldi	r24, 0x00	; 0
    33f0:	63 e0       	ldi	r22, 0x03	; 3
    33f2:	41 e0       	ldi	r20, 0x01	; 1
    33f4:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <DIO__CheckStatusSetPinValue>
    33f8:	fe 01       	movw	r30, r28
    33fa:	e7 57       	subi	r30, 0x77	; 119
    33fc:	ff 4f       	sbci	r31, 0xFF	; 255
    33fe:	80 e0       	ldi	r24, 0x00	; 0
    3400:	90 e0       	ldi	r25, 0x00	; 0
    3402:	a8 e4       	ldi	r26, 0x48	; 72
    3404:	b2 e4       	ldi	r27, 0x42	; 66
    3406:	80 83       	st	Z, r24
    3408:	91 83       	std	Z+1, r25	; 0x01
    340a:	a2 83       	std	Z+2, r26	; 0x02
    340c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    340e:	8e 01       	movw	r16, r28
    3410:	0b 57       	subi	r16, 0x7B	; 123
    3412:	1f 4f       	sbci	r17, 0xFF	; 255
    3414:	fe 01       	movw	r30, r28
    3416:	e7 57       	subi	r30, 0x77	; 119
    3418:	ff 4f       	sbci	r31, 0xFF	; 255
    341a:	60 81       	ld	r22, Z
    341c:	71 81       	ldd	r23, Z+1	; 0x01
    341e:	82 81       	ldd	r24, Z+2	; 0x02
    3420:	93 81       	ldd	r25, Z+3	; 0x03
    3422:	20 e0       	ldi	r18, 0x00	; 0
    3424:	30 e0       	ldi	r19, 0x00	; 0
    3426:	4a ef       	ldi	r20, 0xFA	; 250
    3428:	54 e4       	ldi	r21, 0x44	; 68
    342a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    342e:	dc 01       	movw	r26, r24
    3430:	cb 01       	movw	r24, r22
    3432:	f8 01       	movw	r30, r16
    3434:	80 83       	st	Z, r24
    3436:	91 83       	std	Z+1, r25	; 0x01
    3438:	a2 83       	std	Z+2, r26	; 0x02
    343a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    343c:	fe 01       	movw	r30, r28
    343e:	eb 57       	subi	r30, 0x7B	; 123
    3440:	ff 4f       	sbci	r31, 0xFF	; 255
    3442:	60 81       	ld	r22, Z
    3444:	71 81       	ldd	r23, Z+1	; 0x01
    3446:	82 81       	ldd	r24, Z+2	; 0x02
    3448:	93 81       	ldd	r25, Z+3	; 0x03
    344a:	20 e0       	ldi	r18, 0x00	; 0
    344c:	30 e0       	ldi	r19, 0x00	; 0
    344e:	40 e8       	ldi	r20, 0x80	; 128
    3450:	5f e3       	ldi	r21, 0x3F	; 63
    3452:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3456:	88 23       	and	r24, r24
    3458:	44 f4       	brge	.+16     	; 0x346a <FUN_RIGHT+0x936>
		__ticks = 1;
    345a:	fe 01       	movw	r30, r28
    345c:	ed 57       	subi	r30, 0x7D	; 125
    345e:	ff 4f       	sbci	r31, 0xFF	; 255
    3460:	81 e0       	ldi	r24, 0x01	; 1
    3462:	90 e0       	ldi	r25, 0x00	; 0
    3464:	91 83       	std	Z+1, r25	; 0x01
    3466:	80 83       	st	Z, r24
    3468:	64 c0       	rjmp	.+200    	; 0x3532 <FUN_RIGHT+0x9fe>
	else if (__tmp > 65535)
    346a:	fe 01       	movw	r30, r28
    346c:	eb 57       	subi	r30, 0x7B	; 123
    346e:	ff 4f       	sbci	r31, 0xFF	; 255
    3470:	60 81       	ld	r22, Z
    3472:	71 81       	ldd	r23, Z+1	; 0x01
    3474:	82 81       	ldd	r24, Z+2	; 0x02
    3476:	93 81       	ldd	r25, Z+3	; 0x03
    3478:	20 e0       	ldi	r18, 0x00	; 0
    347a:	3f ef       	ldi	r19, 0xFF	; 255
    347c:	4f e7       	ldi	r20, 0x7F	; 127
    347e:	57 e4       	ldi	r21, 0x47	; 71
    3480:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3484:	18 16       	cp	r1, r24
    3486:	0c f0       	brlt	.+2      	; 0x348a <FUN_RIGHT+0x956>
    3488:	43 c0       	rjmp	.+134    	; 0x3510 <FUN_RIGHT+0x9dc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    348a:	fe 01       	movw	r30, r28
    348c:	e7 57       	subi	r30, 0x77	; 119
    348e:	ff 4f       	sbci	r31, 0xFF	; 255
    3490:	60 81       	ld	r22, Z
    3492:	71 81       	ldd	r23, Z+1	; 0x01
    3494:	82 81       	ldd	r24, Z+2	; 0x02
    3496:	93 81       	ldd	r25, Z+3	; 0x03
    3498:	20 e0       	ldi	r18, 0x00	; 0
    349a:	30 e0       	ldi	r19, 0x00	; 0
    349c:	40 e2       	ldi	r20, 0x20	; 32
    349e:	51 e4       	ldi	r21, 0x41	; 65
    34a0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    34a4:	dc 01       	movw	r26, r24
    34a6:	cb 01       	movw	r24, r22
    34a8:	8e 01       	movw	r16, r28
    34aa:	0d 57       	subi	r16, 0x7D	; 125
    34ac:	1f 4f       	sbci	r17, 0xFF	; 255
    34ae:	bc 01       	movw	r22, r24
    34b0:	cd 01       	movw	r24, r26
    34b2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    34b6:	dc 01       	movw	r26, r24
    34b8:	cb 01       	movw	r24, r22
    34ba:	f8 01       	movw	r30, r16
    34bc:	91 83       	std	Z+1, r25	; 0x01
    34be:	80 83       	st	Z, r24
    34c0:	1f c0       	rjmp	.+62     	; 0x3500 <FUN_RIGHT+0x9cc>
    34c2:	fe 01       	movw	r30, r28
    34c4:	ef 57       	subi	r30, 0x7F	; 127
    34c6:	ff 4f       	sbci	r31, 0xFF	; 255
    34c8:	88 ec       	ldi	r24, 0xC8	; 200
    34ca:	90 e0       	ldi	r25, 0x00	; 0
    34cc:	91 83       	std	Z+1, r25	; 0x01
    34ce:	80 83       	st	Z, r24
    34d0:	fe 01       	movw	r30, r28
    34d2:	ef 57       	subi	r30, 0x7F	; 127
    34d4:	ff 4f       	sbci	r31, 0xFF	; 255
    34d6:	80 81       	ld	r24, Z
    34d8:	91 81       	ldd	r25, Z+1	; 0x01
    34da:	01 97       	sbiw	r24, 0x01	; 1
    34dc:	f1 f7       	brne	.-4      	; 0x34da <FUN_RIGHT+0x9a6>
    34de:	fe 01       	movw	r30, r28
    34e0:	ef 57       	subi	r30, 0x7F	; 127
    34e2:	ff 4f       	sbci	r31, 0xFF	; 255
    34e4:	91 83       	std	Z+1, r25	; 0x01
    34e6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    34e8:	de 01       	movw	r26, r28
    34ea:	ad 57       	subi	r26, 0x7D	; 125
    34ec:	bf 4f       	sbci	r27, 0xFF	; 255
    34ee:	fe 01       	movw	r30, r28
    34f0:	ed 57       	subi	r30, 0x7D	; 125
    34f2:	ff 4f       	sbci	r31, 0xFF	; 255
    34f4:	80 81       	ld	r24, Z
    34f6:	91 81       	ldd	r25, Z+1	; 0x01
    34f8:	01 97       	sbiw	r24, 0x01	; 1
    34fa:	11 96       	adiw	r26, 0x01	; 1
    34fc:	9c 93       	st	X, r25
    34fe:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3500:	fe 01       	movw	r30, r28
    3502:	ed 57       	subi	r30, 0x7D	; 125
    3504:	ff 4f       	sbci	r31, 0xFF	; 255
    3506:	80 81       	ld	r24, Z
    3508:	91 81       	ldd	r25, Z+1	; 0x01
    350a:	00 97       	sbiw	r24, 0x00	; 0
    350c:	d1 f6       	brne	.-76     	; 0x34c2 <FUN_RIGHT+0x98e>
    350e:	27 c0       	rjmp	.+78     	; 0x355e <FUN_RIGHT+0xa2a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3510:	8e 01       	movw	r16, r28
    3512:	0d 57       	subi	r16, 0x7D	; 125
    3514:	1f 4f       	sbci	r17, 0xFF	; 255
    3516:	fe 01       	movw	r30, r28
    3518:	eb 57       	subi	r30, 0x7B	; 123
    351a:	ff 4f       	sbci	r31, 0xFF	; 255
    351c:	60 81       	ld	r22, Z
    351e:	71 81       	ldd	r23, Z+1	; 0x01
    3520:	82 81       	ldd	r24, Z+2	; 0x02
    3522:	93 81       	ldd	r25, Z+3	; 0x03
    3524:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3528:	dc 01       	movw	r26, r24
    352a:	cb 01       	movw	r24, r22
    352c:	f8 01       	movw	r30, r16
    352e:	91 83       	std	Z+1, r25	; 0x01
    3530:	80 83       	st	Z, r24
    3532:	de 01       	movw	r26, r28
    3534:	a1 58       	subi	r26, 0x81	; 129
    3536:	bf 4f       	sbci	r27, 0xFF	; 255
    3538:	fe 01       	movw	r30, r28
    353a:	ed 57       	subi	r30, 0x7D	; 125
    353c:	ff 4f       	sbci	r31, 0xFF	; 255
    353e:	80 81       	ld	r24, Z
    3540:	91 81       	ldd	r25, Z+1	; 0x01
    3542:	8d 93       	st	X+, r24
    3544:	9c 93       	st	X, r25
    3546:	fe 01       	movw	r30, r28
    3548:	e1 58       	subi	r30, 0x81	; 129
    354a:	ff 4f       	sbci	r31, 0xFF	; 255
    354c:	80 81       	ld	r24, Z
    354e:	91 81       	ldd	r25, Z+1	; 0x01
    3550:	01 97       	sbiw	r24, 0x01	; 1
    3552:	f1 f7       	brne	.-4      	; 0x3550 <FUN_RIGHT+0xa1c>
    3554:	fe 01       	movw	r30, r28
    3556:	e1 58       	subi	r30, 0x81	; 129
    3558:	ff 4f       	sbci	r31, 0xFF	; 255
    355a:	91 83       	std	Z+1, r25	; 0x01
    355c:	80 83       	st	Z, r24
	_delay_ms(50);
	DIO__CheckStatusSetPinValue(DIO__UINT8_PORTA,DIO__UINT8_PIN3,DIO__UINT8_LOW);
    355e:	80 e0       	ldi	r24, 0x00	; 0
    3560:	63 e0       	ldi	r22, 0x03	; 3
    3562:	40 e0       	ldi	r20, 0x00	; 0
    3564:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <DIO__CheckStatusSetPinValue>
    3568:	fe 01       	movw	r30, r28
    356a:	e5 58       	subi	r30, 0x85	; 133
    356c:	ff 4f       	sbci	r31, 0xFF	; 255
    356e:	80 e0       	ldi	r24, 0x00	; 0
    3570:	90 e0       	ldi	r25, 0x00	; 0
    3572:	a8 e4       	ldi	r26, 0x48	; 72
    3574:	b2 e4       	ldi	r27, 0x42	; 66
    3576:	80 83       	st	Z, r24
    3578:	91 83       	std	Z+1, r25	; 0x01
    357a:	a2 83       	std	Z+2, r26	; 0x02
    357c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    357e:	8e 01       	movw	r16, r28
    3580:	09 58       	subi	r16, 0x89	; 137
    3582:	1f 4f       	sbci	r17, 0xFF	; 255
    3584:	fe 01       	movw	r30, r28
    3586:	e5 58       	subi	r30, 0x85	; 133
    3588:	ff 4f       	sbci	r31, 0xFF	; 255
    358a:	60 81       	ld	r22, Z
    358c:	71 81       	ldd	r23, Z+1	; 0x01
    358e:	82 81       	ldd	r24, Z+2	; 0x02
    3590:	93 81       	ldd	r25, Z+3	; 0x03
    3592:	20 e0       	ldi	r18, 0x00	; 0
    3594:	30 e0       	ldi	r19, 0x00	; 0
    3596:	4a ef       	ldi	r20, 0xFA	; 250
    3598:	54 e4       	ldi	r21, 0x44	; 68
    359a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    359e:	dc 01       	movw	r26, r24
    35a0:	cb 01       	movw	r24, r22
    35a2:	f8 01       	movw	r30, r16
    35a4:	80 83       	st	Z, r24
    35a6:	91 83       	std	Z+1, r25	; 0x01
    35a8:	a2 83       	std	Z+2, r26	; 0x02
    35aa:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    35ac:	fe 01       	movw	r30, r28
    35ae:	e9 58       	subi	r30, 0x89	; 137
    35b0:	ff 4f       	sbci	r31, 0xFF	; 255
    35b2:	60 81       	ld	r22, Z
    35b4:	71 81       	ldd	r23, Z+1	; 0x01
    35b6:	82 81       	ldd	r24, Z+2	; 0x02
    35b8:	93 81       	ldd	r25, Z+3	; 0x03
    35ba:	20 e0       	ldi	r18, 0x00	; 0
    35bc:	30 e0       	ldi	r19, 0x00	; 0
    35be:	40 e8       	ldi	r20, 0x80	; 128
    35c0:	5f e3       	ldi	r21, 0x3F	; 63
    35c2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    35c6:	88 23       	and	r24, r24
    35c8:	44 f4       	brge	.+16     	; 0x35da <FUN_RIGHT+0xaa6>
		__ticks = 1;
    35ca:	fe 01       	movw	r30, r28
    35cc:	eb 58       	subi	r30, 0x8B	; 139
    35ce:	ff 4f       	sbci	r31, 0xFF	; 255
    35d0:	81 e0       	ldi	r24, 0x01	; 1
    35d2:	90 e0       	ldi	r25, 0x00	; 0
    35d4:	91 83       	std	Z+1, r25	; 0x01
    35d6:	80 83       	st	Z, r24
    35d8:	64 c0       	rjmp	.+200    	; 0x36a2 <FUN_RIGHT+0xb6e>
	else if (__tmp > 65535)
    35da:	fe 01       	movw	r30, r28
    35dc:	e9 58       	subi	r30, 0x89	; 137
    35de:	ff 4f       	sbci	r31, 0xFF	; 255
    35e0:	60 81       	ld	r22, Z
    35e2:	71 81       	ldd	r23, Z+1	; 0x01
    35e4:	82 81       	ldd	r24, Z+2	; 0x02
    35e6:	93 81       	ldd	r25, Z+3	; 0x03
    35e8:	20 e0       	ldi	r18, 0x00	; 0
    35ea:	3f ef       	ldi	r19, 0xFF	; 255
    35ec:	4f e7       	ldi	r20, 0x7F	; 127
    35ee:	57 e4       	ldi	r21, 0x47	; 71
    35f0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    35f4:	18 16       	cp	r1, r24
    35f6:	0c f0       	brlt	.+2      	; 0x35fa <FUN_RIGHT+0xac6>
    35f8:	43 c0       	rjmp	.+134    	; 0x3680 <FUN_RIGHT+0xb4c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    35fa:	fe 01       	movw	r30, r28
    35fc:	e5 58       	subi	r30, 0x85	; 133
    35fe:	ff 4f       	sbci	r31, 0xFF	; 255
    3600:	60 81       	ld	r22, Z
    3602:	71 81       	ldd	r23, Z+1	; 0x01
    3604:	82 81       	ldd	r24, Z+2	; 0x02
    3606:	93 81       	ldd	r25, Z+3	; 0x03
    3608:	20 e0       	ldi	r18, 0x00	; 0
    360a:	30 e0       	ldi	r19, 0x00	; 0
    360c:	40 e2       	ldi	r20, 0x20	; 32
    360e:	51 e4       	ldi	r21, 0x41	; 65
    3610:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3614:	dc 01       	movw	r26, r24
    3616:	cb 01       	movw	r24, r22
    3618:	8e 01       	movw	r16, r28
    361a:	0b 58       	subi	r16, 0x8B	; 139
    361c:	1f 4f       	sbci	r17, 0xFF	; 255
    361e:	bc 01       	movw	r22, r24
    3620:	cd 01       	movw	r24, r26
    3622:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3626:	dc 01       	movw	r26, r24
    3628:	cb 01       	movw	r24, r22
    362a:	f8 01       	movw	r30, r16
    362c:	91 83       	std	Z+1, r25	; 0x01
    362e:	80 83       	st	Z, r24
    3630:	1f c0       	rjmp	.+62     	; 0x3670 <FUN_RIGHT+0xb3c>
    3632:	fe 01       	movw	r30, r28
    3634:	ed 58       	subi	r30, 0x8D	; 141
    3636:	ff 4f       	sbci	r31, 0xFF	; 255
    3638:	88 ec       	ldi	r24, 0xC8	; 200
    363a:	90 e0       	ldi	r25, 0x00	; 0
    363c:	91 83       	std	Z+1, r25	; 0x01
    363e:	80 83       	st	Z, r24
    3640:	fe 01       	movw	r30, r28
    3642:	ed 58       	subi	r30, 0x8D	; 141
    3644:	ff 4f       	sbci	r31, 0xFF	; 255
    3646:	80 81       	ld	r24, Z
    3648:	91 81       	ldd	r25, Z+1	; 0x01
    364a:	01 97       	sbiw	r24, 0x01	; 1
    364c:	f1 f7       	brne	.-4      	; 0x364a <FUN_RIGHT+0xb16>
    364e:	fe 01       	movw	r30, r28
    3650:	ed 58       	subi	r30, 0x8D	; 141
    3652:	ff 4f       	sbci	r31, 0xFF	; 255
    3654:	91 83       	std	Z+1, r25	; 0x01
    3656:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3658:	de 01       	movw	r26, r28
    365a:	ab 58       	subi	r26, 0x8B	; 139
    365c:	bf 4f       	sbci	r27, 0xFF	; 255
    365e:	fe 01       	movw	r30, r28
    3660:	eb 58       	subi	r30, 0x8B	; 139
    3662:	ff 4f       	sbci	r31, 0xFF	; 255
    3664:	80 81       	ld	r24, Z
    3666:	91 81       	ldd	r25, Z+1	; 0x01
    3668:	01 97       	sbiw	r24, 0x01	; 1
    366a:	11 96       	adiw	r26, 0x01	; 1
    366c:	9c 93       	st	X, r25
    366e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3670:	fe 01       	movw	r30, r28
    3672:	eb 58       	subi	r30, 0x8B	; 139
    3674:	ff 4f       	sbci	r31, 0xFF	; 255
    3676:	80 81       	ld	r24, Z
    3678:	91 81       	ldd	r25, Z+1	; 0x01
    367a:	00 97       	sbiw	r24, 0x00	; 0
    367c:	d1 f6       	brne	.-76     	; 0x3632 <FUN_RIGHT+0xafe>
    367e:	27 c0       	rjmp	.+78     	; 0x36ce <FUN_RIGHT+0xb9a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3680:	8e 01       	movw	r16, r28
    3682:	0b 58       	subi	r16, 0x8B	; 139
    3684:	1f 4f       	sbci	r17, 0xFF	; 255
    3686:	fe 01       	movw	r30, r28
    3688:	e9 58       	subi	r30, 0x89	; 137
    368a:	ff 4f       	sbci	r31, 0xFF	; 255
    368c:	60 81       	ld	r22, Z
    368e:	71 81       	ldd	r23, Z+1	; 0x01
    3690:	82 81       	ldd	r24, Z+2	; 0x02
    3692:	93 81       	ldd	r25, Z+3	; 0x03
    3694:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3698:	dc 01       	movw	r26, r24
    369a:	cb 01       	movw	r24, r22
    369c:	f8 01       	movw	r30, r16
    369e:	91 83       	std	Z+1, r25	; 0x01
    36a0:	80 83       	st	Z, r24
    36a2:	de 01       	movw	r26, r28
    36a4:	af 58       	subi	r26, 0x8F	; 143
    36a6:	bf 4f       	sbci	r27, 0xFF	; 255
    36a8:	fe 01       	movw	r30, r28
    36aa:	eb 58       	subi	r30, 0x8B	; 139
    36ac:	ff 4f       	sbci	r31, 0xFF	; 255
    36ae:	80 81       	ld	r24, Z
    36b0:	91 81       	ldd	r25, Z+1	; 0x01
    36b2:	8d 93       	st	X+, r24
    36b4:	9c 93       	st	X, r25
    36b6:	fe 01       	movw	r30, r28
    36b8:	ef 58       	subi	r30, 0x8F	; 143
    36ba:	ff 4f       	sbci	r31, 0xFF	; 255
    36bc:	80 81       	ld	r24, Z
    36be:	91 81       	ldd	r25, Z+1	; 0x01
    36c0:	01 97       	sbiw	r24, 0x01	; 1
    36c2:	f1 f7       	brne	.-4      	; 0x36c0 <FUN_RIGHT+0xb8c>
    36c4:	fe 01       	movw	r30, r28
    36c6:	ef 58       	subi	r30, 0x8F	; 143
    36c8:	ff 4f       	sbci	r31, 0xFF	; 255
    36ca:	91 83       	std	Z+1, r25	; 0x01
    36cc:	80 83       	st	Z, r24
	_delay_ms(50);
	DIO__CheckStatusSetPinValue(DIO__UINT8_PORTA,DIO__UINT8_PIN4,DIO__UINT8_HIGH);
    36ce:	80 e0       	ldi	r24, 0x00	; 0
    36d0:	64 e0       	ldi	r22, 0x04	; 4
    36d2:	41 e0       	ldi	r20, 0x01	; 1
    36d4:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <DIO__CheckStatusSetPinValue>
    36d8:	fe 01       	movw	r30, r28
    36da:	e3 59       	subi	r30, 0x93	; 147
    36dc:	ff 4f       	sbci	r31, 0xFF	; 255
    36de:	80 e0       	ldi	r24, 0x00	; 0
    36e0:	90 e0       	ldi	r25, 0x00	; 0
    36e2:	a8 e4       	ldi	r26, 0x48	; 72
    36e4:	b2 e4       	ldi	r27, 0x42	; 66
    36e6:	80 83       	st	Z, r24
    36e8:	91 83       	std	Z+1, r25	; 0x01
    36ea:	a2 83       	std	Z+2, r26	; 0x02
    36ec:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    36ee:	8e 01       	movw	r16, r28
    36f0:	07 59       	subi	r16, 0x97	; 151
    36f2:	1f 4f       	sbci	r17, 0xFF	; 255
    36f4:	fe 01       	movw	r30, r28
    36f6:	e3 59       	subi	r30, 0x93	; 147
    36f8:	ff 4f       	sbci	r31, 0xFF	; 255
    36fa:	60 81       	ld	r22, Z
    36fc:	71 81       	ldd	r23, Z+1	; 0x01
    36fe:	82 81       	ldd	r24, Z+2	; 0x02
    3700:	93 81       	ldd	r25, Z+3	; 0x03
    3702:	20 e0       	ldi	r18, 0x00	; 0
    3704:	30 e0       	ldi	r19, 0x00	; 0
    3706:	4a ef       	ldi	r20, 0xFA	; 250
    3708:	54 e4       	ldi	r21, 0x44	; 68
    370a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    370e:	dc 01       	movw	r26, r24
    3710:	cb 01       	movw	r24, r22
    3712:	f8 01       	movw	r30, r16
    3714:	80 83       	st	Z, r24
    3716:	91 83       	std	Z+1, r25	; 0x01
    3718:	a2 83       	std	Z+2, r26	; 0x02
    371a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    371c:	fe 01       	movw	r30, r28
    371e:	e7 59       	subi	r30, 0x97	; 151
    3720:	ff 4f       	sbci	r31, 0xFF	; 255
    3722:	60 81       	ld	r22, Z
    3724:	71 81       	ldd	r23, Z+1	; 0x01
    3726:	82 81       	ldd	r24, Z+2	; 0x02
    3728:	93 81       	ldd	r25, Z+3	; 0x03
    372a:	20 e0       	ldi	r18, 0x00	; 0
    372c:	30 e0       	ldi	r19, 0x00	; 0
    372e:	40 e8       	ldi	r20, 0x80	; 128
    3730:	5f e3       	ldi	r21, 0x3F	; 63
    3732:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3736:	88 23       	and	r24, r24
    3738:	44 f4       	brge	.+16     	; 0x374a <FUN_RIGHT+0xc16>
		__ticks = 1;
    373a:	fe 01       	movw	r30, r28
    373c:	e9 59       	subi	r30, 0x99	; 153
    373e:	ff 4f       	sbci	r31, 0xFF	; 255
    3740:	81 e0       	ldi	r24, 0x01	; 1
    3742:	90 e0       	ldi	r25, 0x00	; 0
    3744:	91 83       	std	Z+1, r25	; 0x01
    3746:	80 83       	st	Z, r24
    3748:	64 c0       	rjmp	.+200    	; 0x3812 <FUN_RIGHT+0xcde>
	else if (__tmp > 65535)
    374a:	fe 01       	movw	r30, r28
    374c:	e7 59       	subi	r30, 0x97	; 151
    374e:	ff 4f       	sbci	r31, 0xFF	; 255
    3750:	60 81       	ld	r22, Z
    3752:	71 81       	ldd	r23, Z+1	; 0x01
    3754:	82 81       	ldd	r24, Z+2	; 0x02
    3756:	93 81       	ldd	r25, Z+3	; 0x03
    3758:	20 e0       	ldi	r18, 0x00	; 0
    375a:	3f ef       	ldi	r19, 0xFF	; 255
    375c:	4f e7       	ldi	r20, 0x7F	; 127
    375e:	57 e4       	ldi	r21, 0x47	; 71
    3760:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3764:	18 16       	cp	r1, r24
    3766:	0c f0       	brlt	.+2      	; 0x376a <FUN_RIGHT+0xc36>
    3768:	43 c0       	rjmp	.+134    	; 0x37f0 <FUN_RIGHT+0xcbc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    376a:	fe 01       	movw	r30, r28
    376c:	e3 59       	subi	r30, 0x93	; 147
    376e:	ff 4f       	sbci	r31, 0xFF	; 255
    3770:	60 81       	ld	r22, Z
    3772:	71 81       	ldd	r23, Z+1	; 0x01
    3774:	82 81       	ldd	r24, Z+2	; 0x02
    3776:	93 81       	ldd	r25, Z+3	; 0x03
    3778:	20 e0       	ldi	r18, 0x00	; 0
    377a:	30 e0       	ldi	r19, 0x00	; 0
    377c:	40 e2       	ldi	r20, 0x20	; 32
    377e:	51 e4       	ldi	r21, 0x41	; 65
    3780:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3784:	dc 01       	movw	r26, r24
    3786:	cb 01       	movw	r24, r22
    3788:	8e 01       	movw	r16, r28
    378a:	09 59       	subi	r16, 0x99	; 153
    378c:	1f 4f       	sbci	r17, 0xFF	; 255
    378e:	bc 01       	movw	r22, r24
    3790:	cd 01       	movw	r24, r26
    3792:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3796:	dc 01       	movw	r26, r24
    3798:	cb 01       	movw	r24, r22
    379a:	f8 01       	movw	r30, r16
    379c:	91 83       	std	Z+1, r25	; 0x01
    379e:	80 83       	st	Z, r24
    37a0:	1f c0       	rjmp	.+62     	; 0x37e0 <FUN_RIGHT+0xcac>
    37a2:	fe 01       	movw	r30, r28
    37a4:	eb 59       	subi	r30, 0x9B	; 155
    37a6:	ff 4f       	sbci	r31, 0xFF	; 255
    37a8:	88 ec       	ldi	r24, 0xC8	; 200
    37aa:	90 e0       	ldi	r25, 0x00	; 0
    37ac:	91 83       	std	Z+1, r25	; 0x01
    37ae:	80 83       	st	Z, r24
    37b0:	fe 01       	movw	r30, r28
    37b2:	eb 59       	subi	r30, 0x9B	; 155
    37b4:	ff 4f       	sbci	r31, 0xFF	; 255
    37b6:	80 81       	ld	r24, Z
    37b8:	91 81       	ldd	r25, Z+1	; 0x01
    37ba:	01 97       	sbiw	r24, 0x01	; 1
    37bc:	f1 f7       	brne	.-4      	; 0x37ba <FUN_RIGHT+0xc86>
    37be:	fe 01       	movw	r30, r28
    37c0:	eb 59       	subi	r30, 0x9B	; 155
    37c2:	ff 4f       	sbci	r31, 0xFF	; 255
    37c4:	91 83       	std	Z+1, r25	; 0x01
    37c6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    37c8:	de 01       	movw	r26, r28
    37ca:	a9 59       	subi	r26, 0x99	; 153
    37cc:	bf 4f       	sbci	r27, 0xFF	; 255
    37ce:	fe 01       	movw	r30, r28
    37d0:	e9 59       	subi	r30, 0x99	; 153
    37d2:	ff 4f       	sbci	r31, 0xFF	; 255
    37d4:	80 81       	ld	r24, Z
    37d6:	91 81       	ldd	r25, Z+1	; 0x01
    37d8:	01 97       	sbiw	r24, 0x01	; 1
    37da:	11 96       	adiw	r26, 0x01	; 1
    37dc:	9c 93       	st	X, r25
    37de:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    37e0:	fe 01       	movw	r30, r28
    37e2:	e9 59       	subi	r30, 0x99	; 153
    37e4:	ff 4f       	sbci	r31, 0xFF	; 255
    37e6:	80 81       	ld	r24, Z
    37e8:	91 81       	ldd	r25, Z+1	; 0x01
    37ea:	00 97       	sbiw	r24, 0x00	; 0
    37ec:	d1 f6       	brne	.-76     	; 0x37a2 <FUN_RIGHT+0xc6e>
    37ee:	27 c0       	rjmp	.+78     	; 0x383e <FUN_RIGHT+0xd0a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    37f0:	8e 01       	movw	r16, r28
    37f2:	09 59       	subi	r16, 0x99	; 153
    37f4:	1f 4f       	sbci	r17, 0xFF	; 255
    37f6:	fe 01       	movw	r30, r28
    37f8:	e7 59       	subi	r30, 0x97	; 151
    37fa:	ff 4f       	sbci	r31, 0xFF	; 255
    37fc:	60 81       	ld	r22, Z
    37fe:	71 81       	ldd	r23, Z+1	; 0x01
    3800:	82 81       	ldd	r24, Z+2	; 0x02
    3802:	93 81       	ldd	r25, Z+3	; 0x03
    3804:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3808:	dc 01       	movw	r26, r24
    380a:	cb 01       	movw	r24, r22
    380c:	f8 01       	movw	r30, r16
    380e:	91 83       	std	Z+1, r25	; 0x01
    3810:	80 83       	st	Z, r24
    3812:	de 01       	movw	r26, r28
    3814:	ad 59       	subi	r26, 0x9D	; 157
    3816:	bf 4f       	sbci	r27, 0xFF	; 255
    3818:	fe 01       	movw	r30, r28
    381a:	e9 59       	subi	r30, 0x99	; 153
    381c:	ff 4f       	sbci	r31, 0xFF	; 255
    381e:	80 81       	ld	r24, Z
    3820:	91 81       	ldd	r25, Z+1	; 0x01
    3822:	8d 93       	st	X+, r24
    3824:	9c 93       	st	X, r25
    3826:	fe 01       	movw	r30, r28
    3828:	ed 59       	subi	r30, 0x9D	; 157
    382a:	ff 4f       	sbci	r31, 0xFF	; 255
    382c:	80 81       	ld	r24, Z
    382e:	91 81       	ldd	r25, Z+1	; 0x01
    3830:	01 97       	sbiw	r24, 0x01	; 1
    3832:	f1 f7       	brne	.-4      	; 0x3830 <FUN_RIGHT+0xcfc>
    3834:	fe 01       	movw	r30, r28
    3836:	ed 59       	subi	r30, 0x9D	; 157
    3838:	ff 4f       	sbci	r31, 0xFF	; 255
    383a:	91 83       	std	Z+1, r25	; 0x01
    383c:	80 83       	st	Z, r24
	_delay_ms(50);
	DIO__CheckStatusSetPinValue(DIO__UINT8_PORTA,DIO__UINT8_PIN4,DIO__UINT8_LOW);
    383e:	80 e0       	ldi	r24, 0x00	; 0
    3840:	64 e0       	ldi	r22, 0x04	; 4
    3842:	40 e0       	ldi	r20, 0x00	; 0
    3844:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <DIO__CheckStatusSetPinValue>
    3848:	fe 01       	movw	r30, r28
    384a:	e1 5a       	subi	r30, 0xA1	; 161
    384c:	ff 4f       	sbci	r31, 0xFF	; 255
    384e:	80 e0       	ldi	r24, 0x00	; 0
    3850:	90 e0       	ldi	r25, 0x00	; 0
    3852:	a8 e4       	ldi	r26, 0x48	; 72
    3854:	b2 e4       	ldi	r27, 0x42	; 66
    3856:	80 83       	st	Z, r24
    3858:	91 83       	std	Z+1, r25	; 0x01
    385a:	a2 83       	std	Z+2, r26	; 0x02
    385c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    385e:	8e 01       	movw	r16, r28
    3860:	05 5a       	subi	r16, 0xA5	; 165
    3862:	1f 4f       	sbci	r17, 0xFF	; 255
    3864:	fe 01       	movw	r30, r28
    3866:	e1 5a       	subi	r30, 0xA1	; 161
    3868:	ff 4f       	sbci	r31, 0xFF	; 255
    386a:	60 81       	ld	r22, Z
    386c:	71 81       	ldd	r23, Z+1	; 0x01
    386e:	82 81       	ldd	r24, Z+2	; 0x02
    3870:	93 81       	ldd	r25, Z+3	; 0x03
    3872:	20 e0       	ldi	r18, 0x00	; 0
    3874:	30 e0       	ldi	r19, 0x00	; 0
    3876:	4a ef       	ldi	r20, 0xFA	; 250
    3878:	54 e4       	ldi	r21, 0x44	; 68
    387a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    387e:	dc 01       	movw	r26, r24
    3880:	cb 01       	movw	r24, r22
    3882:	f8 01       	movw	r30, r16
    3884:	80 83       	st	Z, r24
    3886:	91 83       	std	Z+1, r25	; 0x01
    3888:	a2 83       	std	Z+2, r26	; 0x02
    388a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    388c:	fe 01       	movw	r30, r28
    388e:	e5 5a       	subi	r30, 0xA5	; 165
    3890:	ff 4f       	sbci	r31, 0xFF	; 255
    3892:	60 81       	ld	r22, Z
    3894:	71 81       	ldd	r23, Z+1	; 0x01
    3896:	82 81       	ldd	r24, Z+2	; 0x02
    3898:	93 81       	ldd	r25, Z+3	; 0x03
    389a:	20 e0       	ldi	r18, 0x00	; 0
    389c:	30 e0       	ldi	r19, 0x00	; 0
    389e:	40 e8       	ldi	r20, 0x80	; 128
    38a0:	5f e3       	ldi	r21, 0x3F	; 63
    38a2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    38a6:	88 23       	and	r24, r24
    38a8:	44 f4       	brge	.+16     	; 0x38ba <FUN_RIGHT+0xd86>
		__ticks = 1;
    38aa:	fe 01       	movw	r30, r28
    38ac:	e7 5a       	subi	r30, 0xA7	; 167
    38ae:	ff 4f       	sbci	r31, 0xFF	; 255
    38b0:	81 e0       	ldi	r24, 0x01	; 1
    38b2:	90 e0       	ldi	r25, 0x00	; 0
    38b4:	91 83       	std	Z+1, r25	; 0x01
    38b6:	80 83       	st	Z, r24
    38b8:	64 c0       	rjmp	.+200    	; 0x3982 <FUN_RIGHT+0xe4e>
	else if (__tmp > 65535)
    38ba:	fe 01       	movw	r30, r28
    38bc:	e5 5a       	subi	r30, 0xA5	; 165
    38be:	ff 4f       	sbci	r31, 0xFF	; 255
    38c0:	60 81       	ld	r22, Z
    38c2:	71 81       	ldd	r23, Z+1	; 0x01
    38c4:	82 81       	ldd	r24, Z+2	; 0x02
    38c6:	93 81       	ldd	r25, Z+3	; 0x03
    38c8:	20 e0       	ldi	r18, 0x00	; 0
    38ca:	3f ef       	ldi	r19, 0xFF	; 255
    38cc:	4f e7       	ldi	r20, 0x7F	; 127
    38ce:	57 e4       	ldi	r21, 0x47	; 71
    38d0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    38d4:	18 16       	cp	r1, r24
    38d6:	0c f0       	brlt	.+2      	; 0x38da <FUN_RIGHT+0xda6>
    38d8:	43 c0       	rjmp	.+134    	; 0x3960 <FUN_RIGHT+0xe2c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    38da:	fe 01       	movw	r30, r28
    38dc:	e1 5a       	subi	r30, 0xA1	; 161
    38de:	ff 4f       	sbci	r31, 0xFF	; 255
    38e0:	60 81       	ld	r22, Z
    38e2:	71 81       	ldd	r23, Z+1	; 0x01
    38e4:	82 81       	ldd	r24, Z+2	; 0x02
    38e6:	93 81       	ldd	r25, Z+3	; 0x03
    38e8:	20 e0       	ldi	r18, 0x00	; 0
    38ea:	30 e0       	ldi	r19, 0x00	; 0
    38ec:	40 e2       	ldi	r20, 0x20	; 32
    38ee:	51 e4       	ldi	r21, 0x41	; 65
    38f0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    38f4:	dc 01       	movw	r26, r24
    38f6:	cb 01       	movw	r24, r22
    38f8:	8e 01       	movw	r16, r28
    38fa:	07 5a       	subi	r16, 0xA7	; 167
    38fc:	1f 4f       	sbci	r17, 0xFF	; 255
    38fe:	bc 01       	movw	r22, r24
    3900:	cd 01       	movw	r24, r26
    3902:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3906:	dc 01       	movw	r26, r24
    3908:	cb 01       	movw	r24, r22
    390a:	f8 01       	movw	r30, r16
    390c:	91 83       	std	Z+1, r25	; 0x01
    390e:	80 83       	st	Z, r24
    3910:	1f c0       	rjmp	.+62     	; 0x3950 <FUN_RIGHT+0xe1c>
    3912:	fe 01       	movw	r30, r28
    3914:	e9 5a       	subi	r30, 0xA9	; 169
    3916:	ff 4f       	sbci	r31, 0xFF	; 255
    3918:	88 ec       	ldi	r24, 0xC8	; 200
    391a:	90 e0       	ldi	r25, 0x00	; 0
    391c:	91 83       	std	Z+1, r25	; 0x01
    391e:	80 83       	st	Z, r24
    3920:	fe 01       	movw	r30, r28
    3922:	e9 5a       	subi	r30, 0xA9	; 169
    3924:	ff 4f       	sbci	r31, 0xFF	; 255
    3926:	80 81       	ld	r24, Z
    3928:	91 81       	ldd	r25, Z+1	; 0x01
    392a:	01 97       	sbiw	r24, 0x01	; 1
    392c:	f1 f7       	brne	.-4      	; 0x392a <FUN_RIGHT+0xdf6>
    392e:	fe 01       	movw	r30, r28
    3930:	e9 5a       	subi	r30, 0xA9	; 169
    3932:	ff 4f       	sbci	r31, 0xFF	; 255
    3934:	91 83       	std	Z+1, r25	; 0x01
    3936:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3938:	de 01       	movw	r26, r28
    393a:	a7 5a       	subi	r26, 0xA7	; 167
    393c:	bf 4f       	sbci	r27, 0xFF	; 255
    393e:	fe 01       	movw	r30, r28
    3940:	e7 5a       	subi	r30, 0xA7	; 167
    3942:	ff 4f       	sbci	r31, 0xFF	; 255
    3944:	80 81       	ld	r24, Z
    3946:	91 81       	ldd	r25, Z+1	; 0x01
    3948:	01 97       	sbiw	r24, 0x01	; 1
    394a:	11 96       	adiw	r26, 0x01	; 1
    394c:	9c 93       	st	X, r25
    394e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3950:	fe 01       	movw	r30, r28
    3952:	e7 5a       	subi	r30, 0xA7	; 167
    3954:	ff 4f       	sbci	r31, 0xFF	; 255
    3956:	80 81       	ld	r24, Z
    3958:	91 81       	ldd	r25, Z+1	; 0x01
    395a:	00 97       	sbiw	r24, 0x00	; 0
    395c:	d1 f6       	brne	.-76     	; 0x3912 <FUN_RIGHT+0xdde>
    395e:	27 c0       	rjmp	.+78     	; 0x39ae <FUN_RIGHT+0xe7a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3960:	8e 01       	movw	r16, r28
    3962:	07 5a       	subi	r16, 0xA7	; 167
    3964:	1f 4f       	sbci	r17, 0xFF	; 255
    3966:	fe 01       	movw	r30, r28
    3968:	e5 5a       	subi	r30, 0xA5	; 165
    396a:	ff 4f       	sbci	r31, 0xFF	; 255
    396c:	60 81       	ld	r22, Z
    396e:	71 81       	ldd	r23, Z+1	; 0x01
    3970:	82 81       	ldd	r24, Z+2	; 0x02
    3972:	93 81       	ldd	r25, Z+3	; 0x03
    3974:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3978:	dc 01       	movw	r26, r24
    397a:	cb 01       	movw	r24, r22
    397c:	f8 01       	movw	r30, r16
    397e:	91 83       	std	Z+1, r25	; 0x01
    3980:	80 83       	st	Z, r24
    3982:	de 01       	movw	r26, r28
    3984:	ab 5a       	subi	r26, 0xAB	; 171
    3986:	bf 4f       	sbci	r27, 0xFF	; 255
    3988:	fe 01       	movw	r30, r28
    398a:	e7 5a       	subi	r30, 0xA7	; 167
    398c:	ff 4f       	sbci	r31, 0xFF	; 255
    398e:	80 81       	ld	r24, Z
    3990:	91 81       	ldd	r25, Z+1	; 0x01
    3992:	8d 93       	st	X+, r24
    3994:	9c 93       	st	X, r25
    3996:	fe 01       	movw	r30, r28
    3998:	eb 5a       	subi	r30, 0xAB	; 171
    399a:	ff 4f       	sbci	r31, 0xFF	; 255
    399c:	80 81       	ld	r24, Z
    399e:	91 81       	ldd	r25, Z+1	; 0x01
    39a0:	01 97       	sbiw	r24, 0x01	; 1
    39a2:	f1 f7       	brne	.-4      	; 0x39a0 <FUN_RIGHT+0xe6c>
    39a4:	fe 01       	movw	r30, r28
    39a6:	eb 5a       	subi	r30, 0xAB	; 171
    39a8:	ff 4f       	sbci	r31, 0xFF	; 255
    39aa:	91 83       	std	Z+1, r25	; 0x01
    39ac:	80 83       	st	Z, r24
	_delay_ms(50);
	DIO__CheckStatusSetPinValue(DIO__UINT8_PORTA,DIO__UINT8_PIN5,DIO__UINT8_HIGH);
    39ae:	80 e0       	ldi	r24, 0x00	; 0
    39b0:	65 e0       	ldi	r22, 0x05	; 5
    39b2:	41 e0       	ldi	r20, 0x01	; 1
    39b4:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <DIO__CheckStatusSetPinValue>
    39b8:	fe 01       	movw	r30, r28
    39ba:	ef 5a       	subi	r30, 0xAF	; 175
    39bc:	ff 4f       	sbci	r31, 0xFF	; 255
    39be:	80 e0       	ldi	r24, 0x00	; 0
    39c0:	90 e0       	ldi	r25, 0x00	; 0
    39c2:	a8 e4       	ldi	r26, 0x48	; 72
    39c4:	b2 e4       	ldi	r27, 0x42	; 66
    39c6:	80 83       	st	Z, r24
    39c8:	91 83       	std	Z+1, r25	; 0x01
    39ca:	a2 83       	std	Z+2, r26	; 0x02
    39cc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    39ce:	8e 01       	movw	r16, r28
    39d0:	03 5b       	subi	r16, 0xB3	; 179
    39d2:	1f 4f       	sbci	r17, 0xFF	; 255
    39d4:	fe 01       	movw	r30, r28
    39d6:	ef 5a       	subi	r30, 0xAF	; 175
    39d8:	ff 4f       	sbci	r31, 0xFF	; 255
    39da:	60 81       	ld	r22, Z
    39dc:	71 81       	ldd	r23, Z+1	; 0x01
    39de:	82 81       	ldd	r24, Z+2	; 0x02
    39e0:	93 81       	ldd	r25, Z+3	; 0x03
    39e2:	20 e0       	ldi	r18, 0x00	; 0
    39e4:	30 e0       	ldi	r19, 0x00	; 0
    39e6:	4a ef       	ldi	r20, 0xFA	; 250
    39e8:	54 e4       	ldi	r21, 0x44	; 68
    39ea:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    39ee:	dc 01       	movw	r26, r24
    39f0:	cb 01       	movw	r24, r22
    39f2:	f8 01       	movw	r30, r16
    39f4:	80 83       	st	Z, r24
    39f6:	91 83       	std	Z+1, r25	; 0x01
    39f8:	a2 83       	std	Z+2, r26	; 0x02
    39fa:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    39fc:	fe 01       	movw	r30, r28
    39fe:	e3 5b       	subi	r30, 0xB3	; 179
    3a00:	ff 4f       	sbci	r31, 0xFF	; 255
    3a02:	60 81       	ld	r22, Z
    3a04:	71 81       	ldd	r23, Z+1	; 0x01
    3a06:	82 81       	ldd	r24, Z+2	; 0x02
    3a08:	93 81       	ldd	r25, Z+3	; 0x03
    3a0a:	20 e0       	ldi	r18, 0x00	; 0
    3a0c:	30 e0       	ldi	r19, 0x00	; 0
    3a0e:	40 e8       	ldi	r20, 0x80	; 128
    3a10:	5f e3       	ldi	r21, 0x3F	; 63
    3a12:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3a16:	88 23       	and	r24, r24
    3a18:	44 f4       	brge	.+16     	; 0x3a2a <FUN_RIGHT+0xef6>
		__ticks = 1;
    3a1a:	fe 01       	movw	r30, r28
    3a1c:	e5 5b       	subi	r30, 0xB5	; 181
    3a1e:	ff 4f       	sbci	r31, 0xFF	; 255
    3a20:	81 e0       	ldi	r24, 0x01	; 1
    3a22:	90 e0       	ldi	r25, 0x00	; 0
    3a24:	91 83       	std	Z+1, r25	; 0x01
    3a26:	80 83       	st	Z, r24
    3a28:	64 c0       	rjmp	.+200    	; 0x3af2 <FUN_RIGHT+0xfbe>
	else if (__tmp > 65535)
    3a2a:	fe 01       	movw	r30, r28
    3a2c:	e3 5b       	subi	r30, 0xB3	; 179
    3a2e:	ff 4f       	sbci	r31, 0xFF	; 255
    3a30:	60 81       	ld	r22, Z
    3a32:	71 81       	ldd	r23, Z+1	; 0x01
    3a34:	82 81       	ldd	r24, Z+2	; 0x02
    3a36:	93 81       	ldd	r25, Z+3	; 0x03
    3a38:	20 e0       	ldi	r18, 0x00	; 0
    3a3a:	3f ef       	ldi	r19, 0xFF	; 255
    3a3c:	4f e7       	ldi	r20, 0x7F	; 127
    3a3e:	57 e4       	ldi	r21, 0x47	; 71
    3a40:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3a44:	18 16       	cp	r1, r24
    3a46:	0c f0       	brlt	.+2      	; 0x3a4a <FUN_RIGHT+0xf16>
    3a48:	43 c0       	rjmp	.+134    	; 0x3ad0 <FUN_RIGHT+0xf9c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3a4a:	fe 01       	movw	r30, r28
    3a4c:	ef 5a       	subi	r30, 0xAF	; 175
    3a4e:	ff 4f       	sbci	r31, 0xFF	; 255
    3a50:	60 81       	ld	r22, Z
    3a52:	71 81       	ldd	r23, Z+1	; 0x01
    3a54:	82 81       	ldd	r24, Z+2	; 0x02
    3a56:	93 81       	ldd	r25, Z+3	; 0x03
    3a58:	20 e0       	ldi	r18, 0x00	; 0
    3a5a:	30 e0       	ldi	r19, 0x00	; 0
    3a5c:	40 e2       	ldi	r20, 0x20	; 32
    3a5e:	51 e4       	ldi	r21, 0x41	; 65
    3a60:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3a64:	dc 01       	movw	r26, r24
    3a66:	cb 01       	movw	r24, r22
    3a68:	8e 01       	movw	r16, r28
    3a6a:	05 5b       	subi	r16, 0xB5	; 181
    3a6c:	1f 4f       	sbci	r17, 0xFF	; 255
    3a6e:	bc 01       	movw	r22, r24
    3a70:	cd 01       	movw	r24, r26
    3a72:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3a76:	dc 01       	movw	r26, r24
    3a78:	cb 01       	movw	r24, r22
    3a7a:	f8 01       	movw	r30, r16
    3a7c:	91 83       	std	Z+1, r25	; 0x01
    3a7e:	80 83       	st	Z, r24
    3a80:	1f c0       	rjmp	.+62     	; 0x3ac0 <FUN_RIGHT+0xf8c>
    3a82:	fe 01       	movw	r30, r28
    3a84:	e7 5b       	subi	r30, 0xB7	; 183
    3a86:	ff 4f       	sbci	r31, 0xFF	; 255
    3a88:	88 ec       	ldi	r24, 0xC8	; 200
    3a8a:	90 e0       	ldi	r25, 0x00	; 0
    3a8c:	91 83       	std	Z+1, r25	; 0x01
    3a8e:	80 83       	st	Z, r24
    3a90:	fe 01       	movw	r30, r28
    3a92:	e7 5b       	subi	r30, 0xB7	; 183
    3a94:	ff 4f       	sbci	r31, 0xFF	; 255
    3a96:	80 81       	ld	r24, Z
    3a98:	91 81       	ldd	r25, Z+1	; 0x01
    3a9a:	01 97       	sbiw	r24, 0x01	; 1
    3a9c:	f1 f7       	brne	.-4      	; 0x3a9a <FUN_RIGHT+0xf66>
    3a9e:	fe 01       	movw	r30, r28
    3aa0:	e7 5b       	subi	r30, 0xB7	; 183
    3aa2:	ff 4f       	sbci	r31, 0xFF	; 255
    3aa4:	91 83       	std	Z+1, r25	; 0x01
    3aa6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3aa8:	de 01       	movw	r26, r28
    3aaa:	a5 5b       	subi	r26, 0xB5	; 181
    3aac:	bf 4f       	sbci	r27, 0xFF	; 255
    3aae:	fe 01       	movw	r30, r28
    3ab0:	e5 5b       	subi	r30, 0xB5	; 181
    3ab2:	ff 4f       	sbci	r31, 0xFF	; 255
    3ab4:	80 81       	ld	r24, Z
    3ab6:	91 81       	ldd	r25, Z+1	; 0x01
    3ab8:	01 97       	sbiw	r24, 0x01	; 1
    3aba:	11 96       	adiw	r26, 0x01	; 1
    3abc:	9c 93       	st	X, r25
    3abe:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3ac0:	fe 01       	movw	r30, r28
    3ac2:	e5 5b       	subi	r30, 0xB5	; 181
    3ac4:	ff 4f       	sbci	r31, 0xFF	; 255
    3ac6:	80 81       	ld	r24, Z
    3ac8:	91 81       	ldd	r25, Z+1	; 0x01
    3aca:	00 97       	sbiw	r24, 0x00	; 0
    3acc:	d1 f6       	brne	.-76     	; 0x3a82 <FUN_RIGHT+0xf4e>
    3ace:	27 c0       	rjmp	.+78     	; 0x3b1e <FUN_RIGHT+0xfea>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3ad0:	8e 01       	movw	r16, r28
    3ad2:	05 5b       	subi	r16, 0xB5	; 181
    3ad4:	1f 4f       	sbci	r17, 0xFF	; 255
    3ad6:	fe 01       	movw	r30, r28
    3ad8:	e3 5b       	subi	r30, 0xB3	; 179
    3ada:	ff 4f       	sbci	r31, 0xFF	; 255
    3adc:	60 81       	ld	r22, Z
    3ade:	71 81       	ldd	r23, Z+1	; 0x01
    3ae0:	82 81       	ldd	r24, Z+2	; 0x02
    3ae2:	93 81       	ldd	r25, Z+3	; 0x03
    3ae4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3ae8:	dc 01       	movw	r26, r24
    3aea:	cb 01       	movw	r24, r22
    3aec:	f8 01       	movw	r30, r16
    3aee:	91 83       	std	Z+1, r25	; 0x01
    3af0:	80 83       	st	Z, r24
    3af2:	de 01       	movw	r26, r28
    3af4:	a9 5b       	subi	r26, 0xB9	; 185
    3af6:	bf 4f       	sbci	r27, 0xFF	; 255
    3af8:	fe 01       	movw	r30, r28
    3afa:	e5 5b       	subi	r30, 0xB5	; 181
    3afc:	ff 4f       	sbci	r31, 0xFF	; 255
    3afe:	80 81       	ld	r24, Z
    3b00:	91 81       	ldd	r25, Z+1	; 0x01
    3b02:	8d 93       	st	X+, r24
    3b04:	9c 93       	st	X, r25
    3b06:	fe 01       	movw	r30, r28
    3b08:	e9 5b       	subi	r30, 0xB9	; 185
    3b0a:	ff 4f       	sbci	r31, 0xFF	; 255
    3b0c:	80 81       	ld	r24, Z
    3b0e:	91 81       	ldd	r25, Z+1	; 0x01
    3b10:	01 97       	sbiw	r24, 0x01	; 1
    3b12:	f1 f7       	brne	.-4      	; 0x3b10 <FUN_RIGHT+0xfdc>
    3b14:	fe 01       	movw	r30, r28
    3b16:	e9 5b       	subi	r30, 0xB9	; 185
    3b18:	ff 4f       	sbci	r31, 0xFF	; 255
    3b1a:	91 83       	std	Z+1, r25	; 0x01
    3b1c:	80 83       	st	Z, r24
	_delay_ms(50);
	DIO__CheckStatusSetPinValue(DIO__UINT8_PORTA,DIO__UINT8_PIN5,DIO__UINT8_LOW);
    3b1e:	80 e0       	ldi	r24, 0x00	; 0
    3b20:	65 e0       	ldi	r22, 0x05	; 5
    3b22:	40 e0       	ldi	r20, 0x00	; 0
    3b24:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <DIO__CheckStatusSetPinValue>
    3b28:	fe 01       	movw	r30, r28
    3b2a:	ed 5b       	subi	r30, 0xBD	; 189
    3b2c:	ff 4f       	sbci	r31, 0xFF	; 255
    3b2e:	80 e0       	ldi	r24, 0x00	; 0
    3b30:	90 e0       	ldi	r25, 0x00	; 0
    3b32:	a8 e4       	ldi	r26, 0x48	; 72
    3b34:	b2 e4       	ldi	r27, 0x42	; 66
    3b36:	80 83       	st	Z, r24
    3b38:	91 83       	std	Z+1, r25	; 0x01
    3b3a:	a2 83       	std	Z+2, r26	; 0x02
    3b3c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3b3e:	8e 01       	movw	r16, r28
    3b40:	01 5c       	subi	r16, 0xC1	; 193
    3b42:	1f 4f       	sbci	r17, 0xFF	; 255
    3b44:	fe 01       	movw	r30, r28
    3b46:	ed 5b       	subi	r30, 0xBD	; 189
    3b48:	ff 4f       	sbci	r31, 0xFF	; 255
    3b4a:	60 81       	ld	r22, Z
    3b4c:	71 81       	ldd	r23, Z+1	; 0x01
    3b4e:	82 81       	ldd	r24, Z+2	; 0x02
    3b50:	93 81       	ldd	r25, Z+3	; 0x03
    3b52:	20 e0       	ldi	r18, 0x00	; 0
    3b54:	30 e0       	ldi	r19, 0x00	; 0
    3b56:	4a ef       	ldi	r20, 0xFA	; 250
    3b58:	54 e4       	ldi	r21, 0x44	; 68
    3b5a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3b5e:	dc 01       	movw	r26, r24
    3b60:	cb 01       	movw	r24, r22
    3b62:	f8 01       	movw	r30, r16
    3b64:	80 83       	st	Z, r24
    3b66:	91 83       	std	Z+1, r25	; 0x01
    3b68:	a2 83       	std	Z+2, r26	; 0x02
    3b6a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3b6c:	fe 01       	movw	r30, r28
    3b6e:	ff 96       	adiw	r30, 0x3f	; 63
    3b70:	60 81       	ld	r22, Z
    3b72:	71 81       	ldd	r23, Z+1	; 0x01
    3b74:	82 81       	ldd	r24, Z+2	; 0x02
    3b76:	93 81       	ldd	r25, Z+3	; 0x03
    3b78:	20 e0       	ldi	r18, 0x00	; 0
    3b7a:	30 e0       	ldi	r19, 0x00	; 0
    3b7c:	40 e8       	ldi	r20, 0x80	; 128
    3b7e:	5f e3       	ldi	r21, 0x3F	; 63
    3b80:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3b84:	88 23       	and	r24, r24
    3b86:	2c f4       	brge	.+10     	; 0x3b92 <FUN_RIGHT+0x105e>
		__ticks = 1;
    3b88:	81 e0       	ldi	r24, 0x01	; 1
    3b8a:	90 e0       	ldi	r25, 0x00	; 0
    3b8c:	9e af       	std	Y+62, r25	; 0x3e
    3b8e:	8d af       	std	Y+61, r24	; 0x3d
    3b90:	46 c0       	rjmp	.+140    	; 0x3c1e <FUN_RIGHT+0x10ea>
	else if (__tmp > 65535)
    3b92:	fe 01       	movw	r30, r28
    3b94:	ff 96       	adiw	r30, 0x3f	; 63
    3b96:	60 81       	ld	r22, Z
    3b98:	71 81       	ldd	r23, Z+1	; 0x01
    3b9a:	82 81       	ldd	r24, Z+2	; 0x02
    3b9c:	93 81       	ldd	r25, Z+3	; 0x03
    3b9e:	20 e0       	ldi	r18, 0x00	; 0
    3ba0:	3f ef       	ldi	r19, 0xFF	; 255
    3ba2:	4f e7       	ldi	r20, 0x7F	; 127
    3ba4:	57 e4       	ldi	r21, 0x47	; 71
    3ba6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3baa:	18 16       	cp	r1, r24
    3bac:	64 f5       	brge	.+88     	; 0x3c06 <FUN_RIGHT+0x10d2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3bae:	fe 01       	movw	r30, r28
    3bb0:	ed 5b       	subi	r30, 0xBD	; 189
    3bb2:	ff 4f       	sbci	r31, 0xFF	; 255
    3bb4:	60 81       	ld	r22, Z
    3bb6:	71 81       	ldd	r23, Z+1	; 0x01
    3bb8:	82 81       	ldd	r24, Z+2	; 0x02
    3bba:	93 81       	ldd	r25, Z+3	; 0x03
    3bbc:	20 e0       	ldi	r18, 0x00	; 0
    3bbe:	30 e0       	ldi	r19, 0x00	; 0
    3bc0:	40 e2       	ldi	r20, 0x20	; 32
    3bc2:	51 e4       	ldi	r21, 0x41	; 65
    3bc4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3bc8:	dc 01       	movw	r26, r24
    3bca:	cb 01       	movw	r24, r22
    3bcc:	bc 01       	movw	r22, r24
    3bce:	cd 01       	movw	r24, r26
    3bd0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3bd4:	dc 01       	movw	r26, r24
    3bd6:	cb 01       	movw	r24, r22
    3bd8:	9e af       	std	Y+62, r25	; 0x3e
    3bda:	8d af       	std	Y+61, r24	; 0x3d
    3bdc:	0f c0       	rjmp	.+30     	; 0x3bfc <FUN_RIGHT+0x10c8>
    3bde:	88 ec       	ldi	r24, 0xC8	; 200
    3be0:	90 e0       	ldi	r25, 0x00	; 0
    3be2:	9c af       	std	Y+60, r25	; 0x3c
    3be4:	8b af       	std	Y+59, r24	; 0x3b
    3be6:	8b ad       	ldd	r24, Y+59	; 0x3b
    3be8:	9c ad       	ldd	r25, Y+60	; 0x3c
    3bea:	01 97       	sbiw	r24, 0x01	; 1
    3bec:	f1 f7       	brne	.-4      	; 0x3bea <FUN_RIGHT+0x10b6>
    3bee:	9c af       	std	Y+60, r25	; 0x3c
    3bf0:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3bf2:	8d ad       	ldd	r24, Y+61	; 0x3d
    3bf4:	9e ad       	ldd	r25, Y+62	; 0x3e
    3bf6:	01 97       	sbiw	r24, 0x01	; 1
    3bf8:	9e af       	std	Y+62, r25	; 0x3e
    3bfa:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3bfc:	8d ad       	ldd	r24, Y+61	; 0x3d
    3bfe:	9e ad       	ldd	r25, Y+62	; 0x3e
    3c00:	00 97       	sbiw	r24, 0x00	; 0
    3c02:	69 f7       	brne	.-38     	; 0x3bde <FUN_RIGHT+0x10aa>
    3c04:	16 c0       	rjmp	.+44     	; 0x3c32 <FUN_RIGHT+0x10fe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3c06:	fe 01       	movw	r30, r28
    3c08:	ff 96       	adiw	r30, 0x3f	; 63
    3c0a:	60 81       	ld	r22, Z
    3c0c:	71 81       	ldd	r23, Z+1	; 0x01
    3c0e:	82 81       	ldd	r24, Z+2	; 0x02
    3c10:	93 81       	ldd	r25, Z+3	; 0x03
    3c12:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3c16:	dc 01       	movw	r26, r24
    3c18:	cb 01       	movw	r24, r22
    3c1a:	9e af       	std	Y+62, r25	; 0x3e
    3c1c:	8d af       	std	Y+61, r24	; 0x3d
    3c1e:	8d ad       	ldd	r24, Y+61	; 0x3d
    3c20:	9e ad       	ldd	r25, Y+62	; 0x3e
    3c22:	9a af       	std	Y+58, r25	; 0x3a
    3c24:	89 af       	std	Y+57, r24	; 0x39
    3c26:	89 ad       	ldd	r24, Y+57	; 0x39
    3c28:	9a ad       	ldd	r25, Y+58	; 0x3a
    3c2a:	01 97       	sbiw	r24, 0x01	; 1
    3c2c:	f1 f7       	brne	.-4      	; 0x3c2a <FUN_RIGHT+0x10f6>
    3c2e:	9a af       	std	Y+58, r25	; 0x3a
    3c30:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(50);
	DIO__CheckStatusSetPinValue(DIO__UINT8_PORTA,DIO__UINT8_PIN6,DIO__UINT8_HIGH);
    3c32:	80 e0       	ldi	r24, 0x00	; 0
    3c34:	66 e0       	ldi	r22, 0x06	; 6
    3c36:	41 e0       	ldi	r20, 0x01	; 1
    3c38:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <DIO__CheckStatusSetPinValue>
    3c3c:	80 e0       	ldi	r24, 0x00	; 0
    3c3e:	90 e0       	ldi	r25, 0x00	; 0
    3c40:	a8 e4       	ldi	r26, 0x48	; 72
    3c42:	b2 e4       	ldi	r27, 0x42	; 66
    3c44:	8d ab       	std	Y+53, r24	; 0x35
    3c46:	9e ab       	std	Y+54, r25	; 0x36
    3c48:	af ab       	std	Y+55, r26	; 0x37
    3c4a:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3c4c:	6d a9       	ldd	r22, Y+53	; 0x35
    3c4e:	7e a9       	ldd	r23, Y+54	; 0x36
    3c50:	8f a9       	ldd	r24, Y+55	; 0x37
    3c52:	98 ad       	ldd	r25, Y+56	; 0x38
    3c54:	20 e0       	ldi	r18, 0x00	; 0
    3c56:	30 e0       	ldi	r19, 0x00	; 0
    3c58:	4a ef       	ldi	r20, 0xFA	; 250
    3c5a:	54 e4       	ldi	r21, 0x44	; 68
    3c5c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3c60:	dc 01       	movw	r26, r24
    3c62:	cb 01       	movw	r24, r22
    3c64:	89 ab       	std	Y+49, r24	; 0x31
    3c66:	9a ab       	std	Y+50, r25	; 0x32
    3c68:	ab ab       	std	Y+51, r26	; 0x33
    3c6a:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    3c6c:	69 a9       	ldd	r22, Y+49	; 0x31
    3c6e:	7a a9       	ldd	r23, Y+50	; 0x32
    3c70:	8b a9       	ldd	r24, Y+51	; 0x33
    3c72:	9c a9       	ldd	r25, Y+52	; 0x34
    3c74:	20 e0       	ldi	r18, 0x00	; 0
    3c76:	30 e0       	ldi	r19, 0x00	; 0
    3c78:	40 e8       	ldi	r20, 0x80	; 128
    3c7a:	5f e3       	ldi	r21, 0x3F	; 63
    3c7c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3c80:	88 23       	and	r24, r24
    3c82:	2c f4       	brge	.+10     	; 0x3c8e <FUN_RIGHT+0x115a>
		__ticks = 1;
    3c84:	81 e0       	ldi	r24, 0x01	; 1
    3c86:	90 e0       	ldi	r25, 0x00	; 0
    3c88:	98 ab       	std	Y+48, r25	; 0x30
    3c8a:	8f a7       	std	Y+47, r24	; 0x2f
    3c8c:	3f c0       	rjmp	.+126    	; 0x3d0c <FUN_RIGHT+0x11d8>
	else if (__tmp > 65535)
    3c8e:	69 a9       	ldd	r22, Y+49	; 0x31
    3c90:	7a a9       	ldd	r23, Y+50	; 0x32
    3c92:	8b a9       	ldd	r24, Y+51	; 0x33
    3c94:	9c a9       	ldd	r25, Y+52	; 0x34
    3c96:	20 e0       	ldi	r18, 0x00	; 0
    3c98:	3f ef       	ldi	r19, 0xFF	; 255
    3c9a:	4f e7       	ldi	r20, 0x7F	; 127
    3c9c:	57 e4       	ldi	r21, 0x47	; 71
    3c9e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3ca2:	18 16       	cp	r1, r24
    3ca4:	4c f5       	brge	.+82     	; 0x3cf8 <FUN_RIGHT+0x11c4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3ca6:	6d a9       	ldd	r22, Y+53	; 0x35
    3ca8:	7e a9       	ldd	r23, Y+54	; 0x36
    3caa:	8f a9       	ldd	r24, Y+55	; 0x37
    3cac:	98 ad       	ldd	r25, Y+56	; 0x38
    3cae:	20 e0       	ldi	r18, 0x00	; 0
    3cb0:	30 e0       	ldi	r19, 0x00	; 0
    3cb2:	40 e2       	ldi	r20, 0x20	; 32
    3cb4:	51 e4       	ldi	r21, 0x41	; 65
    3cb6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3cba:	dc 01       	movw	r26, r24
    3cbc:	cb 01       	movw	r24, r22
    3cbe:	bc 01       	movw	r22, r24
    3cc0:	cd 01       	movw	r24, r26
    3cc2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3cc6:	dc 01       	movw	r26, r24
    3cc8:	cb 01       	movw	r24, r22
    3cca:	98 ab       	std	Y+48, r25	; 0x30
    3ccc:	8f a7       	std	Y+47, r24	; 0x2f
    3cce:	0f c0       	rjmp	.+30     	; 0x3cee <FUN_RIGHT+0x11ba>
    3cd0:	88 ec       	ldi	r24, 0xC8	; 200
    3cd2:	90 e0       	ldi	r25, 0x00	; 0
    3cd4:	9e a7       	std	Y+46, r25	; 0x2e
    3cd6:	8d a7       	std	Y+45, r24	; 0x2d
    3cd8:	8d a5       	ldd	r24, Y+45	; 0x2d
    3cda:	9e a5       	ldd	r25, Y+46	; 0x2e
    3cdc:	01 97       	sbiw	r24, 0x01	; 1
    3cde:	f1 f7       	brne	.-4      	; 0x3cdc <FUN_RIGHT+0x11a8>
    3ce0:	9e a7       	std	Y+46, r25	; 0x2e
    3ce2:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3ce4:	8f a5       	ldd	r24, Y+47	; 0x2f
    3ce6:	98 a9       	ldd	r25, Y+48	; 0x30
    3ce8:	01 97       	sbiw	r24, 0x01	; 1
    3cea:	98 ab       	std	Y+48, r25	; 0x30
    3cec:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3cee:	8f a5       	ldd	r24, Y+47	; 0x2f
    3cf0:	98 a9       	ldd	r25, Y+48	; 0x30
    3cf2:	00 97       	sbiw	r24, 0x00	; 0
    3cf4:	69 f7       	brne	.-38     	; 0x3cd0 <FUN_RIGHT+0x119c>
    3cf6:	14 c0       	rjmp	.+40     	; 0x3d20 <FUN_RIGHT+0x11ec>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3cf8:	69 a9       	ldd	r22, Y+49	; 0x31
    3cfa:	7a a9       	ldd	r23, Y+50	; 0x32
    3cfc:	8b a9       	ldd	r24, Y+51	; 0x33
    3cfe:	9c a9       	ldd	r25, Y+52	; 0x34
    3d00:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3d04:	dc 01       	movw	r26, r24
    3d06:	cb 01       	movw	r24, r22
    3d08:	98 ab       	std	Y+48, r25	; 0x30
    3d0a:	8f a7       	std	Y+47, r24	; 0x2f
    3d0c:	8f a5       	ldd	r24, Y+47	; 0x2f
    3d0e:	98 a9       	ldd	r25, Y+48	; 0x30
    3d10:	9c a7       	std	Y+44, r25	; 0x2c
    3d12:	8b a7       	std	Y+43, r24	; 0x2b
    3d14:	8b a5       	ldd	r24, Y+43	; 0x2b
    3d16:	9c a5       	ldd	r25, Y+44	; 0x2c
    3d18:	01 97       	sbiw	r24, 0x01	; 1
    3d1a:	f1 f7       	brne	.-4      	; 0x3d18 <FUN_RIGHT+0x11e4>
    3d1c:	9c a7       	std	Y+44, r25	; 0x2c
    3d1e:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(50);
	DIO__CheckStatusSetPinValue(DIO__UINT8_PORTA,DIO__UINT8_PIN6,DIO__UINT8_LOW);
    3d20:	80 e0       	ldi	r24, 0x00	; 0
    3d22:	66 e0       	ldi	r22, 0x06	; 6
    3d24:	40 e0       	ldi	r20, 0x00	; 0
    3d26:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <DIO__CheckStatusSetPinValue>
    3d2a:	80 e0       	ldi	r24, 0x00	; 0
    3d2c:	90 e0       	ldi	r25, 0x00	; 0
    3d2e:	a8 e4       	ldi	r26, 0x48	; 72
    3d30:	b2 e4       	ldi	r27, 0x42	; 66
    3d32:	8f a3       	std	Y+39, r24	; 0x27
    3d34:	98 a7       	std	Y+40, r25	; 0x28
    3d36:	a9 a7       	std	Y+41, r26	; 0x29
    3d38:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3d3a:	6f a1       	ldd	r22, Y+39	; 0x27
    3d3c:	78 a5       	ldd	r23, Y+40	; 0x28
    3d3e:	89 a5       	ldd	r24, Y+41	; 0x29
    3d40:	9a a5       	ldd	r25, Y+42	; 0x2a
    3d42:	20 e0       	ldi	r18, 0x00	; 0
    3d44:	30 e0       	ldi	r19, 0x00	; 0
    3d46:	4a ef       	ldi	r20, 0xFA	; 250
    3d48:	54 e4       	ldi	r21, 0x44	; 68
    3d4a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3d4e:	dc 01       	movw	r26, r24
    3d50:	cb 01       	movw	r24, r22
    3d52:	8b a3       	std	Y+35, r24	; 0x23
    3d54:	9c a3       	std	Y+36, r25	; 0x24
    3d56:	ad a3       	std	Y+37, r26	; 0x25
    3d58:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    3d5a:	6b a1       	ldd	r22, Y+35	; 0x23
    3d5c:	7c a1       	ldd	r23, Y+36	; 0x24
    3d5e:	8d a1       	ldd	r24, Y+37	; 0x25
    3d60:	9e a1       	ldd	r25, Y+38	; 0x26
    3d62:	20 e0       	ldi	r18, 0x00	; 0
    3d64:	30 e0       	ldi	r19, 0x00	; 0
    3d66:	40 e8       	ldi	r20, 0x80	; 128
    3d68:	5f e3       	ldi	r21, 0x3F	; 63
    3d6a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3d6e:	88 23       	and	r24, r24
    3d70:	2c f4       	brge	.+10     	; 0x3d7c <FUN_RIGHT+0x1248>
		__ticks = 1;
    3d72:	81 e0       	ldi	r24, 0x01	; 1
    3d74:	90 e0       	ldi	r25, 0x00	; 0
    3d76:	9a a3       	std	Y+34, r25	; 0x22
    3d78:	89 a3       	std	Y+33, r24	; 0x21
    3d7a:	3f c0       	rjmp	.+126    	; 0x3dfa <FUN_RIGHT+0x12c6>
	else if (__tmp > 65535)
    3d7c:	6b a1       	ldd	r22, Y+35	; 0x23
    3d7e:	7c a1       	ldd	r23, Y+36	; 0x24
    3d80:	8d a1       	ldd	r24, Y+37	; 0x25
    3d82:	9e a1       	ldd	r25, Y+38	; 0x26
    3d84:	20 e0       	ldi	r18, 0x00	; 0
    3d86:	3f ef       	ldi	r19, 0xFF	; 255
    3d88:	4f e7       	ldi	r20, 0x7F	; 127
    3d8a:	57 e4       	ldi	r21, 0x47	; 71
    3d8c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3d90:	18 16       	cp	r1, r24
    3d92:	4c f5       	brge	.+82     	; 0x3de6 <FUN_RIGHT+0x12b2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3d94:	6f a1       	ldd	r22, Y+39	; 0x27
    3d96:	78 a5       	ldd	r23, Y+40	; 0x28
    3d98:	89 a5       	ldd	r24, Y+41	; 0x29
    3d9a:	9a a5       	ldd	r25, Y+42	; 0x2a
    3d9c:	20 e0       	ldi	r18, 0x00	; 0
    3d9e:	30 e0       	ldi	r19, 0x00	; 0
    3da0:	40 e2       	ldi	r20, 0x20	; 32
    3da2:	51 e4       	ldi	r21, 0x41	; 65
    3da4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3da8:	dc 01       	movw	r26, r24
    3daa:	cb 01       	movw	r24, r22
    3dac:	bc 01       	movw	r22, r24
    3dae:	cd 01       	movw	r24, r26
    3db0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3db4:	dc 01       	movw	r26, r24
    3db6:	cb 01       	movw	r24, r22
    3db8:	9a a3       	std	Y+34, r25	; 0x22
    3dba:	89 a3       	std	Y+33, r24	; 0x21
    3dbc:	0f c0       	rjmp	.+30     	; 0x3ddc <FUN_RIGHT+0x12a8>
    3dbe:	88 ec       	ldi	r24, 0xC8	; 200
    3dc0:	90 e0       	ldi	r25, 0x00	; 0
    3dc2:	98 a3       	std	Y+32, r25	; 0x20
    3dc4:	8f 8f       	std	Y+31, r24	; 0x1f
    3dc6:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3dc8:	98 a1       	ldd	r25, Y+32	; 0x20
    3dca:	01 97       	sbiw	r24, 0x01	; 1
    3dcc:	f1 f7       	brne	.-4      	; 0x3dca <FUN_RIGHT+0x1296>
    3dce:	98 a3       	std	Y+32, r25	; 0x20
    3dd0:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3dd2:	89 a1       	ldd	r24, Y+33	; 0x21
    3dd4:	9a a1       	ldd	r25, Y+34	; 0x22
    3dd6:	01 97       	sbiw	r24, 0x01	; 1
    3dd8:	9a a3       	std	Y+34, r25	; 0x22
    3dda:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3ddc:	89 a1       	ldd	r24, Y+33	; 0x21
    3dde:	9a a1       	ldd	r25, Y+34	; 0x22
    3de0:	00 97       	sbiw	r24, 0x00	; 0
    3de2:	69 f7       	brne	.-38     	; 0x3dbe <FUN_RIGHT+0x128a>
    3de4:	14 c0       	rjmp	.+40     	; 0x3e0e <FUN_RIGHT+0x12da>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3de6:	6b a1       	ldd	r22, Y+35	; 0x23
    3de8:	7c a1       	ldd	r23, Y+36	; 0x24
    3dea:	8d a1       	ldd	r24, Y+37	; 0x25
    3dec:	9e a1       	ldd	r25, Y+38	; 0x26
    3dee:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3df2:	dc 01       	movw	r26, r24
    3df4:	cb 01       	movw	r24, r22
    3df6:	9a a3       	std	Y+34, r25	; 0x22
    3df8:	89 a3       	std	Y+33, r24	; 0x21
    3dfa:	89 a1       	ldd	r24, Y+33	; 0x21
    3dfc:	9a a1       	ldd	r25, Y+34	; 0x22
    3dfe:	9e 8f       	std	Y+30, r25	; 0x1e
    3e00:	8d 8f       	std	Y+29, r24	; 0x1d
    3e02:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3e04:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3e06:	01 97       	sbiw	r24, 0x01	; 1
    3e08:	f1 f7       	brne	.-4      	; 0x3e06 <FUN_RIGHT+0x12d2>
    3e0a:	9e 8f       	std	Y+30, r25	; 0x1e
    3e0c:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(50);
	DIO__CheckStatusSetPinValue(DIO__UINT8_PORTA,DIO__UINT8_PIN7,DIO__UINT8_HIGH);
    3e0e:	80 e0       	ldi	r24, 0x00	; 0
    3e10:	67 e0       	ldi	r22, 0x07	; 7
    3e12:	41 e0       	ldi	r20, 0x01	; 1
    3e14:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <DIO__CheckStatusSetPinValue>
    3e18:	80 e0       	ldi	r24, 0x00	; 0
    3e1a:	90 e0       	ldi	r25, 0x00	; 0
    3e1c:	a8 e4       	ldi	r26, 0x48	; 72
    3e1e:	b2 e4       	ldi	r27, 0x42	; 66
    3e20:	89 8f       	std	Y+25, r24	; 0x19
    3e22:	9a 8f       	std	Y+26, r25	; 0x1a
    3e24:	ab 8f       	std	Y+27, r26	; 0x1b
    3e26:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3e28:	69 8d       	ldd	r22, Y+25	; 0x19
    3e2a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3e2c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3e2e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3e30:	20 e0       	ldi	r18, 0x00	; 0
    3e32:	30 e0       	ldi	r19, 0x00	; 0
    3e34:	4a ef       	ldi	r20, 0xFA	; 250
    3e36:	54 e4       	ldi	r21, 0x44	; 68
    3e38:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3e3c:	dc 01       	movw	r26, r24
    3e3e:	cb 01       	movw	r24, r22
    3e40:	8d 8b       	std	Y+21, r24	; 0x15
    3e42:	9e 8b       	std	Y+22, r25	; 0x16
    3e44:	af 8b       	std	Y+23, r26	; 0x17
    3e46:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3e48:	6d 89       	ldd	r22, Y+21	; 0x15
    3e4a:	7e 89       	ldd	r23, Y+22	; 0x16
    3e4c:	8f 89       	ldd	r24, Y+23	; 0x17
    3e4e:	98 8d       	ldd	r25, Y+24	; 0x18
    3e50:	20 e0       	ldi	r18, 0x00	; 0
    3e52:	30 e0       	ldi	r19, 0x00	; 0
    3e54:	40 e8       	ldi	r20, 0x80	; 128
    3e56:	5f e3       	ldi	r21, 0x3F	; 63
    3e58:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3e5c:	88 23       	and	r24, r24
    3e5e:	2c f4       	brge	.+10     	; 0x3e6a <FUN_RIGHT+0x1336>
		__ticks = 1;
    3e60:	81 e0       	ldi	r24, 0x01	; 1
    3e62:	90 e0       	ldi	r25, 0x00	; 0
    3e64:	9c 8b       	std	Y+20, r25	; 0x14
    3e66:	8b 8b       	std	Y+19, r24	; 0x13
    3e68:	3f c0       	rjmp	.+126    	; 0x3ee8 <FUN_RIGHT+0x13b4>
	else if (__tmp > 65535)
    3e6a:	6d 89       	ldd	r22, Y+21	; 0x15
    3e6c:	7e 89       	ldd	r23, Y+22	; 0x16
    3e6e:	8f 89       	ldd	r24, Y+23	; 0x17
    3e70:	98 8d       	ldd	r25, Y+24	; 0x18
    3e72:	20 e0       	ldi	r18, 0x00	; 0
    3e74:	3f ef       	ldi	r19, 0xFF	; 255
    3e76:	4f e7       	ldi	r20, 0x7F	; 127
    3e78:	57 e4       	ldi	r21, 0x47	; 71
    3e7a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3e7e:	18 16       	cp	r1, r24
    3e80:	4c f5       	brge	.+82     	; 0x3ed4 <FUN_RIGHT+0x13a0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3e82:	69 8d       	ldd	r22, Y+25	; 0x19
    3e84:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3e86:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3e88:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3e8a:	20 e0       	ldi	r18, 0x00	; 0
    3e8c:	30 e0       	ldi	r19, 0x00	; 0
    3e8e:	40 e2       	ldi	r20, 0x20	; 32
    3e90:	51 e4       	ldi	r21, 0x41	; 65
    3e92:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3e96:	dc 01       	movw	r26, r24
    3e98:	cb 01       	movw	r24, r22
    3e9a:	bc 01       	movw	r22, r24
    3e9c:	cd 01       	movw	r24, r26
    3e9e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3ea2:	dc 01       	movw	r26, r24
    3ea4:	cb 01       	movw	r24, r22
    3ea6:	9c 8b       	std	Y+20, r25	; 0x14
    3ea8:	8b 8b       	std	Y+19, r24	; 0x13
    3eaa:	0f c0       	rjmp	.+30     	; 0x3eca <FUN_RIGHT+0x1396>
    3eac:	88 ec       	ldi	r24, 0xC8	; 200
    3eae:	90 e0       	ldi	r25, 0x00	; 0
    3eb0:	9a 8b       	std	Y+18, r25	; 0x12
    3eb2:	89 8b       	std	Y+17, r24	; 0x11
    3eb4:	89 89       	ldd	r24, Y+17	; 0x11
    3eb6:	9a 89       	ldd	r25, Y+18	; 0x12
    3eb8:	01 97       	sbiw	r24, 0x01	; 1
    3eba:	f1 f7       	brne	.-4      	; 0x3eb8 <FUN_RIGHT+0x1384>
    3ebc:	9a 8b       	std	Y+18, r25	; 0x12
    3ebe:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3ec0:	8b 89       	ldd	r24, Y+19	; 0x13
    3ec2:	9c 89       	ldd	r25, Y+20	; 0x14
    3ec4:	01 97       	sbiw	r24, 0x01	; 1
    3ec6:	9c 8b       	std	Y+20, r25	; 0x14
    3ec8:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3eca:	8b 89       	ldd	r24, Y+19	; 0x13
    3ecc:	9c 89       	ldd	r25, Y+20	; 0x14
    3ece:	00 97       	sbiw	r24, 0x00	; 0
    3ed0:	69 f7       	brne	.-38     	; 0x3eac <FUN_RIGHT+0x1378>
    3ed2:	14 c0       	rjmp	.+40     	; 0x3efc <FUN_RIGHT+0x13c8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3ed4:	6d 89       	ldd	r22, Y+21	; 0x15
    3ed6:	7e 89       	ldd	r23, Y+22	; 0x16
    3ed8:	8f 89       	ldd	r24, Y+23	; 0x17
    3eda:	98 8d       	ldd	r25, Y+24	; 0x18
    3edc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3ee0:	dc 01       	movw	r26, r24
    3ee2:	cb 01       	movw	r24, r22
    3ee4:	9c 8b       	std	Y+20, r25	; 0x14
    3ee6:	8b 8b       	std	Y+19, r24	; 0x13
    3ee8:	8b 89       	ldd	r24, Y+19	; 0x13
    3eea:	9c 89       	ldd	r25, Y+20	; 0x14
    3eec:	98 8b       	std	Y+16, r25	; 0x10
    3eee:	8f 87       	std	Y+15, r24	; 0x0f
    3ef0:	8f 85       	ldd	r24, Y+15	; 0x0f
    3ef2:	98 89       	ldd	r25, Y+16	; 0x10
    3ef4:	01 97       	sbiw	r24, 0x01	; 1
    3ef6:	f1 f7       	brne	.-4      	; 0x3ef4 <FUN_RIGHT+0x13c0>
    3ef8:	98 8b       	std	Y+16, r25	; 0x10
    3efa:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(50);
	DIO__CheckStatusSetPinValue(DIO__UINT8_PORTA,DIO__UINT8_PIN7,DIO__UINT8_LOW);
    3efc:	80 e0       	ldi	r24, 0x00	; 0
    3efe:	67 e0       	ldi	r22, 0x07	; 7
    3f00:	40 e0       	ldi	r20, 0x00	; 0
    3f02:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <DIO__CheckStatusSetPinValue>
    3f06:	80 e0       	ldi	r24, 0x00	; 0
    3f08:	90 e0       	ldi	r25, 0x00	; 0
    3f0a:	a8 e4       	ldi	r26, 0x48	; 72
    3f0c:	b2 e4       	ldi	r27, 0x42	; 66
    3f0e:	8b 87       	std	Y+11, r24	; 0x0b
    3f10:	9c 87       	std	Y+12, r25	; 0x0c
    3f12:	ad 87       	std	Y+13, r26	; 0x0d
    3f14:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3f16:	6b 85       	ldd	r22, Y+11	; 0x0b
    3f18:	7c 85       	ldd	r23, Y+12	; 0x0c
    3f1a:	8d 85       	ldd	r24, Y+13	; 0x0d
    3f1c:	9e 85       	ldd	r25, Y+14	; 0x0e
    3f1e:	20 e0       	ldi	r18, 0x00	; 0
    3f20:	30 e0       	ldi	r19, 0x00	; 0
    3f22:	4a ef       	ldi	r20, 0xFA	; 250
    3f24:	54 e4       	ldi	r21, 0x44	; 68
    3f26:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3f2a:	dc 01       	movw	r26, r24
    3f2c:	cb 01       	movw	r24, r22
    3f2e:	8f 83       	std	Y+7, r24	; 0x07
    3f30:	98 87       	std	Y+8, r25	; 0x08
    3f32:	a9 87       	std	Y+9, r26	; 0x09
    3f34:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3f36:	6f 81       	ldd	r22, Y+7	; 0x07
    3f38:	78 85       	ldd	r23, Y+8	; 0x08
    3f3a:	89 85       	ldd	r24, Y+9	; 0x09
    3f3c:	9a 85       	ldd	r25, Y+10	; 0x0a
    3f3e:	20 e0       	ldi	r18, 0x00	; 0
    3f40:	30 e0       	ldi	r19, 0x00	; 0
    3f42:	40 e8       	ldi	r20, 0x80	; 128
    3f44:	5f e3       	ldi	r21, 0x3F	; 63
    3f46:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3f4a:	88 23       	and	r24, r24
    3f4c:	2c f4       	brge	.+10     	; 0x3f58 <FUN_RIGHT+0x1424>
		__ticks = 1;
    3f4e:	81 e0       	ldi	r24, 0x01	; 1
    3f50:	90 e0       	ldi	r25, 0x00	; 0
    3f52:	9e 83       	std	Y+6, r25	; 0x06
    3f54:	8d 83       	std	Y+5, r24	; 0x05
    3f56:	3f c0       	rjmp	.+126    	; 0x3fd6 <FUN_RIGHT+0x14a2>
	else if (__tmp > 65535)
    3f58:	6f 81       	ldd	r22, Y+7	; 0x07
    3f5a:	78 85       	ldd	r23, Y+8	; 0x08
    3f5c:	89 85       	ldd	r24, Y+9	; 0x09
    3f5e:	9a 85       	ldd	r25, Y+10	; 0x0a
    3f60:	20 e0       	ldi	r18, 0x00	; 0
    3f62:	3f ef       	ldi	r19, 0xFF	; 255
    3f64:	4f e7       	ldi	r20, 0x7F	; 127
    3f66:	57 e4       	ldi	r21, 0x47	; 71
    3f68:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3f6c:	18 16       	cp	r1, r24
    3f6e:	4c f5       	brge	.+82     	; 0x3fc2 <FUN_RIGHT+0x148e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3f70:	6b 85       	ldd	r22, Y+11	; 0x0b
    3f72:	7c 85       	ldd	r23, Y+12	; 0x0c
    3f74:	8d 85       	ldd	r24, Y+13	; 0x0d
    3f76:	9e 85       	ldd	r25, Y+14	; 0x0e
    3f78:	20 e0       	ldi	r18, 0x00	; 0
    3f7a:	30 e0       	ldi	r19, 0x00	; 0
    3f7c:	40 e2       	ldi	r20, 0x20	; 32
    3f7e:	51 e4       	ldi	r21, 0x41	; 65
    3f80:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3f84:	dc 01       	movw	r26, r24
    3f86:	cb 01       	movw	r24, r22
    3f88:	bc 01       	movw	r22, r24
    3f8a:	cd 01       	movw	r24, r26
    3f8c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3f90:	dc 01       	movw	r26, r24
    3f92:	cb 01       	movw	r24, r22
    3f94:	9e 83       	std	Y+6, r25	; 0x06
    3f96:	8d 83       	std	Y+5, r24	; 0x05
    3f98:	0f c0       	rjmp	.+30     	; 0x3fb8 <FUN_RIGHT+0x1484>
    3f9a:	88 ec       	ldi	r24, 0xC8	; 200
    3f9c:	90 e0       	ldi	r25, 0x00	; 0
    3f9e:	9c 83       	std	Y+4, r25	; 0x04
    3fa0:	8b 83       	std	Y+3, r24	; 0x03
    3fa2:	8b 81       	ldd	r24, Y+3	; 0x03
    3fa4:	9c 81       	ldd	r25, Y+4	; 0x04
    3fa6:	01 97       	sbiw	r24, 0x01	; 1
    3fa8:	f1 f7       	brne	.-4      	; 0x3fa6 <FUN_RIGHT+0x1472>
    3faa:	9c 83       	std	Y+4, r25	; 0x04
    3fac:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3fae:	8d 81       	ldd	r24, Y+5	; 0x05
    3fb0:	9e 81       	ldd	r25, Y+6	; 0x06
    3fb2:	01 97       	sbiw	r24, 0x01	; 1
    3fb4:	9e 83       	std	Y+6, r25	; 0x06
    3fb6:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3fb8:	8d 81       	ldd	r24, Y+5	; 0x05
    3fba:	9e 81       	ldd	r25, Y+6	; 0x06
    3fbc:	00 97       	sbiw	r24, 0x00	; 0
    3fbe:	69 f7       	brne	.-38     	; 0x3f9a <FUN_RIGHT+0x1466>
    3fc0:	14 c0       	rjmp	.+40     	; 0x3fea <FUN_RIGHT+0x14b6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3fc2:	6f 81       	ldd	r22, Y+7	; 0x07
    3fc4:	78 85       	ldd	r23, Y+8	; 0x08
    3fc6:	89 85       	ldd	r24, Y+9	; 0x09
    3fc8:	9a 85       	ldd	r25, Y+10	; 0x0a
    3fca:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3fce:	dc 01       	movw	r26, r24
    3fd0:	cb 01       	movw	r24, r22
    3fd2:	9e 83       	std	Y+6, r25	; 0x06
    3fd4:	8d 83       	std	Y+5, r24	; 0x05
    3fd6:	8d 81       	ldd	r24, Y+5	; 0x05
    3fd8:	9e 81       	ldd	r25, Y+6	; 0x06
    3fda:	9a 83       	std	Y+2, r25	; 0x02
    3fdc:	89 83       	std	Y+1, r24	; 0x01
    3fde:	89 81       	ldd	r24, Y+1	; 0x01
    3fe0:	9a 81       	ldd	r25, Y+2	; 0x02
    3fe2:	01 97       	sbiw	r24, 0x01	; 1
    3fe4:	f1 f7       	brne	.-4      	; 0x3fe2 <FUN_RIGHT+0x14ae>
    3fe6:	9a 83       	std	Y+2, r25	; 0x02
    3fe8:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(50);
}
    3fea:	c0 52       	subi	r28, 0x20	; 32
    3fec:	df 4f       	sbci	r29, 0xFF	; 255
    3fee:	0f b6       	in	r0, 0x3f	; 63
    3ff0:	f8 94       	cli
    3ff2:	de bf       	out	0x3e, r29	; 62
    3ff4:	0f be       	out	0x3f, r0	; 63
    3ff6:	cd bf       	out	0x3d, r28	; 61
    3ff8:	cf 91       	pop	r28
    3ffa:	df 91       	pop	r29
    3ffc:	1f 91       	pop	r17
    3ffe:	0f 91       	pop	r16
    4000:	08 95       	ret

00004002 <__prologue_saves__>:
    4002:	2f 92       	push	r2
    4004:	3f 92       	push	r3
    4006:	4f 92       	push	r4
    4008:	5f 92       	push	r5
    400a:	6f 92       	push	r6
    400c:	7f 92       	push	r7
    400e:	8f 92       	push	r8
    4010:	9f 92       	push	r9
    4012:	af 92       	push	r10
    4014:	bf 92       	push	r11
    4016:	cf 92       	push	r12
    4018:	df 92       	push	r13
    401a:	ef 92       	push	r14
    401c:	ff 92       	push	r15
    401e:	0f 93       	push	r16
    4020:	1f 93       	push	r17
    4022:	cf 93       	push	r28
    4024:	df 93       	push	r29
    4026:	cd b7       	in	r28, 0x3d	; 61
    4028:	de b7       	in	r29, 0x3e	; 62
    402a:	ca 1b       	sub	r28, r26
    402c:	db 0b       	sbc	r29, r27
    402e:	0f b6       	in	r0, 0x3f	; 63
    4030:	f8 94       	cli
    4032:	de bf       	out	0x3e, r29	; 62
    4034:	0f be       	out	0x3f, r0	; 63
    4036:	cd bf       	out	0x3d, r28	; 61
    4038:	09 94       	ijmp

0000403a <__epilogue_restores__>:
    403a:	2a 88       	ldd	r2, Y+18	; 0x12
    403c:	39 88       	ldd	r3, Y+17	; 0x11
    403e:	48 88       	ldd	r4, Y+16	; 0x10
    4040:	5f 84       	ldd	r5, Y+15	; 0x0f
    4042:	6e 84       	ldd	r6, Y+14	; 0x0e
    4044:	7d 84       	ldd	r7, Y+13	; 0x0d
    4046:	8c 84       	ldd	r8, Y+12	; 0x0c
    4048:	9b 84       	ldd	r9, Y+11	; 0x0b
    404a:	aa 84       	ldd	r10, Y+10	; 0x0a
    404c:	b9 84       	ldd	r11, Y+9	; 0x09
    404e:	c8 84       	ldd	r12, Y+8	; 0x08
    4050:	df 80       	ldd	r13, Y+7	; 0x07
    4052:	ee 80       	ldd	r14, Y+6	; 0x06
    4054:	fd 80       	ldd	r15, Y+5	; 0x05
    4056:	0c 81       	ldd	r16, Y+4	; 0x04
    4058:	1b 81       	ldd	r17, Y+3	; 0x03
    405a:	aa 81       	ldd	r26, Y+2	; 0x02
    405c:	b9 81       	ldd	r27, Y+1	; 0x01
    405e:	ce 0f       	add	r28, r30
    4060:	d1 1d       	adc	r29, r1
    4062:	0f b6       	in	r0, 0x3f	; 63
    4064:	f8 94       	cli
    4066:	de bf       	out	0x3e, r29	; 62
    4068:	0f be       	out	0x3f, r0	; 63
    406a:	cd bf       	out	0x3d, r28	; 61
    406c:	ed 01       	movw	r28, r26
    406e:	08 95       	ret

00004070 <_exit>:
    4070:	f8 94       	cli

00004072 <__stop_program>:
    4072:	ff cf       	rjmp	.-2      	; 0x4072 <__stop_program>
